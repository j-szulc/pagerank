<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
	<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
	<!-- NOTES:  -->
	<defs>
		<linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
			<stop stop-color="#eeeeee" offset="5%"/>
			<stop stop-color="#eeeeb0" offset="95%"/>
		</linearGradient>
	</defs>
	<style type="text/css">
		text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
		#search, #ignorecase { opacity:0.1; cursor:pointer; }
		#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
		#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
		#title { text-anchor:middle; font-size:17px}
		#unzoom { cursor:pointer; }
		#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
		.hide { display:none; }
		.parent { opacity:0.5; }
	</style>
	<script type="text/ecmascript">
		<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
	</script>
	<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"/>
	<text id="title" x="600.00" y="24">Flame Graph</text>
	<text id="details" x="10.00" y="693"></text>
	<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
	<text id="search" x="1090.00" y="24">Search</text>
	<text id="ignorecase" x="1174.00" y="24">ic</text>
	<text id="matched" x="1090.00" y="693"></text>
	<g id="frames">
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (5 samples, 0.61%)</title>
			<rect x="990.9" y="325" width="7.2" height="15.0" fill="rgb(227,112,9)" rx="2" ry="2"/>
			<text x="993.95" y="335.5"></text>
		</g>
		<g>
			<title>PageId::PageId (3 samples, 0.36%)</title>
			<rect x="1128.4" y="469" width="4.3" height="15.0" fill="rgb(243,81,17)" rx="2" ry="2"/>
			<text x="1131.42" y="479.5"></text>
		</g>
		<g>
			<title>std::_Hash_bytes (16 samples, 1.94%)</title>
			<rect x="711.7" y="85" width="22.9" height="15.0" fill="rgb(251,229,34)" rx="2" ry="2"/>
			<text x="714.70" y="95.5">s..</text>
		</g>
		<g>
			<title>std::operator+&lt;char, (1 samples, 0.12%)</title>
			<rect x="1084.0" y="565" width="1.5" height="15.0" fill="rgb(234,125,5)" rx="2" ry="2"/>
			<text x="1087.03" y="575.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.73%)</title>
			<rect x="203.3" y="101" width="8.6" height="15.0" fill="rgb(210,186,9)" rx="2" ry="2"/>
			<text x="206.33" y="111.5"></text>
		</g>
		<g>
			<title>PageIdHash::operator() (2 samples, 0.24%)</title>
			<rect x="555.6" y="133" width="2.9" height="15.0" fill="rgb(217,135,15)" rx="2" ry="2"/>
			<text x="558.61" y="143.5"></text>
		</g>
		<g>
			<title>__pthread_once_slow (3 samples, 0.36%)</title>
			<rect x="734.6" y="469" width="4.3" height="15.0" fill="rgb(212,102,12)" rx="2" ry="2"/>
			<text x="737.61" y="479.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1052.5" y="437" width="1.5" height="15.0" fill="rgb(208,100,7)" rx="2" ry="2"/>
			<text x="1055.52" y="447.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1076.9" y="565" width="1.4" height="15.0" fill="rgb(236,97,53)" rx="2" ry="2"/>
			<text x="1079.87" y="575.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1062.5" y="501" width="1.5" height="15.0" fill="rgb(248,129,42)" rx="2" ry="2"/>
			<text x="1065.55" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="189.0" y="229" width="8.6" height="15.0" fill="rgb(240,27,51)" rx="2" ry="2"/>
			<text x="192.00" y="239.5"></text>
		</g>
		<g>
			<title>Page::generateId (1 samples, 0.12%)</title>
			<rect x="1062.5" y="581" width="1.5" height="15.0" fill="rgb(241,62,51)" rx="2" ry="2"/>
			<text x="1065.55" y="591.5"></text>
		</g>
		<g>
			<title>unlink_chunk.constprop (2 samples, 0.24%)</title>
			<rect x="1002.4" y="357" width="2.9" height="15.0" fill="rgb(225,149,13)" rx="2" ry="2"/>
			<text x="1005.40" y="367.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="189.0" y="245" width="8.6" height="15.0" fill="rgb(220,201,46)" rx="2" ry="2"/>
			<text x="192.00" y="255.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.24%)</title>
			<rect x="1068.3" y="533" width="2.8" height="15.0" fill="rgb(218,84,25)" rx="2" ry="2"/>
			<text x="1071.28" y="543.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1049.7" y="549" width="1.4" height="15.0" fill="rgb(253,118,32)" rx="2" ry="2"/>
			<text x="1052.66" y="559.5"></text>
		</g>
		<g>
			<title>NetworkGenerator::generatePageFromNum (1 samples, 0.12%)</title>
			<rect x="1061.1" y="581" width="1.4" height="15.0" fill="rgb(249,153,18)" rx="2" ry="2"/>
			<text x="1064.12" y="591.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1066.8" y="437" width="1.5" height="15.0" fill="rgb(213,163,34)" rx="2" ry="2"/>
			<text x="1069.84" y="447.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1188.6" y="581" width="1.4" height="15.0" fill="rgb(251,25,40)" rx="2" ry="2"/>
			<text x="1191.57" y="591.5"></text>
		</g>
		<g>
			<title>std::vector&lt;Page, (1 samples, 0.12%)</title>
			<rect x="1052.5" y="597" width="1.5" height="15.0" fill="rgb(210,20,38)" rx="2" ry="2"/>
			<text x="1055.52" y="607.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1076.9" y="517" width="1.4" height="15.0" fill="rgb(225,42,45)" rx="2" ry="2"/>
			<text x="1079.87" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1085.5" y="549" width="1.4" height="15.0" fill="rgb(237,131,53)" rx="2" ry="2"/>
			<text x="1088.46" y="559.5"></text>
		</g>
		<g>
			<title>std::_Function_handler&lt;void (53 samples, 6.43%)</title>
			<rect x="197.6" y="245" width="75.9" height="15.0" fill="rgb(229,56,0)" rx="2" ry="2"/>
			<text x="200.60" y="255.5">std::_Fu..</text>
		</g>
		<g>
			<title>std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples, 0.73%)</title>
			<rect x="11.4" y="309" width="8.6" height="15.0" fill="rgb(247,14,32)" rx="2" ry="2"/>
			<text x="14.43" y="319.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1117.0" y="549" width="4.3" height="15.0" fill="rgb(240,39,34)" rx="2" ry="2"/>
			<text x="1119.97" y="559.5"></text>
		</g>
		<g>
			<title>std::operator==&lt;char&gt; (12 samples, 1.46%)</title>
			<rect x="233.4" y="69" width="17.2" height="15.0" fill="rgb(232,202,26)" rx="2" ry="2"/>
			<text x="236.40" y="79.5"></text>
		</g>
		<g>
			<title>_int_free (2 samples, 0.24%)</title>
			<rect x="979.5" y="485" width="2.9" height="15.0" fill="rgb(211,28,2)" rx="2" ry="2"/>
			<text x="982.49" y="495.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1187.1" y="421" width="1.5" height="15.0" fill="rgb(245,103,27)" rx="2" ry="2"/>
			<text x="1190.14" y="431.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (26 samples, 3.16%)</title>
			<rect x="1142.7" y="565" width="37.3" height="15.0" fill="rgb(251,211,19)" rx="2" ry="2"/>
			<text x="1145.74" y="575.5">std..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1114.1" y="533" width="2.9" height="15.0" fill="rgb(239,181,31)" rx="2" ry="2"/>
			<text x="1117.10" y="543.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="738.9" y="549" width="2.9" height="15.0" fill="rgb(248,83,4)" rx="2" ry="2"/>
			<text x="741.91" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="18.6" y="181" width="1.4" height="15.0" fill="rgb(234,151,48)" rx="2" ry="2"/>
			<text x="21.59" y="191.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;double, (177 samples, 21.48%)</title>
			<rect x="20.0" y="293" width="253.5" height="15.0" fill="rgb(223,221,33)" rx="2" ry="2"/>
			<text x="23.02" y="303.5">std::__invoke_impl&lt;double,</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="189.0" y="213" width="8.6" height="15.0" fill="rgb(254,165,9)" rx="2" ry="2"/>
			<text x="192.00" y="223.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="581" width="1.4" height="15.0" fill="rgb(216,188,32)" rx="2" ry="2"/>
			<text x="1054.09" y="591.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId*, (1 samples, 0.12%)</title>
			<rect x="1078.3" y="565" width="1.4" height="15.0" fill="rgb(251,133,35)" rx="2" ry="2"/>
			<text x="1081.30" y="575.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="269.2" y="101" width="1.4" height="15.0" fill="rgb(214,53,33)" rx="2" ry="2"/>
			<text x="272.20" y="111.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.12%)</title>
			<rect x="1071.1" y="469" width="1.5" height="15.0" fill="rgb(231,54,23)" rx="2" ry="2"/>
			<text x="1074.14" y="479.5"></text>
		</g>
		<g>
			<title>madvise (1 samples, 0.12%)</title>
			<rect x="10.0" y="613" width="1.4" height="15.0" fill="rgb(205,169,45)" rx="2" ry="2"/>
			<text x="13.00" y="623.5"></text>
		</g>
		<g>
			<title>memcpy@plt (1 samples, 0.12%)</title>
			<rect x="1131.3" y="325" width="1.4" height="15.0" fill="rgb(221,46,49)" rx="2" ry="2"/>
			<text x="1134.29" y="335.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (13 samples, 1.58%)</title>
			<rect x="1094.1" y="501" width="18.6" height="15.0" fill="rgb(216,160,53)" rx="2" ry="2"/>
			<text x="1097.05" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1048.2" y="549" width="1.5" height="15.0" fill="rgb(224,196,46)" rx="2" ry="2"/>
			<text x="1051.23" y="559.5"></text>
		</g>
		<g>
			<title>SimpleNetworkGenerator::generateNetworkOfSize (18 samples, 2.18%)</title>
			<rect x="1056.8" y="613" width="25.8" height="15.0" fill="rgb(250,35,18)" rx="2" ry="2"/>
			<text x="1059.82" y="623.5">S..</text>
		</g>
		<g>
			<title>PageId::operator== (20 samples, 2.43%)</title>
			<rect x="635.8" y="85" width="28.6" height="15.0" fill="rgb(216,85,35)" rx="2" ry="2"/>
			<text x="638.80" y="95.5">Pa..</text>
		</g>
		<g>
			<title>SimpleIdGenerator::generateId (1 samples, 0.12%)</title>
			<rect x="1062.5" y="565" width="1.5" height="15.0" fill="rgb(212,113,8)" rx="2" ry="2"/>
			<text x="1065.55" y="575.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1124.1" y="485" width="1.5" height="15.0" fill="rgb(254,195,53)" rx="2" ry="2"/>
			<text x="1127.13" y="495.5"></text>
		</g>
		<g>
			<title>std::call_once&lt;void (159 samples, 19.30%)</title>
			<rect x="743.2" y="517" width="227.7" height="15.0" fill="rgb(247,136,34)" rx="2" ry="2"/>
			<text x="746.20" y="527.5">std::call_once&lt;void</text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (16 samples, 1.94%)</title>
			<rect x="711.7" y="101" width="22.9" height="15.0" fill="rgb(248,142,27)" rx="2" ry="2"/>
			<text x="714.70" y="111.5">s..</text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (2 samples, 0.24%)</title>
			<rect x="555.6" y="101" width="2.9" height="15.0" fill="rgb(221,203,20)" rx="2" ry="2"/>
			<text x="558.61" y="111.5"></text>
		</g>
		<g>
			<title>std::_Construct&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="517" width="1.4" height="15.0" fill="rgb(238,200,3)" rx="2" ry="2"/>
			<text x="1085.60" y="527.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="581" width="1.4" height="15.0" fill="rgb(235,217,26)" rx="2" ry="2"/>
			<text x="1085.60" y="591.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1081.2" y="501" width="1.4" height="15.0" fill="rgb(224,79,25)" rx="2" ry="2"/>
			<text x="1084.17" y="511.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1188.6" y="565" width="1.4" height="15.0" fill="rgb(233,111,38)" rx="2" ry="2"/>
			<text x="1191.57" y="575.5"></text>
		</g>
		<g>
			<title>operator (5 samples, 0.61%)</title>
			<rect x="461.1" y="101" width="7.2" height="15.0" fill="rgb(222,219,30)" rx="2" ry="2"/>
			<text x="464.09" y="111.5"></text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="1072.6" y="485" width="2.8" height="15.0" fill="rgb(244,94,47)" rx="2" ry="2"/>
			<text x="1075.57" y="495.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (5 samples, 0.61%)</title>
			<rect x="990.9" y="389" width="7.2" height="15.0" fill="rgb(251,99,54)" rx="2" ry="2"/>
			<text x="993.95" y="399.5"></text>
		</g>
		<g>
			<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples, 21.48%)</title>
			<rect x="20.0" y="549" width="253.5" height="15.0" fill="rgb(212,93,33)" rx="2" ry="2"/>
			<text x="23.02" y="559.5">std::__invoke&lt;std::__future_base:..</text>
		</g>
		<g>
			<title>__gthread_mutex_lock (76 samples, 9.22%)</title>
			<rect x="300.7" y="213" width="108.8" height="15.0" fill="rgb(209,123,0)" rx="2" ry="2"/>
			<text x="303.70" y="223.5">__gthread_mut..</text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1079.7" y="517" width="1.5" height="15.0" fill="rgb(253,89,30)" rx="2" ry="2"/>
			<text x="1082.73" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="405" width="2.8" height="15.0" fill="rgb(224,41,48)" rx="2" ry="2"/>
			<text x="1061.25" y="415.5"></text>
		</g>
		<g>
			<title>std::__invoke_r&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (322 samples, 39.08%)</title>
			<rect x="273.5" y="389" width="461.1" height="15.0" fill="rgb(213,151,34)" rx="2" ry="2"/>
			<text x="276.50" y="399.5">std::__invoke_r&lt;std::unique_ptr&lt;std::__future_base::_Result_base,</text>
		</g>
		<g>
			<title>std::pair&lt;PageId (3 samples, 0.36%)</title>
			<rect x="1135.6" y="485" width="4.3" height="15.0" fill="rgb(238,141,25)" rx="2" ry="2"/>
			<text x="1138.58" y="495.5"></text>
		</g>
		<g>
			<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.12%)</title>
			<rect x="1078.3" y="533" width="1.4" height="15.0" fill="rgb(223,81,21)" rx="2" ry="2"/>
			<text x="1081.30" y="543.5"></text>
		</g>
		<g>
			<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (177 samples, 21.48%)</title>
			<rect x="20.0" y="405" width="253.5" height="15.0" fill="rgb(212,46,50)" rx="2" ry="2"/>
			<text x="23.02" y="415.5">std::_Function_handler&lt;std::uniqu..</text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="1114.1" y="501" width="2.9" height="15.0" fill="rgb(221,190,5)" rx="2" ry="2"/>
			<text x="1117.10" y="511.5"></text>
		</g>
		<g>
			<title>PageIdAndRank::PageIdAndRank (1 samples, 0.12%)</title>
			<rect x="1051.1" y="437" width="1.4" height="15.0" fill="rgb(236,22,8)" rx="2" ry="2"/>
			<text x="1054.09" y="447.5"></text>
		</g>
		<g>
			<title>Page::~Page (3 samples, 0.36%)</title>
			<rect x="1076.9" y="597" width="4.3" height="15.0" fill="rgb(237,41,16)" rx="2" ry="2"/>
			<text x="1079.87" y="607.5"></text>
		</g>
		<g>
			<title>__gthread_join (159 samples, 19.30%)</title>
			<rect x="743.2" y="453" width="227.7" height="15.0" fill="rgb(236,85,45)" rx="2" ry="2"/>
			<text x="746.20" y="463.5">__gthread_join</text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (5 samples, 0.61%)</title>
			<rect x="1013.9" y="501" width="7.1" height="15.0" fill="rgb(235,31,2)" rx="2" ry="2"/>
			<text x="1016.86" y="511.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (322 samples, 39.08%)</title>
			<rect x="273.5" y="277" width="461.1" height="15.0" fill="rgb(213,148,40)" rx="2" ry="2"/>
			<text x="276.50" y="287.5">MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId</text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="985.2" y="373" width="1.5" height="15.0" fill="rgb(235,148,17)" rx="2" ry="2"/>
			<text x="988.22" y="383.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="982.4" y="437" width="8.5" height="15.0" fill="rgb(230,73,12)" rx="2" ry="2"/>
			<text x="985.35" y="447.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (33 samples, 4.00%)</title>
			<rect x="664.4" y="133" width="47.3" height="15.0" fill="rgb(245,201,31)" rx="2" ry="2"/>
			<text x="667.44" y="143.5">std:..</text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples, 21.48%)</title>
			<rect x="20.0" y="341" width="253.5" height="15.0" fill="rgb(214,46,0)" rx="2" ry="2"/>
			<text x="23.02" y="351.5">std::thread::_Invoker&lt;std::tuple&lt;..</text>
		</g>
		<g>
			<title>std::operator+&lt;char, (1 samples, 0.12%)</title>
			<rect x="18.6" y="213" width="1.4" height="15.0" fill="rgb(245,162,17)" rx="2" ry="2"/>
			<text x="21.59" y="223.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1187.1" y="405" width="1.5" height="15.0" fill="rgb(242,183,6)" rx="2" ry="2"/>
			<text x="1190.14" y="415.5"></text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="996.7" y="261" width="1.4" height="15.0" fill="rgb(221,49,13)" rx="2" ry="2"/>
			<text x="999.67" y="271.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="18.6" y="149" width="1.4" height="15.0" fill="rgb(209,117,33)" rx="2" ry="2"/>
			<text x="21.59" y="159.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (13 samples, 1.58%)</title>
			<rect x="1094.1" y="469" width="18.6" height="15.0" fill="rgb(213,143,11)" rx="2" ry="2"/>
			<text x="1097.05" y="479.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1085.5" y="501" width="1.4" height="15.0" fill="rgb(208,104,39)" rx="2" ry="2"/>
			<text x="1088.46" y="511.5"></text>
		</g>
		<g>
			<title>Page::addLink (6 samples, 0.73%)</title>
			<rect x="1064.0" y="597" width="8.6" height="15.0" fill="rgb(242,203,48)" rx="2" ry="2"/>
			<text x="1066.98" y="607.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate (3 samples, 0.36%)</title>
			<rect x="1038.2" y="501" width="4.3" height="15.0" fill="rgb(229,65,20)" rx="2" ry="2"/>
			<text x="1041.20" y="511.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1052.5" y="485" width="1.5" height="15.0" fill="rgb(231,21,14)" rx="2" ry="2"/>
			<text x="1055.52" y="495.5"></text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="1135.6" y="341" width="1.4" height="15.0" fill="rgb(243,135,46)" rx="2" ry="2"/>
			<text x="1138.58" y="351.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (13 samples, 1.58%)</title>
			<rect x="1121.3" y="565" width="18.6" height="15.0" fill="rgb(224,28,6)" rx="2" ry="2"/>
			<text x="1124.26" y="575.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="558.5" y="133" width="1.4" height="15.0" fill="rgb(226,99,29)" rx="2" ry="2"/>
			<text x="561.47" y="143.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="269.2" y="181" width="4.3" height="15.0" fill="rgb(254,0,14)" rx="2" ry="2"/>
			<text x="272.20" y="191.5"></text>
		</g>
		<g>
			<title>main (318 samples, 38.59%)</title>
			<rect x="734.6" y="645" width="455.4" height="15.0" fill="rgb(210,29,37)" rx="2" ry="2"/>
			<text x="737.61" y="655.5">main</text>
		</g>
		<g>
			<title>unlink_chunk.constprop (1 samples, 0.12%)</title>
			<rect x="980.9" y="453" width="1.5" height="15.0" fill="rgb(214,60,4)" rx="2" ry="2"/>
			<text x="983.92" y="463.5"></text>
		</g>
		<g>
			<title>std::__relocate_a&lt;PageId*, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="517" width="1.5" height="15.0" fill="rgb(252,31,49)" rx="2" ry="2"/>
			<text x="1074.14" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="405" width="1.4" height="15.0" fill="rgb(248,166,14)" rx="2" ry="2"/>
			<text x="1054.09" y="415.5"></text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="1065.4" y="437" width="1.4" height="15.0" fill="rgb(217,149,28)" rx="2" ry="2"/>
			<text x="1068.41" y="447.5"></text>
		</g>
		<g>
			<title>std::function&lt;void (3 samples, 0.36%)</title>
			<rect x="15.7" y="261" width="4.3" height="15.0" fill="rgb(240,202,35)" rx="2" ry="2"/>
			<text x="18.73" y="271.5"></text>
		</g>
		<g>
			<title>std::mutex::unlock (34 samples, 4.13%)</title>
			<rect x="409.5" y="229" width="48.7" height="15.0" fill="rgb(235,21,32)" rx="2" ry="2"/>
			<text x="412.54" y="239.5">std:..</text>
		</g>
		<g>
			<title>std::vector&lt;Page, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="581" width="2.8" height="15.0" fill="rgb(243,185,16)" rx="2" ry="2"/>
			<text x="1061.25" y="591.5"></text>
		</g>
		<g>
			<title>__gthread_mutex_unlock (34 samples, 4.13%)</title>
			<rect x="409.5" y="213" width="48.7" height="15.0" fill="rgb(251,78,6)" rx="2" ry="2"/>
			<text x="412.54" y="223.5">__gt..</text>
		</g>
		<g>
			<title>std::operator==&lt;char&gt; (5 samples, 0.61%)</title>
			<rect x="1165.7" y="485" width="7.1" height="15.0" fill="rgb(228,201,28)" rx="2" ry="2"/>
			<text x="1168.66" y="495.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1048.2" y="501" width="1.5" height="15.0" fill="rgb(231,219,15)" rx="2" ry="2"/>
			<text x="1051.23" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="982.4" y="533" width="22.9" height="15.0" fill="rgb(238,18,39)" rx="2" ry="2"/>
			<text x="985.35" y="543.5">s..</text>
		</g>
		<g>
			<title>std::_Hash_bytes (2 samples, 0.24%)</title>
			<rect x="266.3" y="85" width="2.9" height="15.0" fill="rgb(207,114,42)" rx="2" ry="2"/>
			<text x="269.33" y="95.5"></text>
		</g>
		<g>
			<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.12%)</title>
			<rect x="1086.9" y="533" width="1.4" height="15.0" fill="rgb(233,140,50)" rx="2" ry="2"/>
			<text x="1089.89" y="543.5"></text>
		</g>
		<g>
			<title>std::__invoke_r&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (6 samples, 0.73%)</title>
			<rect x="11.4" y="389" width="8.6" height="15.0" fill="rgb(231,92,23)" rx="2" ry="2"/>
			<text x="14.43" y="399.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_commonV2::_M_join (3 samples, 0.36%)</title>
			<rect x="734.6" y="517" width="4.3" height="15.0" fill="rgb(216,88,15)" rx="2" ry="2"/>
			<text x="737.61" y="527.5"></text>
		</g>
		<g>
			<title>std::mutex::lock (73 samples, 8.86%)</title>
			<rect x="34.3" y="229" width="104.6" height="15.0" fill="rgb(206,18,52)" rx="2" ry="2"/>
			<text x="37.34" y="239.5">std::mutex::..</text>
		</g>
		<g>
			<title>malloc_consolidate (1 samples, 0.12%)</title>
			<rect x="1079.7" y="485" width="1.5" height="15.0" fill="rgb(244,17,1)" rx="2" ry="2"/>
			<text x="1082.73" y="495.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::construct&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="453" width="1.4" height="15.0" fill="rgb(247,32,0)" rx="2" ry="2"/>
			<text x="1054.09" y="463.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="373" width="2.8" height="15.0" fill="rgb(228,108,31)" rx="2" ry="2"/>
			<text x="1061.25" y="383.5"></text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="1068.3" y="485" width="2.8" height="15.0" fill="rgb(222,153,50)" rx="2" ry="2"/>
			<text x="1071.28" y="495.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.61%)</title>
			<rect x="1013.9" y="517" width="7.1" height="15.0" fill="rgb(234,62,7)" rx="2" ry="2"/>
			<text x="1016.86" y="527.5"></text>
		</g>
		<g>
			<title>PageId::PageId (1 samples, 0.12%)</title>
			<rect x="741.8" y="597" width="1.4" height="15.0" fill="rgb(228,22,30)" rx="2" ry="2"/>
			<text x="744.77" y="607.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1185.7" y="533" width="1.4" height="15.0" fill="rgb(221,146,53)" rx="2" ry="2"/>
			<text x="1188.70" y="543.5"></text>
		</g>
		<g>
			<title>std::__detail::_Map_base&lt;PageId, (122 samples, 14.81%)</title>
			<rect x="559.9" y="165" width="174.7" height="15.0" fill="rgb(244,156,38)" rx="2" ry="2"/>
			<text x="562.90" y="175.5">std::__detail::_Map_ba..</text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageIdAndRank*, (1 samples, 0.12%)</title>
			<rect x="1187.1" y="581" width="1.5" height="15.0" fill="rgb(242,41,31)" rx="2" ry="2"/>
			<text x="1190.14" y="591.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples, 21.48%)</title>
			<rect x="20.0" y="325" width="253.5" height="15.0" fill="rgb(209,198,39)" rx="2" ry="2"/>
			<text x="23.02" y="335.5">std::thread::_Invoker&lt;std::tuple&lt;..</text>
		</g>
		<g>
			<title>std::mutex::lock (2 samples, 0.24%)</title>
			<rect x="11.4" y="229" width="2.9" height="15.0" fill="rgb(210,112,21)" rx="2" ry="2"/>
			<text x="14.43" y="239.5"></text>
		</g>
		<g>
			<title>std::_Function_handler&lt;void (193 samples, 23.42%)</title>
			<rect x="458.2" y="245" width="276.4" height="15.0" fill="rgb(213,7,37)" rx="2" ry="2"/>
			<text x="461.23" y="255.5">std::_Function_handler&lt;void</text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.12%)</title>
			<rect x="1066.8" y="405" width="1.5" height="15.0" fill="rgb(237,116,6)" rx="2" ry="2"/>
			<text x="1069.84" y="415.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1085.5" y="533" width="1.4" height="15.0" fill="rgb(228,87,36)" rx="2" ry="2"/>
			<text x="1088.46" y="543.5"></text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (1 samples, 0.12%)</title>
			<rect x="1049.7" y="501" width="1.4" height="15.0" fill="rgb(233,114,28)" rx="2" ry="2"/>
			<text x="1052.66" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (10 samples, 1.21%)</title>
			<rect x="581.4" y="85" width="14.3" height="15.0" fill="rgb(228,136,13)" rx="2" ry="2"/>
			<text x="584.38" y="95.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.24%)</title>
			<rect x="1129.9" y="341" width="2.8" height="15.0" fill="rgb(228,139,44)" rx="2" ry="2"/>
			<text x="1132.85" y="351.5"></text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="1072.6" y="501" width="2.8" height="15.0" fill="rgb(223,162,21)" rx="2" ry="2"/>
			<text x="1075.57" y="511.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId*, (5 samples, 0.61%)</title>
			<rect x="990.9" y="453" width="7.2" height="15.0" fill="rgb(246,130,33)" rx="2" ry="2"/>
			<text x="993.95" y="463.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="193.3" y="149" width="4.3" height="15.0" fill="rgb(210,125,26)" rx="2" ry="2"/>
			<text x="196.30" y="159.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1135.6" y="469" width="1.4" height="15.0" fill="rgb(254,138,43)" rx="2" ry="2"/>
			<text x="1138.58" y="479.5"></text>
		</g>
		<g>
			<title>__gthread_mutex_unlock (35 samples, 4.25%)</title>
			<rect x="138.9" y="213" width="50.1" height="15.0" fill="rgb(252,25,3)" rx="2" ry="2"/>
			<text x="141.88" y="223.5">__gth..</text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1151.3" y="517" width="1.5" height="15.0" fill="rgb(234,99,28)" rx="2" ry="2"/>
			<text x="1154.33" y="527.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (3 samples, 0.36%)</title>
			<rect x="269.2" y="197" width="4.3" height="15.0" fill="rgb(223,207,34)" rx="2" ry="2"/>
			<text x="272.20" y="207.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::compare (12 samples, 1.46%)</title>
			<rect x="233.4" y="53" width="17.2" height="15.0" fill="rgb(243,89,17)" rx="2" ry="2"/>
			<text x="236.40" y="63.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (39 samples, 4.73%)</title>
			<rect x="458.2" y="165" width="55.9" height="15.0" fill="rgb(248,110,21)" rx="2" ry="2"/>
			<text x="461.23" y="175.5">std::..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1062.5" y="517" width="1.5" height="15.0" fill="rgb(219,80,42)" rx="2" ry="2"/>
			<text x="1065.55" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.97%)</title>
			<rect x="514.1" y="149" width="11.4" height="15.0" fill="rgb(249,183,2)" rx="2" ry="2"/>
			<text x="517.08" y="159.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="555.6" y="149" width="2.9" height="15.0" fill="rgb(211,143,38)" rx="2" ry="2"/>
			<text x="558.61" y="159.5"></text>
		</g>
		<g>
			<title>__gthread_once (177 samples, 21.48%)</title>
			<rect x="20.0" y="469" width="253.5" height="15.0" fill="rgb(249,147,9)" rx="2" ry="2"/>
			<text x="23.02" y="479.5">__gthread_once</text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (322 samples, 39.08%)</title>
			<rect x="273.5" y="501" width="461.1" height="15.0" fill="rgb(219,109,36)" rx="2" ry="2"/>
			<text x="276.50" y="511.5">std::__future_base::_State_baseV2::_M_set_result(std::function&lt;..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1112.7" y="565" width="1.4" height="15.0" fill="rgb(254,60,12)" rx="2" ry="2"/>
			<text x="1115.67" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="982.4" y="517" width="22.9" height="15.0" fill="rgb(254,129,27)" rx="2" ry="2"/>
			<text x="985.35" y="527.5">s..</text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (4 samples, 0.49%)</title>
			<rect x="1028.2" y="533" width="5.7" height="15.0" fill="rgb(220,202,14)" rx="2" ry="2"/>
			<text x="1031.18" y="543.5"></text>
		</g>
		<g>
			<title>_int_free (5 samples, 0.61%)</title>
			<rect x="514.1" y="85" width="7.1" height="15.0" fill="rgb(214,219,22)" rx="2" ry="2"/>
			<text x="517.08" y="95.5"></text>
		</g>
		<g>
			<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="276.4" y="229" width="22.9" height="15.0" fill="rgb(235,127,41)" rx="2" ry="2"/>
			<text x="279.36" y="239.5">s..</text>
		</g>
		<g>
			<title>std::_Hash_bytes (4 samples, 0.49%)</title>
			<rect x="1180.0" y="501" width="5.7" height="15.0" fill="rgb(252,88,5)" rx="2" ry="2"/>
			<text x="1182.98" y="511.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (322 samples, 39.08%)</title>
			<rect x="273.5" y="325" width="461.1" height="15.0" fill="rgb(223,39,29)" rx="2" ry="2"/>
			<text x="276.50" y="335.5">std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer:..</text>
		</g>
		<g>
			<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.12%)</title>
			<rect x="1082.6" y="533" width="1.4" height="15.0" fill="rgb(246,19,39)" rx="2" ry="2"/>
			<text x="1085.60" y="543.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1038.2" y="549" width="4.3" height="15.0" fill="rgb(231,100,17)" rx="2" ry="2"/>
			<text x="1041.20" y="559.5"></text>
		</g>
		<g>
			<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageIdAndRank*&gt; (1 samples, 0.12%)</title>
			<rect x="1187.1" y="549" width="1.5" height="15.0" fill="rgb(236,208,17)" rx="2" ry="2"/>
			<text x="1190.14" y="559.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1086.9" y="421" width="1.4" height="15.0" fill="rgb(217,138,19)" rx="2" ry="2"/>
			<text x="1089.89" y="431.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (14 samples, 1.70%)</title>
			<rect x="1152.8" y="533" width="20.0" height="15.0" fill="rgb(229,111,37)" rx="2" ry="2"/>
			<text x="1155.77" y="543.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (3 samples, 0.36%)</title>
			<rect x="269.2" y="117" width="4.3" height="15.0" fill="rgb(250,18,19)" rx="2" ry="2"/>
			<text x="272.20" y="127.5"></text>
		</g>
		<g>
			<title>_int_free (5 samples, 0.61%)</title>
			<rect x="998.1" y="389" width="7.2" height="15.0" fill="rgb(219,145,38)" rx="2" ry="2"/>
			<text x="1001.11" y="399.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;double&gt;, (322 samples, 39.08%)</title>
			<rect x="273.5" y="357" width="461.1" height="15.0" fill="rgb(232,212,8)" rx="2" ry="2"/>
			<text x="276.50" y="367.5">std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_..</text>
		</g>
		<g>
			<title>std::future&lt;double&gt;::get (159 samples, 19.30%)</title>
			<rect x="743.2" y="597" width="227.7" height="15.0" fill="rgb(224,152,7)" rx="2" ry="2"/>
			<text x="746.20" y="607.5">std::future&lt;double&gt;::get</text>
		</g>
		<g>
			<title>std::mutex::unlock (1 samples, 0.12%)</title>
			<rect x="14.3" y="229" width="1.4" height="15.0" fill="rgb(229,103,47)" rx="2" ry="2"/>
			<text x="17.30" y="239.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="549" width="1.4" height="15.0" fill="rgb(215,173,20)" rx="2" ry="2"/>
			<text x="1064.12" y="559.5"></text>
		</g>
		<g>
			<title>std::_Hash_bytes (1 samples, 0.12%)</title>
			<rect x="1049.7" y="485" width="1.4" height="15.0" fill="rgb(248,56,45)" rx="2" ry="2"/>
			<text x="1052.66" y="495.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1033.9" y="549" width="2.9" height="15.0" fill="rgb(213,136,51)" rx="2" ry="2"/>
			<text x="1036.91" y="559.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.49%)</title>
			<rect x="1127.0" y="517" width="5.7" height="15.0" fill="rgb(245,95,4)" rx="2" ry="2"/>
			<text x="1129.99" y="527.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (7 samples, 0.85%)</title>
			<rect x="545.6" y="133" width="10.0" height="15.0" fill="rgb(249,191,10)" rx="2" ry="2"/>
			<text x="548.58" y="143.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (8 samples, 0.97%)</title>
			<rect x="514.1" y="181" width="11.4" height="15.0" fill="rgb(208,138,38)" rx="2" ry="2"/>
			<text x="517.08" y="191.5"></text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (4 samples, 0.49%)</title>
			<rect x="1180.0" y="533" width="5.7" height="15.0" fill="rgb(223,100,21)" rx="2" ry="2"/>
			<text x="1182.98" y="543.5"></text>
		</g>
		<g>
			<title>std::__detail::_Map_base&lt;PageId, (30 samples, 3.64%)</title>
			<rect x="1142.7" y="581" width="43.0" height="15.0" fill="rgb(242,192,37)" rx="2" ry="2"/>
			<text x="1145.74" y="591.5">std:..</text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::compare (5 samples, 0.61%)</title>
			<rect x="1165.7" y="469" width="7.1" height="15.0" fill="rgb(205,221,7)" rx="2" ry="2"/>
			<text x="1168.66" y="479.5"></text>
		</g>
		<g>
			<title>PageId::PageId (1 samples, 0.12%)</title>
			<rect x="1051.1" y="421" width="1.4" height="15.0" fill="rgb(220,132,53)" rx="2" ry="2"/>
			<text x="1054.09" y="431.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="421" width="2.8" height="15.0" fill="rgb(247,207,52)" rx="2" ry="2"/>
			<text x="1061.25" y="431.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.61%)</title>
			<rect x="1158.5" y="517" width="7.2" height="15.0" fill="rgb(226,57,5)" rx="2" ry="2"/>
			<text x="1161.50" y="527.5"></text>
		</g>
		<g>
			<title>std::thread::join (159 samples, 19.30%)</title>
			<rect x="743.2" y="469" width="227.7" height="15.0" fill="rgb(219,203,46)" rx="2" ry="2"/>
			<text x="746.20" y="479.5">std::thread::join</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1085.5" y="565" width="1.4" height="15.0" fill="rgb(206,59,46)" rx="2" ry="2"/>
			<text x="1088.46" y="575.5"></text>
		</g>
		<g>
			<title>_int_free (2 samples, 0.24%)</title>
			<rect x="1137.0" y="389" width="2.9" height="15.0" fill="rgb(225,183,23)" rx="2" ry="2"/>
			<text x="1140.01" y="399.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="405" width="1.5" height="15.0" fill="rgb(238,171,4)" rx="2" ry="2"/>
			<text x="1074.14" y="415.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1128.4" y="389" width="1.5" height="15.0" fill="rgb(250,197,5)" rx="2" ry="2"/>
			<text x="1131.42" y="399.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (32 samples, 3.88%)</title>
			<rect x="468.3" y="53" width="45.8" height="15.0" fill="rgb(205,123,33)" rx="2" ry="2"/>
			<text x="471.25" y="63.5">std:..</text>
		</g>
		<g>
			<title>PageId::PageId (2 samples, 0.24%)</title>
			<rect x="738.9" y="581" width="2.9" height="15.0" fill="rgb(249,146,39)" rx="2" ry="2"/>
			<text x="741.91" y="591.5"></text>
		</g>
		<g>
			<title>unlink_chunk.constprop (1 samples, 0.12%)</title>
			<rect x="1138.4" y="357" width="1.5" height="15.0" fill="rgb(220,218,27)" rx="2" ry="2"/>
			<text x="1141.45" y="367.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_commonV2::_M_complete_async (3 samples, 0.36%)</title>
			<rect x="734.6" y="533" width="4.3" height="15.0" fill="rgb(235,189,24)" rx="2" ry="2"/>
			<text x="737.61" y="543.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1078.3" y="405" width="1.4" height="15.0" fill="rgb(246,181,28)" rx="2" ry="2"/>
			<text x="1081.30" y="415.5"></text>
		</g>
		<g>
			<title>std::call_once&lt;void (177 samples, 21.48%)</title>
			<rect x="20.0" y="485" width="253.5" height="15.0" fill="rgb(241,219,44)" rx="2" ry="2"/>
			<text x="23.02" y="495.5">std::call_once&lt;void</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1119.8" y="533" width="1.5" height="15.0" fill="rgb(214,215,11)" rx="2" ry="2"/>
			<text x="1122.83" y="543.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1068.3" y="549" width="2.8" height="15.0" fill="rgb(221,165,36)" rx="2" ry="2"/>
			<text x="1071.28" y="559.5"></text>
		</g>
		<g>
			<title>std::__invoke_r&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (177 samples, 21.48%)</title>
			<rect x="20.0" y="389" width="253.5" height="15.0" fill="rgb(243,189,48)" rx="2" ry="2"/>
			<text x="23.02" y="399.5">std::__invoke_r&lt;std::unique_ptr&lt;s..</text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.12%)</title>
			<rect x="1082.6" y="373" width="1.4" height="15.0" fill="rgb(252,164,49)" rx="2" ry="2"/>
			<text x="1085.60" y="383.5"></text>
		</g>
		<g>
			<title>std::__detail::_Map_base&lt;PageId, (23 samples, 2.79%)</title>
			<rect x="1005.3" y="581" width="32.9" height="15.0" fill="rgb(250,105,50)" rx="2" ry="2"/>
			<text x="1008.27" y="591.5">st..</text>
		</g>
		<g>
			<title>PageId::~PageId (6 samples, 0.73%)</title>
			<rect x="982.4" y="469" width="8.5" height="15.0" fill="rgb(244,173,13)" rx="2" ry="2"/>
			<text x="985.35" y="479.5"></text>
		</g>
		<g>
			<title>malloc_consolidate (3 samples, 0.36%)</title>
			<rect x="1038.2" y="469" width="4.3" height="15.0" fill="rgb(209,102,45)" rx="2" ry="2"/>
			<text x="1041.20" y="479.5"></text>
		</g>
		<g>
			<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (1 samples, 0.12%)</title>
			<rect x="1052.5" y="549" width="1.5" height="15.0" fill="rgb(252,48,4)" rx="2" ry="2"/>
			<text x="1055.52" y="559.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1086.9" y="437" width="1.4" height="15.0" fill="rgb(213,163,11)" rx="2" ry="2"/>
			<text x="1089.89" y="447.5"></text>
		</g>
		<g>
			<title>PageIdHash::operator() (16 samples, 1.94%)</title>
			<rect x="711.7" y="133" width="22.9" height="15.0" fill="rgb(249,135,31)" rx="2" ry="2"/>
			<text x="714.70" y="143.5">P..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1064.0" y="517" width="4.3" height="15.0" fill="rgb(207,201,42)" rx="2" ry="2"/>
			<text x="1066.98" y="527.5"></text>
		</g>
		<g>
			<title>unlink_chunk.constprop (1 samples, 0.12%)</title>
			<rect x="1124.1" y="453" width="1.5" height="15.0" fill="rgb(217,222,50)" rx="2" ry="2"/>
			<text x="1127.13" y="463.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;void, (52 samples, 6.31%)</title>
			<rect x="199.0" y="213" width="74.5" height="15.0" fill="rgb(239,134,5)" rx="2" ry="2"/>
			<text x="202.03" y="223.5">std::__i..</text>
		</g>
		<g>
			<title>_int_malloc (1 samples, 0.12%)</title>
			<rect x="1084.0" y="453" width="1.5" height="15.0" fill="rgb(224,117,42)" rx="2" ry="2"/>
			<text x="1087.03" y="463.5"></text>
		</g>
		<g>
			<title>__gthread_once (159 samples, 19.30%)</title>
			<rect x="743.2" y="501" width="227.7" height="15.0" fill="rgb(216,188,48)" rx="2" ry="2"/>
			<text x="746.20" y="511.5">__gthread_once</text>
		</g>
		<g>
			<title>operator (3 samples, 0.36%)</title>
			<rect x="986.7" y="357" width="4.2" height="15.0" fill="rgb(243,189,27)" rx="2" ry="2"/>
			<text x="989.65" y="367.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (39 samples, 4.73%)</title>
			<rect x="458.2" y="149" width="55.9" height="15.0" fill="rgb(250,140,30)" rx="2" ry="2"/>
			<text x="461.23" y="159.5">std::..</text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (322 samples, 39.08%)</title>
			<rect x="273.5" y="341" width="461.1" height="15.0" fill="rgb(232,85,38)" rx="2" ry="2"/>
			<text x="276.50" y="351.5">std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer:..</text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="1076.9" y="453" width="1.4" height="15.0" fill="rgb(229,170,42)" rx="2" ry="2"/>
			<text x="1079.87" y="463.5"></text>
		</g>
		<g>
			<title>NetworkGenerator::generatePageFromNumWithGeneratedId (2 samples, 0.24%)</title>
			<rect x="1061.1" y="597" width="2.9" height="15.0" fill="rgb(231,17,1)" rx="2" ry="2"/>
			<text x="1064.12" y="607.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.82%)</title>
			<rect x="1091.2" y="533" width="21.5" height="15.0" fill="rgb(253,170,42)" rx="2" ry="2"/>
			<text x="1094.19" y="543.5">s..</text>
		</g>
		<g>
			<title>pageRankComputationWithNumNodes (318 samples, 38.59%)</title>
			<rect x="734.6" y="629" width="455.4" height="15.0" fill="rgb(229,33,12)" rx="2" ry="2"/>
			<text x="737.61" y="639.5">pageRankComputationWithNumNodes</text>
		</g>
		<g>
			<title>Page::getId (2 samples, 0.24%)</title>
			<rect x="738.9" y="597" width="2.9" height="15.0" fill="rgb(254,34,16)" rx="2" ry="2"/>
			<text x="741.91" y="607.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (7 samples, 0.85%)</title>
			<rect x="545.6" y="117" width="10.0" height="15.0" fill="rgb(237,162,25)" rx="2" ry="2"/>
			<text x="548.58" y="127.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (5 samples, 0.61%)</title>
			<rect x="990.9" y="309" width="7.2" height="15.0" fill="rgb(243,145,20)" rx="2" ry="2"/>
			<text x="993.95" y="319.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1085.5" y="517" width="1.4" height="15.0" fill="rgb(242,181,43)" rx="2" ry="2"/>
			<text x="1088.46" y="527.5"></text>
		</g>
		<g>
			<title>_int_free (2 samples, 0.24%)</title>
			<rect x="1132.7" y="469" width="2.9" height="15.0" fill="rgb(232,131,25)" rx="2" ry="2"/>
			<text x="1135.72" y="479.5"></text>
		</g>
		<g>
			<title>(anonymous (1 samples, 0.12%)</title>
			<rect x="1141.3" y="485" width="1.4" height="15.0" fill="rgb(250,38,11)" rx="2" ry="2"/>
			<text x="1144.31" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1084.0" y="549" width="1.5" height="15.0" fill="rgb(238,215,34)" rx="2" ry="2"/>
			<text x="1087.03" y="559.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (6 samples, 0.73%)</title>
			<rect x="1064.0" y="581" width="8.6" height="15.0" fill="rgb(224,227,44)" rx="2" ry="2"/>
			<text x="1066.98" y="591.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1112.7" y="597" width="1.4" height="15.0" fill="rgb(218,34,7)" rx="2" ry="2"/>
			<text x="1115.67" y="607.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.61%)</title>
			<rect x="990.9" y="357" width="7.2" height="15.0" fill="rgb(244,213,3)" rx="2" ry="2"/>
			<text x="993.95" y="367.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="193.3" y="181" width="4.3" height="15.0" fill="rgb(239,229,18)" rx="2" ry="2"/>
			<text x="196.30" y="191.5"></text>
		</g>
		<g>
			<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (1 samples, 0.12%)</title>
			<rect x="14.3" y="245" width="1.4" height="15.0" fill="rgb(245,106,49)" rx="2" ry="2"/>
			<text x="17.30" y="255.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1187.1" y="469" width="1.5" height="15.0" fill="rgb(206,16,12)" rx="2" ry="2"/>
			<text x="1190.14" y="479.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (4 samples, 0.49%)</title>
			<rect x="985.2" y="389" width="5.7" height="15.0" fill="rgb(227,180,0)" rx="2" ry="2"/>
			<text x="988.22" y="399.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1086.9" y="405" width="1.4" height="15.0" fill="rgb(230,218,9)" rx="2" ry="2"/>
			<text x="1089.89" y="415.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1187.1" y="437" width="1.5" height="15.0" fill="rgb(249,44,13)" rx="2" ry="2"/>
			<text x="1190.14" y="447.5"></text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="1084.0" y="469" width="1.5" height="15.0" fill="rgb(244,225,35)" rx="2" ry="2"/>
			<text x="1087.03" y="479.5"></text>
		</g>
		<g>
			<title>std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples, 21.48%)</title>
			<rect x="20.0" y="309" width="253.5" height="15.0" fill="rgb(218,54,34)" rx="2" ry="2"/>
			<text x="23.02" y="319.5">std::__invoke&lt;MultiThreadedPageRa..</text>
		</g>
		<g>
			<title>std::equal_to&lt;PageId&gt;::operator() (5 samples, 0.61%)</title>
			<rect x="1165.7" y="517" width="7.1" height="15.0" fill="rgb(215,51,18)" rx="2" ry="2"/>
			<text x="1168.66" y="527.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (48 samples, 5.83%)</title>
			<rect x="595.7" y="117" width="68.7" height="15.0" fill="rgb(225,76,24)" rx="2" ry="2"/>
			<text x="598.70" y="127.5">std::__..</text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (6 samples, 0.73%)</title>
			<rect x="203.3" y="117" width="8.6" height="15.0" fill="rgb(238,228,21)" rx="2" ry="2"/>
			<text x="206.33" y="127.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="565" width="1.4" height="15.0" fill="rgb(218,66,53)" rx="2" ry="2"/>
			<text x="1054.09" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.49%)</title>
			<rect x="985.2" y="405" width="5.7" height="15.0" fill="rgb(250,227,4)" rx="2" ry="2"/>
			<text x="988.22" y="415.5"></text>
		</g>
		<g>
			<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.12%)</title>
			<rect x="1082.6" y="565" width="1.4" height="15.0" fill="rgb(229,137,2)" rx="2" ry="2"/>
			<text x="1085.60" y="575.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="405" width="1.4" height="15.0" fill="rgb(226,163,17)" rx="2" ry="2"/>
			<text x="1085.60" y="415.5"></text>
		</g>
		<g>
			<title>std::_Hash_bytes (1 samples, 0.12%)</title>
			<rect x="1036.8" y="501" width="1.4" height="15.0" fill="rgb(230,65,25)" rx="2" ry="2"/>
			<text x="1039.77" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (27 samples, 3.28%)</title>
			<rect x="211.9" y="117" width="38.7" height="15.0" fill="rgb(213,49,27)" rx="2" ry="2"/>
			<text x="214.92" y="127.5">std..</text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (16 samples, 1.94%)</title>
			<rect x="1005.3" y="549" width="22.9" height="15.0" fill="rgb(221,197,16)" rx="2" ry="2"/>
			<text x="1008.27" y="559.5">s..</text>
		</g>
		<g>
			<title>Page::Page (1 samples, 0.12%)</title>
			<rect x="1082.6" y="597" width="1.4" height="15.0" fill="rgb(215,81,45)" rx="2" ry="2"/>
			<text x="1085.60" y="607.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples,
				0.73%)
			</title>
			<rect x="11.4" y="565" width="8.6" height="15.0" fill="rgb(208,130,6)" rx="2" ry="2"/>
			<text x="14.43" y="575.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1068.3" y="565" width="4.3" height="15.0" fill="rgb(230,28,1)" rx="2" ry="2"/>
			<text x="1071.28" y="575.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (2 samples, 0.24%)</title>
			<rect x="1137.0" y="405" width="2.9" height="15.0" fill="rgb(231,98,18)" rx="2" ry="2"/>
			<text x="1140.01" y="415.5"></text>
		</g>
		<g>
			<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (1 samples, 0.12%)</title>
			<rect x="1082.6" y="549" width="1.4" height="15.0" fill="rgb(221,11,6)" rx="2" ry="2"/>
			<text x="1085.60" y="559.5"></text>
		</g>
		<g>
			<title>PageIdAndRank::~PageIdAndRank (1 samples, 0.12%)</title>
			<rect x="1187.1" y="517" width="1.5" height="15.0" fill="rgb(213,145,4)" rx="2" ry="2"/>
			<text x="1190.14" y="527.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::waitForAll&lt;MultiThreadedPageRankComputer::{unnamed (3 samples, 0.36%)</title>
			<rect x="734.6" y="581" width="4.3" height="15.0" fill="rgb(242,101,29)" rx="2" ry="2"/>
			<text x="737.61" y="591.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::pool&lt;Page (6 samples, 0.73%)</title>
			<rect x="11.4" y="277" width="8.6" height="15.0" fill="rgb(229,186,3)" rx="2" ry="2"/>
			<text x="14.43" y="287.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1119.8" y="517" width="1.5" height="15.0" fill="rgb(240,3,15)" rx="2" ry="2"/>
			<text x="1122.83" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="738.9" y="565" width="2.9" height="15.0" fill="rgb(248,221,25)" rx="2" ry="2"/>
			<text x="741.91" y="575.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.12%)</title>
			<rect x="1125.6" y="485" width="1.4" height="15.0" fill="rgb(224,143,9)" rx="2" ry="2"/>
			<text x="1128.56" y="495.5"></text>
		</g>
		<g>
			<title>PageId::PageId (2 samples, 0.24%)</title>
			<rect x="1114.1" y="581" width="2.9" height="15.0" fill="rgb(206,181,29)" rx="2" ry="2"/>
			<text x="1117.10" y="591.5"></text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="17.2" y="117" width="1.4" height="15.0" fill="rgb(210,32,31)" rx="2" ry="2"/>
			<text x="20.16" y="127.5"></text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1036.8" y="533" width="1.4" height="15.0" fill="rgb(254,209,43)" rx="2" ry="2"/>
			<text x="1039.77" y="543.5"></text>
		</g>
		<g>
			<title>malloc (5 samples, 0.61%)</title>
			<rect x="461.1" y="85" width="7.2" height="15.0" fill="rgb(234,215,12)" rx="2" ry="2"/>
			<text x="464.09" y="95.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1137.0" y="469" width="2.9" height="15.0" fill="rgb(234,2,1)" rx="2" ry="2"/>
			<text x="1140.01" y="479.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::compare (18 samples, 2.18%)</title>
			<rect x="638.7" y="53" width="25.7" height="15.0" fill="rgb(215,27,23)" rx="2" ry="2"/>
			<text x="641.67" y="63.5">s..</text>
		</g>
		<g>
			<title>malloc_consolidate (2 samples, 0.24%)</title>
			<rect x="1068.3" y="453" width="2.8" height="15.0" fill="rgb(209,65,25)" rx="2" ry="2"/>
			<text x="1071.28" y="463.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1048.2" y="533" width="1.5" height="15.0" fill="rgb(239,45,34)" rx="2" ry="2"/>
			<text x="1051.23" y="543.5"></text>
		</g>
		<g>
			<title>clone (506 samples, 61.41%)</title>
			<rect x="10.0" y="645" width="724.6" height="15.0" fill="rgb(225,194,27)" rx="2" ry="2"/>
			<text x="13.00" y="655.5">clone</text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="982.4" y="501" width="22.9" height="15.0" fill="rgb(232,194,21)" rx="2" ry="2"/>
			<text x="985.35" y="511.5">_..</text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;void, (193 samples, 23.42%)</title>
			<rect x="458.2" y="213" width="276.4" height="15.0" fill="rgb(224,200,40)" rx="2" ry="2"/>
			<text x="461.23" y="223.5">std::__invoke_impl&lt;void,</text>
		</g>
		<g>
			<title>malloc_consolidate (4 samples, 0.49%)</title>
			<rect x="973.8" y="565" width="5.7" height="15.0" fill="rgb(230,217,7)" rx="2" ry="2"/>
			<text x="976.76" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (1 samples, 0.12%)</title>
			<rect x="1124.1" y="517" width="1.5" height="15.0" fill="rgb(254,86,46)" rx="2" ry="2"/>
			<text x="1127.13" y="527.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (14 samples, 1.70%)</title>
			<rect x="615.8" y="101" width="20.0" height="15.0" fill="rgb(241,214,41)" rx="2" ry="2"/>
			<text x="618.75" y="111.5"></text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="1114.1" y="485" width="2.9" height="15.0" fill="rgb(253,173,17)" rx="2" ry="2"/>
			<text x="1117.10" y="495.5"></text>
		</g>
		<g>
			<title>malloc_consolidate (1 samples, 0.12%)</title>
			<rect x="1124.1" y="469" width="1.5" height="15.0" fill="rgb(235,123,8)" rx="2" ry="2"/>
			<text x="1127.13" y="479.5"></text>
		</g>
		<g>
			<title>__pthread_clockjoin_ex (159 samples, 19.30%)</title>
			<rect x="743.2" y="437" width="227.7" height="15.0" fill="rgb(209,143,35)" rx="2" ry="2"/>
			<text x="746.20" y="447.5">__pthread_clockjoin_ex</text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="1068.3" y="501" width="2.8" height="15.0" fill="rgb(253,8,6)" rx="2" ry="2"/>
			<text x="1071.28" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="269.2" y="165" width="4.3" height="15.0" fill="rgb(226,56,25)" rx="2" ry="2"/>
			<text x="272.20" y="175.5"></text>
		</g>
		<g>
			<title>PageId::PageId (2 samples, 0.24%)</title>
			<rect x="1058.3" y="437" width="2.8" height="15.0" fill="rgb(209,81,15)" rx="2" ry="2"/>
			<text x="1061.25" y="447.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (13 samples, 1.58%)</title>
			<rect x="1094.1" y="485" width="18.6" height="15.0" fill="rgb(234,110,43)" rx="2" ry="2"/>
			<text x="1097.05" y="495.5"></text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="1127.0" y="469" width="1.4" height="15.0" fill="rgb(253,182,4)" rx="2" ry="2"/>
			<text x="1129.99" y="479.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="389" width="1.4" height="15.0" fill="rgb(249,97,40)" rx="2" ry="2"/>
			<text x="1085.60" y="399.5"></text>
		</g>
		<g>
			<title>PageIdHash::operator() (2 samples, 0.24%)</title>
			<rect x="1139.9" y="549" width="2.8" height="15.0" fill="rgb(239,39,45)" rx="2" ry="2"/>
			<text x="1142.88" y="559.5"></text>
		</g>
		<g>
			<title>_int_malloc (1 samples, 0.12%)</title>
			<rect x="740.3" y="469" width="1.5" height="15.0" fill="rgb(213,156,1)" rx="2" ry="2"/>
			<text x="743.34" y="479.5"></text>
		</g>
		<g>
			<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (322 samples, 39.08%)</title>
			<rect x="273.5" y="421" width="461.1" height="15.0" fill="rgb(214,93,20)" rx="2" ry="2"/>
			<text x="276.50" y="431.5">std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,</text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1185.7" y="565" width="1.4" height="15.0" fill="rgb(210,168,29)" rx="2" ry="2"/>
			<text x="1188.70" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.12%)</title>
			<rect x="1052.5" y="453" width="1.5" height="15.0" fill="rgb(205,184,32)" rx="2" ry="2"/>
			<text x="1055.52" y="463.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.12%)</title>
			<rect x="1151.3" y="501" width="1.5" height="15.0" fill="rgb(240,59,37)" rx="2" ry="2"/>
			<text x="1154.33" y="511.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId&gt; (5 samples, 0.61%)</title>
			<rect x="990.9" y="405" width="7.2" height="15.0" fill="rgb(253,219,39)" rx="2" ry="2"/>
			<text x="993.95" y="415.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::computeForNetwork (222 samples, 26.94%)</title>
			<rect x="734.6" y="613" width="317.9" height="15.0" fill="rgb(253,179,15)" rx="2" ry="2"/>
			<text x="737.61" y="623.5">MultiThreadedPageRankComputer::computeForN..</text>
		</g>
		<g>
			<title>__memmove_avx_unaligned_erms (13 samples, 1.58%)</title>
			<rect x="1094.1" y="453" width="18.6" height="15.0" fill="rgb(209,174,12)" rx="2" ry="2"/>
			<text x="1097.05" y="463.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (24 samples, 2.91%)</title>
			<rect x="525.5" y="165" width="34.4" height="15.0" fill="rgb(224,70,0)" rx="2" ry="2"/>
			<text x="528.53" y="175.5">st..</text>
		</g>
		<g>
			<title>std::unordered_map&lt;PageId, (45 samples, 5.46%)</title>
			<rect x="1121.3" y="597" width="64.4" height="15.0" fill="rgb(236,90,42)" rx="2" ry="2"/>
			<text x="1124.26" y="607.5">std::un..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="193.3" y="165" width="4.3" height="15.0" fill="rgb(253,112,17)" rx="2" ry="2"/>
			<text x="196.30" y="175.5"></text>
		</g>
		<g>
			<title>__memcmp_avx2_movbe (5 samples, 0.61%)</title>
			<rect x="1165.7" y="453" width="7.1" height="15.0" fill="rgb(225,92,25)" rx="2" ry="2"/>
			<text x="1168.66" y="463.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1135.6" y="357" width="1.4" height="15.0" fill="rgb(237,210,17)" rx="2" ry="2"/>
			<text x="1138.58" y="367.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageIdAndRank&gt; (1 samples, 0.12%)</title>
			<rect x="1187.1" y="533" width="1.5" height="15.0" fill="rgb(231,142,8)" rx="2" ry="2"/>
			<text x="1190.14" y="543.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (15 samples, 1.82%)</title>
			<rect x="1121.3" y="581" width="21.4" height="15.0" fill="rgb(209,157,19)" rx="2" ry="2"/>
			<text x="1124.26" y="591.5">s..</text>
		</g>
		<g>
			<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title>
			<rect x="14.3" y="197" width="1.4" height="15.0" fill="rgb(249,32,22)" rx="2" ry="2"/>
			<text x="17.30" y="207.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1185.7" y="549" width="1.4" height="15.0" fill="rgb(230,195,35)" rx="2" ry="2"/>
			<text x="1188.70" y="559.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (5 samples, 0.61%)</title>
			<rect x="1125.6" y="533" width="7.1" height="15.0" fill="rgb(212,33,27)" rx="2" ry="2"/>
			<text x="1128.56" y="543.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="272.1" y="85" width="1.4" height="15.0" fill="rgb(220,179,16)" rx="2" ry="2"/>
			<text x="275.06" y="95.5"></text>
		</g>
		<g>
			<title>std::execute_native_thread_routine (505 samples, 61.29%)</title>
			<rect x="11.4" y="613" width="723.2" height="15.0" fill="rgb(238,108,48)" rx="2" ry="2"/>
			<text x="14.43" y="623.5">std::execute_native_thread_routine</text>
		</g>
		<g>
			<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (322 samples, 39.08%)
			</title>
			<rect x="273.5" y="549" width="461.1" height="15.0" fill="rgb(240,180,42)" rx="2" ry="2"/>
			<text x="276.50" y="559.5">std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1187.1" y="453" width="1.5" height="15.0" fill="rgb(251,142,34)" rx="2" ry="2"/>
			<text x="1190.14" y="463.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1084.0" y="485" width="1.5" height="15.0" fill="rgb(225,0,5)" rx="2" ry="2"/>
			<text x="1087.03" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1114.1" y="549" width="2.9" height="15.0" fill="rgb(205,86,44)" rx="2" ry="2"/>
			<text x="1117.10" y="559.5"></text>
		</g>
		<g>
			<title>__gthread_mutex_lock (73 samples, 8.86%)</title>
			<rect x="34.3" y="213" width="104.6" height="15.0" fill="rgb(206,82,38)" rx="2" ry="2"/>
			<text x="37.34" y="223.5">__gthread_mu..</text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1049.7" y="517" width="1.4" height="15.0" fill="rgb(254,156,45)" rx="2" ry="2"/>
			<text x="1052.66" y="527.5"></text>
		</g>
		<g>
			<title>_int_malloc (1 samples, 0.12%)</title>
			<rect x="1035.3" y="469" width="1.5" height="15.0" fill="rgb(215,135,5)" rx="2" ry="2"/>
			<text x="1038.34" y="479.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1112.7" y="501" width="1.4" height="15.0" fill="rgb(234,66,21)" rx="2" ry="2"/>
			<text x="1115.67" y="511.5"></text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (6 samples, 0.73%)</title>
			<rect x="11.4" y="501" width="8.6" height="15.0" fill="rgb(205,202,48)" rx="2" ry="2"/>
			<text x="14.43" y="511.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (128 samples, 15.53%)</title>
			<rect x="274.9" y="261" width="183.3" height="15.0" fill="rgb(217,222,31)" rx="2" ry="2"/>
			<text x="277.93" y="271.5">MultiThreadedPageRankCo..</text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (5 samples, 0.61%)</title>
			<rect x="998.1" y="437" width="7.2" height="15.0" fill="rgb(226,144,14)" rx="2" ry="2"/>
			<text x="1001.11" y="447.5"></text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (4 samples, 0.49%)</title>
			<rect x="1180.0" y="517" width="5.7" height="15.0" fill="rgb(210,194,5)" rx="2" ry="2"/>
			<text x="1182.98" y="527.5"></text>
		</g>
		<g>
			<title>__lll_lock_wait (66 samples, 8.01%)</title>
			<rect x="315.0" y="181" width="94.5" height="15.0" fill="rgb(243,75,5)" rx="2" ry="2"/>
			<text x="318.02" y="191.5">__lll_lock_..</text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1076.9" y="581" width="1.4" height="15.0" fill="rgb(252,194,19)" rx="2" ry="2"/>
			<text x="1079.87" y="591.5"></text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="1048.2" y="469" width="1.5" height="15.0" fill="rgb(241,11,17)" rx="2" ry="2"/>
			<text x="1051.23" y="479.5"></text>
		</g>
		<g>
			<title>__pthread_once_slow (322 samples, 39.08%)</title>
			<rect x="273.5" y="453" width="461.1" height="15.0" fill="rgb(205,46,11)" rx="2" ry="2"/>
			<text x="276.50" y="463.5">__pthread_once_slow</text>
		</g>
		<g>
			<title>__memmove_avx_unaligned_erms (3 samples, 0.36%)</title>
			<rect x="193.3" y="117" width="4.3" height="15.0" fill="rgb(228,218,54)" rx="2" ry="2"/>
			<text x="196.30" y="127.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1129.9" y="357" width="2.8" height="15.0" fill="rgb(214,171,47)" rx="2" ry="2"/>
			<text x="1132.85" y="367.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1076.9" y="501" width="1.4" height="15.0" fill="rgb(216,170,53)" rx="2" ry="2"/>
			<text x="1079.87" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1128.4" y="437" width="4.3" height="15.0" fill="rgb(237,19,54)" rx="2" ry="2"/>
			<text x="1131.42" y="447.5"></text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (177 samples, 21.48%)</title>
			<rect x="20.0" y="437" width="253.5" height="15.0" fill="rgb(226,68,14)" rx="2" ry="2"/>
			<text x="23.02" y="447.5">std::__future_base::_State_baseV2..</text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1079.7" y="501" width="1.5" height="15.0" fill="rgb(239,46,3)" rx="2" ry="2"/>
			<text x="1082.73" y="511.5"></text>
		</g>
		<g>
			<title>all (824 samples, 100%)</title>
			<rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(251,168,23)" rx="2" ry="2"/>
			<text x="13.00" y="671.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (5 samples, 0.61%)</title>
			<rect x="1021.0" y="533" width="7.2" height="15.0" fill="rgb(247,144,42)" rx="2" ry="2"/>
			<text x="1024.02" y="543.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1086.9" y="389" width="1.4" height="15.0" fill="rgb(228,58,35)" rx="2" ry="2"/>
			<text x="1089.89" y="399.5"></text>
		</g>
		<g>
			<title>(anonymous (5 samples, 0.61%)</title>
			<rect x="727.5" y="69" width="7.1" height="15.0" fill="rgb(205,202,12)" rx="2" ry="2"/>
			<text x="730.45" y="79.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="17.2" y="165" width="1.4" height="15.0" fill="rgb(221,112,34)" rx="2" ry="2"/>
			<text x="20.16" y="175.5"></text>
		</g>
		<g>
			<title>std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="982.4" y="485" width="22.9" height="15.0" fill="rgb(213,124,50)" rx="2" ry="2"/>
			<text x="985.35" y="495.5">s..</text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (10 samples, 1.21%)</title>
			<rect x="581.4" y="117" width="14.3" height="15.0" fill="rgb(243,216,14)" rx="2" ry="2"/>
			<text x="584.38" y="127.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="738.9" y="533" width="2.9" height="15.0" fill="rgb(214,133,22)" rx="2" ry="2"/>
			<text x="741.91" y="543.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1086.9" y="581" width="1.4" height="15.0" fill="rgb(229,198,42)" rx="2" ry="2"/>
			<text x="1089.89" y="591.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1128.4" y="405" width="4.3" height="15.0" fill="rgb(252,82,22)" rx="2" ry="2"/>
			<text x="1131.42" y="415.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;MultiThreadedPageRankComputer::{unnamed (6 samples, 0.73%)</title>
			<rect x="11.4" y="293" width="8.6" height="15.0" fill="rgb(238,199,53)" rx="2" ry="2"/>
			<text x="14.43" y="303.5"></text>
		</g>
		<g>
			<title>std::thread::join (3 samples, 0.36%)</title>
			<rect x="734.6" y="453" width="4.3" height="15.0" fill="rgb(208,172,11)" rx="2" ry="2"/>
			<text x="737.61" y="463.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1048.2" y="485" width="1.5" height="15.0" fill="rgb(240,50,2)" rx="2" ry="2"/>
			<text x="1051.23" y="495.5"></text>
		</g>
		<g>
			<title>Page::generateId (3 samples, 0.36%)</title>
			<rect x="15.7" y="245" width="4.3" height="15.0" fill="rgb(221,165,13)" rx="2" ry="2"/>
			<text x="18.73" y="255.5"></text>
		</g>
		<g>
			<title>SimpleIdGenerator::generateId (1 samples, 0.12%)</title>
			<rect x="1084.0" y="581" width="1.5" height="15.0" fill="rgb(215,226,3)" rx="2" ry="2"/>
			<text x="1087.03" y="591.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;double, (322 samples, 39.08%)</title>
			<rect x="273.5" y="293" width="461.1" height="15.0" fill="rgb(245,146,39)" rx="2" ry="2"/>
			<text x="276.50" y="303.5">std::__invoke_impl&lt;double,</text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;void, (177 samples, 21.48%)</title>
			<rect x="20.0" y="533" width="253.5" height="15.0" fill="rgb(218,109,50)" rx="2" ry="2"/>
			<text x="23.02" y="543.5">std::__invoke_impl&lt;void,</text>
		</g>
		<g>
			<title>std::vector&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="549" width="1.4" height="15.0" fill="rgb(247,193,0)" rx="2" ry="2"/>
			<text x="1054.09" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="741.8" y="565" width="1.4" height="15.0" fill="rgb(228,23,8)" rx="2" ry="2"/>
			<text x="744.77" y="575.5"></text>
		</g>
		<g>
			<title>__pthread_once_slow (177 samples, 21.48%)</title>
			<rect x="20.0" y="453" width="253.5" height="15.0" fill="rgb(211,167,8)" rx="2" ry="2"/>
			<text x="23.02" y="463.5">__pthread_once_slow</text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="524.1" y="53" width="1.4" height="15.0" fill="rgb(217,180,19)" rx="2" ry="2"/>
			<text x="527.10" y="63.5"></text>
		</g>
		<g>
			<title>PageIdHash::operator() (2 samples, 0.24%)</title>
			<rect x="266.3" y="133" width="2.9" height="15.0" fill="rgb(233,103,46)" rx="2" ry="2"/>
			<text x="269.33" y="143.5"></text>
		</g>
		<g>
			<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (6 samples, 0.73%)</title>
			<rect x="11.4" y="405" width="8.6" height="15.0" fill="rgb(251,72,15)" rx="2" ry="2"/>
			<text x="14.43" y="415.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (6 samples, 0.73%)</title>
			<rect x="1042.5" y="565" width="8.6" height="15.0" fill="rgb(248,160,16)" rx="2" ry="2"/>
			<text x="1045.50" y="575.5"></text>
		</g>
		<g>
			<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (6 samples, 0.73%)</title>
			<rect x="11.4" y="421" width="8.6" height="15.0" fill="rgb(205,153,24)" rx="2" ry="2"/>
			<text x="14.43" y="431.5"></text>
		</g>
		<g>
			<title>std::__cxx11::to_string (2 samples, 0.24%)</title>
			<rect x="1054.0" y="581" width="2.8" height="15.0" fill="rgb(227,65,43)" rx="2" ry="2"/>
			<text x="1056.96" y="591.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (32 samples, 3.88%)</title>
			<rect x="468.3" y="85" width="45.8" height="15.0" fill="rgb(245,144,17)" rx="2" ry="2"/>
			<text x="471.25" y="95.5">std:..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (32 samples, 3.88%)</title>
			<rect x="468.3" y="101" width="45.8" height="15.0" fill="rgb(210,114,14)" rx="2" ry="2"/>
			<text x="471.25" y="111.5">std:..</text>
		</g>
		<g>
			<title>PageIdHash::operator() (4 samples, 0.49%)</title>
			<rect x="1180.0" y="549" width="5.7" height="15.0" fill="rgb(222,77,41)" rx="2" ry="2"/>
			<text x="1182.98" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (17 samples, 2.06%)</title>
			<rect x="1088.3" y="581" width="24.4" height="15.0" fill="rgb(247,212,11)" rx="2" ry="2"/>
			<text x="1091.33" y="591.5">s..</text>
		</g>
		<g>
			<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (76 samples, 9.22%)</title>
			<rect x="300.7" y="245" width="108.8" height="15.0" fill="rgb(206,217,13)" rx="2" ry="2"/>
			<text x="303.70" y="255.5">std::lock_gua..</text>
		</g>
		<g>
			<title>PageId::operator== (5 samples, 0.61%)</title>
			<rect x="1165.7" y="501" width="7.1" height="15.0" fill="rgb(246,220,4)" rx="2" ry="2"/>
			<text x="1168.66" y="511.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1078.3" y="437" width="1.4" height="15.0" fill="rgb(227,220,22)" rx="2" ry="2"/>
			<text x="1081.30" y="447.5"></text>
		</g>
		<g>
			<title>std::mutex::unlock (35 samples, 4.25%)</title>
			<rect x="138.9" y="229" width="50.1" height="15.0" fill="rgb(244,125,30)" rx="2" ry="2"/>
			<text x="141.88" y="239.5">std::..</text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1112.7" y="517" width="1.4" height="15.0" fill="rgb(231,51,30)" rx="2" ry="2"/>
			<text x="1115.67" y="527.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples, 0.73%)</title>
			<rect x="11.4" y="341" width="8.6" height="15.0" fill="rgb(216,63,35)" rx="2" ry="2"/>
			<text x="14.43" y="351.5"></text>
		</g>
		<g>
			<title>_int_free (3 samples, 0.36%)</title>
			<rect x="1038.2" y="485" width="4.3" height="15.0" fill="rgb(235,63,2)" rx="2" ry="2"/>
			<text x="1041.20" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="501" width="1.4" height="15.0" fill="rgb(210,17,32)" rx="2" ry="2"/>
			<text x="1064.12" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1081.2" y="581" width="1.4" height="15.0" fill="rgb(252,228,5)" rx="2" ry="2"/>
			<text x="1084.17" y="591.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1078.3" y="453" width="1.4" height="15.0" fill="rgb(245,10,40)" rx="2" ry="2"/>
			<text x="1081.30" y="463.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples, 21.48%)</title>
			<rect x="20.0" y="277" width="253.5" height="15.0" fill="rgb(209,176,33)" rx="2" ry="2"/>
			<text x="23.02" y="287.5">MultiThreadedPageRankComputer::po..</text>
		</g>
		<g>
			<title>PageId::operator== (12 samples, 1.46%)</title>
			<rect x="233.4" y="85" width="17.2" height="15.0" fill="rgb(214,172,17)" rx="2" ry="2"/>
			<text x="236.40" y="95.5"></text>
		</g>
		<g>
			<title>_int_free (4 samples, 0.49%)</title>
			<rect x="973.8" y="581" width="5.7" height="15.0" fill="rgb(245,88,30)" rx="2" ry="2"/>
			<text x="976.76" y="591.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (5 samples, 0.61%)</title>
			<rect x="998.1" y="421" width="7.2" height="15.0" fill="rgb(243,217,8)" rx="2" ry="2"/>
			<text x="1001.11" y="431.5"></text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="1086.9" y="373" width="1.4" height="15.0" fill="rgb(239,202,7)" rx="2" ry="2"/>
			<text x="1089.89" y="383.5"></text>
		</g>
		<g>
			<title>__pthread_once_slow (6 samples, 0.73%)</title>
			<rect x="11.4" y="453" width="8.6" height="15.0" fill="rgb(235,126,42)" rx="2" ry="2"/>
			<text x="14.43" y="463.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1129.9" y="373" width="2.8" height="15.0" fill="rgb(238,81,3)" rx="2" ry="2"/>
			<text x="1132.85" y="383.5"></text>
		</g>
		<g>
			<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title>
			<rect x="1061.1" y="421" width="1.4" height="15.0" fill="rgb(213,38,53)" rx="2" ry="2"/>
			<text x="1064.12" y="431.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId
				(322 samples, 39.08%)
			</title>
			<rect x="273.5" y="581" width="461.1" height="15.0" fill="rgb(226,192,12)" rx="2" ry="2"/>
			<text x="276.50" y="591.5">std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_sta..</text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1076.9" y="485" width="1.4" height="15.0" fill="rgb(230,16,41)" rx="2" ry="2"/>
			<text x="1079.87" y="495.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (3 samples, 0.36%)</title>
			<rect x="1038.2" y="517" width="4.3" height="15.0" fill="rgb(211,191,13)" rx="2" ry="2"/>
			<text x="1041.20" y="527.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (5 samples, 0.61%)</title>
			<rect x="998.1" y="405" width="7.2" height="15.0" fill="rgb(236,144,40)" rx="2" ry="2"/>
			<text x="1001.11" y="415.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1079.7" y="549" width="1.5" height="15.0" fill="rgb(251,82,46)" rx="2" ry="2"/>
			<text x="1082.73" y="559.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="453" width="1.5" height="15.0" fill="rgb(205,18,24)" rx="2" ry="2"/>
			<text x="1074.14" y="463.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (6 samples, 0.73%)</title>
			<rect x="203.3" y="85" width="8.6" height="15.0" fill="rgb(206,227,13)" rx="2" ry="2"/>
			<text x="206.33" y="95.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (33 samples, 4.00%)</title>
			<rect x="664.4" y="117" width="47.3" height="15.0" fill="rgb(208,18,5)" rx="2" ry="2"/>
			<text x="667.44" y="127.5">std:..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1117.0" y="565" width="4.3" height="15.0" fill="rgb(223,97,30)" rx="2" ry="2"/>
			<text x="1119.97" y="575.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (10 samples, 1.21%)</title>
			<rect x="581.4" y="101" width="14.3" height="15.0" fill="rgb(217,29,35)" rx="2" ry="2"/>
			<text x="584.38" y="111.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (5 samples, 0.61%)</title>
			<rect x="998.1" y="453" width="7.2" height="15.0" fill="rgb(236,177,53)" rx="2" ry="2"/>
			<text x="1001.11" y="463.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.97%)</title>
			<rect x="514.1" y="133" width="11.4" height="15.0" fill="rgb(245,69,0)" rx="2" ry="2"/>
			<text x="517.08" y="143.5"></text>
		</g>
		<g>
			<title>PageId::PageId (6 samples, 0.73%)</title>
			<rect x="189.0" y="261" width="8.6" height="15.0" fill="rgb(227,197,10)" rx="2" ry="2"/>
			<text x="192.00" y="271.5"></text>
		</g>
		<g>
			<title>PageId::PageId (1 samples, 0.12%)</title>
			<rect x="1082.6" y="501" width="1.4" height="15.0" fill="rgb(252,107,19)" rx="2" ry="2"/>
			<text x="1085.60" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (32 samples, 3.88%)</title>
			<rect x="468.3" y="69" width="45.8" height="15.0" fill="rgb(235,108,27)" rx="2" ry="2"/>
			<text x="471.25" y="79.5">std:..</text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.12%)</title>
			<rect x="1051.1" y="469" width="1.4" height="15.0" fill="rgb(214,104,6)" rx="2" ry="2"/>
			<text x="1054.09" y="479.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1135.6" y="453" width="1.4" height="15.0" fill="rgb(239,189,2)" rx="2" ry="2"/>
			<text x="1138.58" y="463.5"></text>
		</g>
		<g>
			<title>std::equal_to&lt;PageId&gt;::operator() (2 samples, 0.24%)</title>
			<rect x="1025.3" y="517" width="2.9" height="15.0" fill="rgb(210,89,43)" rx="2" ry="2"/>
			<text x="1028.32" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="189.0" y="197" width="8.6" height="15.0" fill="rgb(250,223,1)" rx="2" ry="2"/>
			<text x="192.00" y="207.5"></text>
		</g>
		<g>
			<title>std::__detail::operator==&lt;std::pair&lt;PageId (1 samples, 0.12%)</title>
			<rect x="299.3" y="245" width="1.4" height="15.0" fill="rgb(238,173,37)" rx="2" ry="2"/>
			<text x="302.27" y="255.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1084.0" y="533" width="1.5" height="15.0" fill="rgb(225,11,18)" rx="2" ry="2"/>
			<text x="1087.03" y="543.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1119.8" y="501" width="1.5" height="15.0" fill="rgb(253,132,16)" rx="2" ry="2"/>
			<text x="1122.83" y="511.5"></text>
		</g>
		<g>
			<title>std::function&lt;void (53 samples, 6.43%)</title>
			<rect x="197.6" y="261" width="75.9" height="15.0" fill="rgb(229,44,5)" rx="2" ry="2"/>
			<text x="200.60" y="271.5">std::fun..</text>
		</g>
		<g>
			<title>operator (3 samples, 0.36%)</title>
			<rect x="986.7" y="373" width="4.2" height="15.0" fill="rgb(227,133,9)" rx="2" ry="2"/>
			<text x="989.65" y="383.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1132.7" y="501" width="2.9" height="15.0" fill="rgb(223,149,7)" rx="2" ry="2"/>
			<text x="1135.72" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="982.4" y="549" width="22.9" height="15.0" fill="rgb(205,170,45)" rx="2" ry="2"/>
			<text x="985.35" y="559.5">s..</text>
		</g>
		<g>
			<title>std::unordered_map&lt;PageId, (45 samples, 5.46%)</title>
			<rect x="973.8" y="597" width="64.4" height="15.0" fill="rgb(225,198,46)" rx="2" ry="2"/>
			<text x="976.76" y="607.5">std::un..</text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="1033.9" y="485" width="2.9" height="15.0" fill="rgb(216,99,40)" rx="2" ry="2"/>
			<text x="1036.91" y="495.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.12%)</title>
			<rect x="1188.6" y="549" width="1.4" height="15.0" fill="rgb(239,173,2)" rx="2" ry="2"/>
			<text x="1191.57" y="559.5"></text>
		</g>
		<g>
			<title>Page::~Page (1 samples, 0.12%)</title>
			<rect x="1086.9" y="597" width="1.4" height="15.0" fill="rgb(224,201,32)" rx="2" ry="2"/>
			<text x="1089.89" y="607.5"></text>
		</g>
		<g>
			<title>std::__relocate_object_a&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="485" width="1.5" height="15.0" fill="rgb(252,178,22)" rx="2" ry="2"/>
			<text x="1074.14" y="495.5"></text>
		</g>
		<g>
			<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId
				(322 samples, 39.08%)
			</title>
			<rect x="273.5" y="597" width="461.1" height="15.0" fill="rgb(212,165,15)" rx="2" ry="2"/>
			<text x="276.50" y="607.5">std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::..</text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.36%)</title>
			<rect x="1135.6" y="501" width="4.3" height="15.0" fill="rgb(231,3,37)" rx="2" ry="2"/>
			<text x="1138.58" y="511.5"></text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="266.3" y="117" width="2.9" height="15.0" fill="rgb(244,19,50)" rx="2" ry="2"/>
			<text x="269.33" y="127.5"></text>
		</g>
		<g>
			<title>std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="970.9" y="597" width="2.9" height="15.0" fill="rgb(222,161,47)" rx="2" ry="2"/>
			<text x="973.90" y="607.5"></text>
		</g>
		<g>
			<title>std::mutex::lock (76 samples, 9.22%)</title>
			<rect x="300.7" y="229" width="108.8" height="15.0" fill="rgb(223,137,9)" rx="2" ry="2"/>
			<text x="303.70" y="239.5">std::mutex::l..</text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.12%)</title>
			<rect x="1086.9" y="517" width="1.4" height="15.0" fill="rgb(248,3,25)" rx="2" ry="2"/>
			<text x="1089.89" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1078.3" y="469" width="1.4" height="15.0" fill="rgb(219,224,8)" rx="2" ry="2"/>
			<text x="1081.30" y="479.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1036.8" y="565" width="1.4" height="15.0" fill="rgb(237,111,44)" rx="2" ry="2"/>
			<text x="1039.77" y="575.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1081.2" y="565" width="1.4" height="15.0" fill="rgb(241,11,54)" rx="2" ry="2"/>
			<text x="1084.17" y="575.5"></text>
		</g>
		<g>
			<title>PageIdHash::operator() (1 samples, 0.12%)</title>
			<rect x="1049.7" y="533" width="1.4" height="15.0" fill="rgb(245,143,52)" rx="2" ry="2"/>
			<text x="1052.66" y="543.5"></text>
		</g>
		<g>
			<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1058.3" y="485" width="2.8" height="15.0" fill="rgb(231,29,20)" rx="2" ry="2"/>
			<text x="1061.25" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (38 samples, 4.61%)</title>
			<rect x="459.7" y="117" width="54.4" height="15.0" fill="rgb(245,73,22)" rx="2" ry="2"/>
			<text x="462.66" y="127.5">std::..</text>
		</g>
		<g>
			<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;PageId (1 samples, 0.12%)</title>
			<rect x="1125.6" y="501" width="1.4" height="15.0" fill="rgb(253,167,32)" rx="2" ry="2"/>
			<text x="1128.56" y="511.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;Page*&gt; (1 samples, 0.12%)</title>
			<rect x="1052.5" y="565" width="1.5" height="15.0" fill="rgb(218,182,39)" rx="2" ry="2"/>
			<text x="1055.52" y="575.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId*&gt; (5 samples, 0.61%)</title>
			<rect x="990.9" y="437" width="7.2" height="15.0" fill="rgb(241,71,3)" rx="2" ry="2"/>
			<text x="993.95" y="447.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="996.7" y="277" width="1.4" height="15.0" fill="rgb(238,229,31)" rx="2" ry="2"/>
			<text x="999.67" y="287.5"></text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="1033.9" y="501" width="2.9" height="15.0" fill="rgb(243,158,41)" rx="2" ry="2"/>
			<text x="1036.91" y="511.5"></text>
		</g>
		<g>
			<title>pthread_mutex_lock (76 samples, 9.22%)</title>
			<rect x="300.7" y="197" width="108.8" height="15.0" fill="rgb(235,83,4)" rx="2" ry="2"/>
			<text x="303.70" y="207.5">pthread_mutex..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="970.9" y="549" width="2.9" height="15.0" fill="rgb(218,27,23)" rx="2" ry="2"/>
			<text x="973.90" y="559.5"></text>
		</g>
		<g>
			<title>__gthread_mutex_lock (2 samples, 0.24%)</title>
			<rect x="11.4" y="213" width="2.9" height="15.0" fill="rgb(213,38,52)" rx="2" ry="2"/>
			<text x="14.43" y="223.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="597" width="1.4" height="15.0" fill="rgb(208,4,33)" rx="2" ry="2"/>
			<text x="1054.09" y="607.5"></text>
		</g>
		<g>
			<title>malloc_consolidate (2 samples, 0.24%)</title>
			<rect x="979.5" y="469" width="2.9" height="15.0" fill="rgb(221,98,0)" rx="2" ry="2"/>
			<text x="982.49" y="479.5"></text>
		</g>
		<g>
			<title>PageId::PageId (3 samples, 0.36%)</title>
			<rect x="1117.0" y="581" width="4.3" height="15.0" fill="rgb(236,189,53)" rx="2" ry="2"/>
			<text x="1119.97" y="591.5"></text>
		</g>
		<g>
			<title>(anonymous (1 samples, 0.12%)</title>
			<rect x="267.8" y="69" width="1.4" height="15.0" fill="rgb(237,102,24)" rx="2" ry="2"/>
			<text x="270.77" y="79.5"></text>
		</g>
		<g>
			<title>__gthread_once (322 samples, 39.08%)</title>
			<rect x="273.5" y="469" width="461.1" height="15.0" fill="rgb(231,24,7)" rx="2" ry="2"/>
			<text x="276.50" y="479.5">__gthread_once</text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::computeForNetwork(Network (193 samples, 23.42%)</title>
			<rect x="458.2" y="197" width="276.4" height="15.0" fill="rgb(212,162,20)" rx="2" ry="2"/>
			<text x="461.23" y="207.5">MultiThreadedPageRankComputer::comput..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1062.5" y="533" width="1.5" height="15.0" fill="rgb(214,22,30)" rx="2" ry="2"/>
			<text x="1065.55" y="543.5"></text>
		</g>
		<g>
			<title>pthread_mutex_unlock@plt (1 samples, 0.12%)</title>
			<rect x="187.6" y="197" width="1.4" height="15.0" fill="rgb(211,118,4)" rx="2" ry="2"/>
			<text x="190.57" y="207.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.61%)</title>
			<rect x="990.9" y="373" width="7.2" height="15.0" fill="rgb(221,164,10)" rx="2" ry="2"/>
			<text x="993.95" y="383.5"></text>
		</g>
		<g>
			<title>_int_malloc (2 samples, 0.24%)</title>
			<rect x="1114.1" y="469" width="2.9" height="15.0" fill="rgb(213,135,18)" rx="2" ry="2"/>
			<text x="1117.10" y="479.5"></text>
		</g>
		<g>
			<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId,
				(177 samples, 21.48%)
			</title>
			<rect x="20.0" y="597" width="253.5" height="15.0" fill="rgb(223,209,43)" rx="2" ry="2"/>
			<text x="23.02" y="607.5">std::thread::_State_impl&lt;std::thr..</text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (322 samples, 39.08%)</title>
			<rect x="273.5" y="517" width="461.1" height="15.0" fill="rgb(225,196,27)" rx="2" ry="2"/>
			<text x="276.50" y="527.5">std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std..</text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (2 samples, 0.24%)</title>
			<rect x="1139.9" y="517" width="2.8" height="15.0" fill="rgb(214,217,16)" rx="2" ry="2"/>
			<text x="1142.88" y="527.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.36%)</title>
			<rect x="193.3" y="133" width="4.3" height="15.0" fill="rgb(205,5,4)" rx="2" ry="2"/>
			<text x="196.30" y="143.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples,
				0.73%)
			</title>
			<rect x="11.4" y="581" width="8.6" height="15.0" fill="rgb(240,122,37)" rx="2" ry="2"/>
			<text x="14.43" y="591.5"></text>
		</g>
		<g>
			<title>__gthread_join (3 samples, 0.36%)</title>
			<rect x="734.6" y="437" width="4.3" height="15.0" fill="rgb(242,3,46)" rx="2" ry="2"/>
			<text x="737.61" y="447.5"></text>
		</g>
		<g>
			<title>std::_Hash_bytes (2 samples, 0.24%)</title>
			<rect x="1139.9" y="501" width="2.8" height="15.0" fill="rgb(207,225,30)" rx="2" ry="2"/>
			<text x="1142.88" y="511.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1048.2" y="517" width="1.5" height="15.0" fill="rgb(208,120,9)" rx="2" ry="2"/>
			<text x="1051.23" y="527.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (2 samples, 0.24%)</title>
			<rect x="1058.3" y="565" width="2.8" height="15.0" fill="rgb(233,39,29)" rx="2" ry="2"/>
			<text x="1061.25" y="575.5"></text>
		</g>
		<g>
			<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page
				(6 samples, 0.73%)
			</title>
			<rect x="11.4" y="597" width="8.6" height="15.0" fill="rgb(216,228,15)" rx="2" ry="2"/>
			<text x="14.43" y="607.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1072.6" y="565" width="4.3" height="15.0" fill="rgb(228,77,15)" rx="2" ry="2"/>
			<text x="1075.57" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="18.6" y="117" width="1.4" height="15.0" fill="rgb(221,62,20)" rx="2" ry="2"/>
			<text x="21.59" y="127.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="533" width="1.4" height="15.0" fill="rgb(230,200,6)" rx="2" ry="2"/>
			<text x="1064.12" y="543.5"></text>
		</g>
		<g>
			<title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize (2 samples, 0.24%)</title>
			<rect x="1054.0" y="613" width="2.8" height="15.0" fill="rgb(249,152,50)" rx="2" ry="2"/>
			<text x="1056.96" y="623.5"></text>
		</g>
		<g>
			<title>Page::getId (3 samples, 0.36%)</title>
			<rect x="1072.6" y="597" width="4.3" height="15.0" fill="rgb(215,13,51)" rx="2" ry="2"/>
			<text x="1075.57" y="607.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (20 samples, 2.43%)</title>
			<rect x="1144.2" y="549" width="28.6" height="15.0" fill="rgb(234,162,12)" rx="2" ry="2"/>
			<text x="1147.17" y="559.5">st..</text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1062.5" y="469" width="1.5" height="15.0" fill="rgb(214,156,22)" rx="2" ry="2"/>
			<text x="1065.55" y="479.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (5 samples, 0.61%)</title>
			<rect x="1172.8" y="533" width="7.2" height="15.0" fill="rgb(210,50,38)" rx="2" ry="2"/>
			<text x="1175.82" y="543.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1187.1" y="501" width="1.5" height="15.0" fill="rgb(234,136,54)" rx="2" ry="2"/>
			<text x="1190.14" y="511.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId*, (1 samples, 0.12%)</title>
			<rect x="1086.9" y="565" width="1.4" height="15.0" fill="rgb(231,87,44)" rx="2" ry="2"/>
			<text x="1089.89" y="575.5"></text>
		</g>
		<g>
			<title>std::__basic_future&lt;double&gt;::_M_get_result (159 samples, 19.30%)</title>
			<rect x="743.2" y="581" width="227.7" height="15.0" fill="rgb(249,77,21)" rx="2" ry="2"/>
			<text x="746.20" y="591.5">std::__basic_future&lt;double&gt;::_..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="970.9" y="565" width="2.9" height="15.0" fill="rgb(237,189,22)" rx="2" ry="2"/>
			<text x="973.90" y="575.5"></text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="738.9" y="501" width="2.9" height="15.0" fill="rgb(222,187,17)" rx="2" ry="2"/>
			<text x="741.91" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="266.3" y="149" width="2.9" height="15.0" fill="rgb(216,37,22)" rx="2" ry="2"/>
			<text x="269.33" y="159.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="421" width="1.5" height="15.0" fill="rgb(237,108,39)" rx="2" ry="2"/>
			<text x="1074.14" y="431.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.12%)</title>
			<rect x="1125.6" y="517" width="1.4" height="15.0" fill="rgb(225,93,16)" rx="2" ry="2"/>
			<text x="1128.56" y="527.5"></text>
		</g>
		<g>
			<title>std::operator==&lt;char&gt; (18 samples, 2.18%)</title>
			<rect x="638.7" y="69" width="25.7" height="15.0" fill="rgb(216,117,2)" rx="2" ry="2"/>
			<text x="641.67" y="79.5">s..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1072.6" y="517" width="4.3" height="15.0" fill="rgb(219,229,0)" rx="2" ry="2"/>
			<text x="1075.57" y="527.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="558.5" y="149" width="1.4" height="15.0" fill="rgb(220,156,5)" rx="2" ry="2"/>
			<text x="561.47" y="159.5"></text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="741.8" y="501" width="1.4" height="15.0" fill="rgb(244,67,27)" rx="2" ry="2"/>
			<text x="744.77" y="511.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;double&gt;, (322 samples, 39.08%)</title>
			<rect x="273.5" y="373" width="461.1" height="15.0" fill="rgb(232,178,12)" rx="2" ry="2"/>
			<text x="276.50" y="383.5">std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;..</text>
		</g>
		<g>
			<title>std::__detail::_Insert&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1185.7" y="581" width="1.4" height="15.0" fill="rgb(224,6,28)" rx="2" ry="2"/>
			<text x="1188.70" y="591.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="517" width="1.4" height="15.0" fill="rgb(241,172,37)" rx="2" ry="2"/>
			<text x="1064.12" y="527.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (3 samples, 0.36%)</title>
			<rect x="1135.6" y="517" width="4.3" height="15.0" fill="rgb(231,207,49)" rx="2" ry="2"/>
			<text x="1138.58" y="527.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1065.4" y="453" width="1.4" height="15.0" fill="rgb(240,112,19)" rx="2" ry="2"/>
			<text x="1068.41" y="463.5"></text>
		</g>
		<g>
			<title>std::__detail::_Mod_range_hashing::operator() (11 samples, 1.33%)</title>
			<rect x="250.6" y="117" width="15.7" height="15.0" fill="rgb(225,226,53)" rx="2" ry="2"/>
			<text x="253.58" y="127.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_commonV2::_M_join (159 samples, 19.30%)</title>
			<rect x="743.2" y="533" width="227.7" height="15.0" fill="rgb(224,56,44)" rx="2" ry="2"/>
			<text x="746.20" y="543.5">std::__future_base::_Async_sta..</text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="522.7" y="69" width="2.8" height="15.0" fill="rgb(211,116,12)" rx="2" ry="2"/>
			<text x="525.67" y="79.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1076.9" y="469" width="1.4" height="15.0" fill="rgb(211,101,11)" rx="2" ry="2"/>
			<text x="1079.87" y="479.5"></text>
		</g>
		<g>
			<title>std::equal_to&lt;PageId&gt;::operator() (20 samples, 2.43%)</title>
			<rect x="635.8" y="101" width="28.6" height="15.0" fill="rgb(228,178,16)" rx="2" ry="2"/>
			<text x="638.80" y="111.5">st..</text>
		</g>
		<g>
			<title>__memcmp_avx2_movbe (11 samples, 1.33%)</title>
			<rect x="234.8" y="37" width="15.8" height="15.0" fill="rgb(236,8,16)" rx="2" ry="2"/>
			<text x="237.83" y="47.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1062.5" y="485" width="1.5" height="15.0" fill="rgb(221,106,3)" rx="2" ry="2"/>
			<text x="1065.55" y="495.5"></text>
		</g>
		<g>
			<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (177 samples, 21.48%)</title>
			<rect x="20.0" y="421" width="253.5" height="15.0" fill="rgb(248,26,53)" rx="2" ry="2"/>
			<text x="23.02" y="431.5">std::function&lt;std::unique_ptr&lt;std..</text>
		</g>
		<g>
			<title>pthread_mutex_lock (2 samples, 0.24%)</title>
			<rect x="11.4" y="197" width="2.9" height="15.0" fill="rgb(233,71,44)" rx="2" ry="2"/>
			<text x="14.43" y="207.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.24%)</title>
			<rect x="1137.0" y="421" width="2.9" height="15.0" fill="rgb(229,126,6)" rx="2" ry="2"/>
			<text x="1140.01" y="431.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1064.0" y="469" width="4.3" height="15.0" fill="rgb(208,139,23)" rx="2" ry="2"/>
			<text x="1066.98" y="479.5"></text>
		</g>
		<g>
			<title>Page::Page (1 samples, 0.12%)</title>
			<rect x="1061.1" y="565" width="1.4" height="15.0" fill="rgb(214,183,52)" rx="2" ry="2"/>
			<text x="1064.12" y="575.5"></text>
		</g>
		<g>
			<title>std::pair&lt;PageId (3 samples, 0.36%)</title>
			<rect x="1117.0" y="597" width="4.3" height="15.0" fill="rgb(242,4,42)" rx="2" ry="2"/>
			<text x="1119.97" y="607.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="18.6" y="85" width="1.4" height="15.0" fill="rgb(247,213,15)" rx="2" ry="2"/>
			<text x="21.59" y="95.5"></text>
		</g>
		<g>
			<title>_int_free (4 samples, 0.49%)</title>
			<rect x="990.9" y="293" width="5.8" height="15.0" fill="rgb(218,97,18)" rx="2" ry="2"/>
			<text x="993.95" y="303.5"></text>
		</g>
		<g>
			<title>std::__relocate_a_1&lt;PageId*, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="501" width="1.5" height="15.0" fill="rgb(210,39,31)" rx="2" ry="2"/>
			<text x="1074.14" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="18.6" y="165" width="1.4" height="15.0" fill="rgb(233,176,3)" rx="2" ry="2"/>
			<text x="21.59" y="175.5"></text>
		</g>
		<g>
			<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples, 0.73%)</title>
			<rect x="11.4" y="549" width="8.6" height="15.0" fill="rgb(247,8,40)" rx="2" ry="2"/>
			<text x="14.43" y="559.5"></text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="272.1" y="69" width="1.4" height="15.0" fill="rgb(250,191,30)" rx="2" ry="2"/>
			<text x="275.06" y="79.5"></text>
		</g>
		<g>
			<title>std::__invoke_r&lt;void, (52 samples, 6.31%)</title>
			<rect x="199.0" y="229" width="74.5" height="15.0" fill="rgb(230,193,38)" rx="2" ry="2"/>
			<text x="202.03" y="239.5">std::__i..</text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1078.3" y="581" width="2.9" height="15.0" fill="rgb(241,112,22)" rx="2" ry="2"/>
			<text x="1081.30" y="591.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1021.0" y="517" width="4.3" height="15.0" fill="rgb(219,126,14)" rx="2" ry="2"/>
			<text x="1024.02" y="527.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;double&gt;, (177 samples, 21.48%)</title>
			<rect x="20.0" y="373" width="253.5" height="15.0" fill="rgb(207,168,44)" rx="2" ry="2"/>
			<text x="23.02" y="383.5">std::__invoke_impl&lt;std::unique_pt..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="485" width="1.4" height="15.0" fill="rgb(208,120,31)" rx="2" ry="2"/>
			<text x="1064.12" y="495.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (105 samples, 12.74%)</title>
			<rect x="561.3" y="149" width="150.4" height="15.0" fill="rgb(215,3,30)" rx="2" ry="2"/>
			<text x="564.33" y="159.5">std::_Hashtable&lt;Pag..</text>
		</g>
		<g>
			<title>__memmove_avx_unaligned_erms (32 samples, 3.88%)</title>
			<rect x="468.3" y="37" width="45.8" height="15.0" fill="rgb(225,52,28)" rx="2" ry="2"/>
			<text x="471.25" y="47.5">__me..</text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="232.0" y="101" width="1.4" height="15.0" fill="rgb(245,125,15)" rx="2" ry="2"/>
			<text x="234.97" y="111.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1086.9" y="485" width="1.4" height="15.0" fill="rgb(232,52,43)" rx="2" ry="2"/>
			<text x="1089.89" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="421" width="1.4" height="15.0" fill="rgb(213,40,0)" rx="2" ry="2"/>
			<text x="1085.60" y="431.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1078.3" y="501" width="1.4" height="15.0" fill="rgb(237,3,14)" rx="2" ry="2"/>
			<text x="1081.30" y="511.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples, 21.48%)</title>
			<rect x="20.0" y="517" width="253.5" height="15.0" fill="rgb(238,84,12)" rx="2" ry="2"/>
			<text x="23.02" y="527.5">std::__future_base::_Async_state_..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="982.4" y="453" width="8.5" height="15.0" fill="rgb(244,212,7)" rx="2" ry="2"/>
			<text x="985.35" y="463.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;double&gt;, (177 samples, 21.48%)</title>
			<rect x="20.0" y="357" width="253.5" height="15.0" fill="rgb(243,42,27)" rx="2" ry="2"/>
			<text x="23.02" y="367.5">std::__future_base::_Task_setter&lt;..</text>
		</g>
		<g>
			<title>malloc_consolidate (1 samples, 0.12%)</title>
			<rect x="1188.6" y="501" width="1.4" height="15.0" fill="rgb(228,128,11)" rx="2" ry="2"/>
			<text x="1191.57" y="511.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1038.2" y="581" width="4.3" height="15.0" fill="rgb(238,126,9)" rx="2" ry="2"/>
			<text x="1041.20" y="591.5"></text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1081.2" y="597" width="1.4" height="15.0" fill="rgb(223,59,5)" rx="2" ry="2"/>
			<text x="1084.17" y="607.5"></text>
		</g>
		<g>
			<title>NetworkGenerator::generatePageFromNum (2 samples, 0.24%)</title>
			<rect x="1054.0" y="597" width="2.8" height="15.0" fill="rgb(234,78,8)" rx="2" ry="2"/>
			<text x="1056.96" y="607.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (18 samples, 2.18%)</title>
			<rect x="979.5" y="581" width="25.8" height="15.0" fill="rgb(244,32,5)" rx="2" ry="2"/>
			<text x="982.49" y="591.5">s..</text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (6 samples, 0.73%)</title>
			<rect x="11.4" y="437" width="8.6" height="15.0" fill="rgb(208,54,13)" rx="2" ry="2"/>
			<text x="14.43" y="447.5"></text>
		</g>
		<g>
			<title>std::__detail::_Insert&lt;PageId, (6 samples, 0.73%)</title>
			<rect x="1042.5" y="581" width="8.6" height="15.0" fill="rgb(231,87,25)" rx="2" ry="2"/>
			<text x="1045.50" y="591.5"></text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="190.4" y="165" width="2.9" height="15.0" fill="rgb(249,98,7)" rx="2" ry="2"/>
			<text x="193.44" y="175.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="17.2" y="197" width="1.4" height="15.0" fill="rgb(227,98,7)" rx="2" ry="2"/>
			<text x="20.16" y="207.5"></text>
		</g>
		<g>
			<title>std::unordered_map&lt;PageId, (49 samples, 5.95%)</title>
			<rect x="199.0" y="181" width="70.2" height="15.0" fill="rgb(236,140,47)" rx="2" ry="2"/>
			<text x="202.03" y="191.5">std::un..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="18.6" y="133" width="1.4" height="15.0" fill="rgb(239,206,29)" rx="2" ry="2"/>
			<text x="21.59" y="143.5"></text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="738.9" y="485" width="2.9" height="15.0" fill="rgb(231,72,9)" rx="2" ry="2"/>
			<text x="741.91" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1066.8" y="421" width="1.5" height="15.0" fill="rgb(245,158,39)" rx="2" ry="2"/>
			<text x="1069.84" y="431.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1112.7" y="485" width="1.4" height="15.0" fill="rgb(209,53,49)" rx="2" ry="2"/>
			<text x="1115.67" y="495.5"></text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (177 samples, 21.48%)</title>
			<rect x="20.0" y="501" width="253.5" height="15.0" fill="rgb(234,144,43)" rx="2" ry="2"/>
			<text x="23.02" y="511.5">std::__future_base::_State_baseV2..</text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1132.7" y="485" width="2.9" height="15.0" fill="rgb(242,48,11)" rx="2" ry="2"/>
			<text x="1135.72" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1112.7" y="549" width="1.4" height="15.0" fill="rgb(232,193,31)" rx="2" ry="2"/>
			<text x="1115.67" y="559.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1081.2" y="517" width="1.4" height="15.0" fill="rgb(222,171,17)" rx="2" ry="2"/>
			<text x="1084.17" y="527.5"></text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (16 samples, 1.94%)</title>
			<rect x="711.7" y="117" width="22.9" height="15.0" fill="rgb(208,184,46)" rx="2" ry="2"/>
			<text x="714.70" y="127.5">s..</text>
		</g>
		<g>
			<title>PageId::~PageId (1 samples, 0.12%)</title>
			<rect x="1086.9" y="501" width="1.4" height="15.0" fill="rgb(235,185,16)" rx="2" ry="2"/>
			<text x="1089.89" y="511.5"></text>
		</g>
		<g>
			<title>std::unordered_set&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1185.7" y="597" width="1.4" height="15.0" fill="rgb(236,13,47)" rx="2" ry="2"/>
			<text x="1188.70" y="607.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="17.2" y="181" width="1.4" height="15.0" fill="rgb(230,225,30)" rx="2" ry="2"/>
			<text x="20.16" y="191.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_commonV2::_M_complete_async (159 samples, 19.30%)</title>
			<rect x="743.2" y="549" width="227.7" height="15.0" fill="rgb(236,210,19)" rx="2" ry="2"/>
			<text x="746.20" y="559.5">std::__future_base::_Async_sta..</text>
		</g>
		<g>
			<title>_int_malloc (1 samples, 0.12%)</title>
			<rect x="1085.5" y="469" width="1.4" height="15.0" fill="rgb(233,118,34)" rx="2" ry="2"/>
			<text x="1088.46" y="479.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.12%)</title>
			<rect x="1079.7" y="533" width="1.5" height="15.0" fill="rgb(210,201,28)" rx="2" ry="2"/>
			<text x="1082.73" y="543.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::poolAndWait&lt;Page (3 samples, 0.36%)</title>
			<rect x="734.6" y="597" width="4.3" height="15.0" fill="rgb(212,175,43)" rx="2" ry="2"/>
			<text x="737.61" y="607.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1135.6" y="421" width="1.4" height="15.0" fill="rgb(224,8,42)" rx="2" ry="2"/>
			<text x="1138.58" y="431.5"></text>
		</g>
		<g>
			<title>std::__basic_future&lt;MultiThreadedPageRankComputer::{unnamed (3 samples, 0.36%)</title>
			<rect x="734.6" y="565" width="4.3" height="15.0" fill="rgb(227,106,37)" rx="2" ry="2"/>
			<text x="737.61" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1135.6" y="405" width="1.4" height="15.0" fill="rgb(220,217,11)" rx="2" ry="2"/>
			<text x="1138.58" y="415.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1139.9" y="565" width="2.8" height="15.0" fill="rgb(220,192,10)" rx="2" ry="2"/>
			<text x="1142.88" y="575.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1124.1" y="549" width="1.5" height="15.0" fill="rgb(230,86,41)" rx="2" ry="2"/>
			<text x="1127.13" y="559.5"></text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="190.4" y="181" width="2.9" height="15.0" fill="rgb(205,67,51)" rx="2" ry="2"/>
			<text x="193.44" y="191.5"></text>
		</g>
		<g>
			<title>malloc_consolidate (5 samples, 0.61%)</title>
			<rect x="998.1" y="373" width="7.2" height="15.0" fill="rgb(227,172,2)" rx="2" ry="2"/>
			<text x="1001.11" y="383.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1135.6" y="437" width="1.4" height="15.0" fill="rgb(243,92,50)" rx="2" ry="2"/>
			<text x="1138.58" y="447.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (4 samples, 0.49%)</title>
			<rect x="1042.5" y="549" width="5.7" height="15.0" fill="rgb(234,119,51)" rx="2" ry="2"/>
			<text x="1045.50" y="559.5"></text>
		</g>
		<g>
			<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (35 samples, 4.25%)</title>
			<rect x="138.9" y="245" width="50.1" height="15.0" fill="rgb(233,33,33)" rx="2" ry="2"/>
			<text x="141.88" y="255.5">std::..</text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="555.6" y="117" width="2.9" height="15.0" fill="rgb(236,218,31)" rx="2" ry="2"/>
			<text x="558.61" y="127.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1086.9" y="453" width="1.4" height="15.0" fill="rgb(229,23,27)" rx="2" ry="2"/>
			<text x="1089.89" y="463.5"></text>
		</g>
		<g>
			<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (322 samples, 39.08%)</title>
			<rect x="273.5" y="405" width="461.1" height="15.0" fill="rgb(249,78,12)" rx="2" ry="2"/>
			<text x="276.50" y="415.5">std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Res..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (38 samples, 4.61%)</title>
			<rect x="459.7" y="133" width="54.4" height="15.0" fill="rgb(234,186,33)" rx="2" ry="2"/>
			<text x="462.66" y="143.5">std::..</text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::pool&lt;PageId, (118 samples, 14.32%)</title>
			<rect x="20.0" y="261" width="169.0" height="15.0" fill="rgb(206,188,8)" rx="2" ry="2"/>
			<text x="23.02" y="271.5">MultiThreadedPageRank..</text>
		</g>
		<g>
			<title>PageId::PageId (3 samples, 0.36%)</title>
			<rect x="1072.6" y="581" width="4.3" height="15.0" fill="rgb(238,214,43)" rx="2" ry="2"/>
			<text x="1075.57" y="591.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1149.9" y="533" width="2.9" height="15.0" fill="rgb(234,64,54)" rx="2" ry="2"/>
			<text x="1152.90" y="543.5"></text>
		</g>
		<g>
			<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title>
			<rect x="1066.8" y="389" width="1.5" height="15.0" fill="rgb(221,125,51)" rx="2" ry="2"/>
			<text x="1069.84" y="399.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (8 samples, 0.97%)</title>
			<rect x="514.1" y="101" width="11.4" height="15.0" fill="rgb(216,75,23)" rx="2" ry="2"/>
			<text x="517.08" y="111.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (13 samples, 1.58%)</title>
			<rect x="1094.1" y="517" width="18.6" height="15.0" fill="rgb(243,164,17)" rx="2" ry="2"/>
			<text x="1097.05" y="527.5"></text>
		</g>
		<g>
			<title>Network::~Network (1 samples, 0.12%)</title>
			<rect x="1052.5" y="613" width="1.5" height="15.0" fill="rgb(242,208,34)" rx="2" ry="2"/>
			<text x="1055.52" y="623.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (36 samples, 4.37%)</title>
			<rect x="199.0" y="133" width="51.6" height="15.0" fill="rgb(239,175,36)" rx="2" ry="2"/>
			<text x="202.03" y="143.5">std::..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1064.0" y="501" width="4.3" height="15.0" fill="rgb(237,19,9)" rx="2" ry="2"/>
			<text x="1066.98" y="511.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1046.8" y="517" width="1.4" height="15.0" fill="rgb(226,74,40)" rx="2" ry="2"/>
			<text x="1049.80" y="527.5"></text>
		</g>
		<g>
			<title>PageId::PageId (1 samples, 0.12%)</title>
			<rect x="17.2" y="213" width="1.4" height="15.0" fill="rgb(239,19,52)" rx="2" ry="2"/>
			<text x="20.16" y="223.5"></text>
		</g>
		<g>
			<title>malloc (2 samples, 0.24%)</title>
			<rect x="1058.3" y="341" width="2.8" height="15.0" fill="rgb(233,46,26)" rx="2" ry="2"/>
			<text x="1061.25" y="351.5"></text>
		</g>
		<g>
			<title>operator (3 samples, 0.36%)</title>
			<rect x="521.2" y="85" width="4.3" height="15.0" fill="rgb(227,44,27)" rx="2" ry="2"/>
			<text x="524.24" y="95.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1112.7" y="533" width="1.4" height="15.0" fill="rgb(217,154,23)" rx="2" ry="2"/>
			<text x="1115.67" y="543.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="533" width="1.5" height="15.0" fill="rgb(207,116,40)" rx="2" ry="2"/>
			<text x="1074.14" y="543.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1064.0" y="549" width="4.3" height="15.0" fill="rgb(242,35,15)" rx="2" ry="2"/>
			<text x="1066.98" y="559.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;MultiThreadedPageRankComputer::{unnamed (6 samples, 0.73%)</title>
			<rect x="11.4" y="373" width="8.6" height="15.0" fill="rgb(233,226,35)" rx="2" ry="2"/>
			<text x="14.43" y="383.5"></text>
		</g>
		<g>
			<title>Page::generateId (1 samples, 0.12%)</title>
			<rect x="1084.0" y="597" width="1.5" height="15.0" fill="rgb(209,225,37)" rx="2" ry="2"/>
			<text x="1087.03" y="607.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples,
				21.48%)
			</title>
			<rect x="20.0" y="565" width="253.5" height="15.0" fill="rgb(221,44,17)" rx="2" ry="2"/>
			<text x="23.02" y="575.5">std::thread::_Invoker&lt;std::tuple&lt;..</text>
		</g>
		<g>
			<title>__gthread_once (6 samples, 0.73%)</title>
			<rect x="11.4" y="469" width="8.6" height="15.0" fill="rgb(254,26,29)" rx="2" ry="2"/>
			<text x="14.43" y="479.5"></text>
		</g>
		<g>
			<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (5 samples, 0.61%)</title>
			<rect x="1125.6" y="549" width="7.1" height="15.0" fill="rgb(214,119,42)" rx="2" ry="2"/>
			<text x="1128.56" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="469" width="1.4" height="15.0" fill="rgb(210,20,1)" rx="2" ry="2"/>
			<text x="1085.60" y="479.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1128.4" y="421" width="4.3" height="15.0" fill="rgb(220,89,29)" rx="2" ry="2"/>
			<text x="1131.42" y="431.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1079.7" y="565" width="1.5" height="15.0" fill="rgb(207,46,31)" rx="2" ry="2"/>
			<text x="1082.73" y="575.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="741.8" y="581" width="1.4" height="15.0" fill="rgb(220,43,41)" rx="2" ry="2"/>
			<text x="744.77" y="591.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::computeForNetwork(Network (49 samples, 5.95%)</title>
			<rect x="199.0" y="197" width="70.2" height="15.0" fill="rgb(225,203,46)" rx="2" ry="2"/>
			<text x="202.03" y="207.5">MultiTh..</text>
		</g>
		<g>
			<title>std::_Construct&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="453" width="2.8" height="15.0" fill="rgb(220,150,36)" rx="2" ry="2"/>
			<text x="1061.25" y="463.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId&gt; (1 samples, 0.12%)</title>
			<rect x="1078.3" y="517" width="1.4" height="15.0" fill="rgb(228,163,5)" rx="2" ry="2"/>
			<text x="1081.30" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="18.6" y="197" width="1.4" height="15.0" fill="rgb(230,213,22)" rx="2" ry="2"/>
			<text x="21.59" y="207.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="453" width="1.4" height="15.0" fill="rgb(245,64,4)" rx="2" ry="2"/>
			<text x="1064.12" y="463.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1188.6" y="517" width="1.4" height="15.0" fill="rgb(239,100,18)" rx="2" ry="2"/>
			<text x="1191.57" y="527.5"></text>
		</g>
		<g>
			<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (73 samples, 8.86%)</title>
			<rect x="34.3" y="245" width="104.6" height="15.0" fill="rgb(238,113,12)" rx="2" ry="2"/>
			<text x="37.34" y="255.5">std::lock_gu..</text>
		</g>
		<g>
			<title>std::pair&lt;PageId (3 samples, 0.36%)</title>
			<rect x="1128.4" y="485" width="4.3" height="15.0" fill="rgb(252,29,1)" rx="2" ry="2"/>
			<text x="1131.42" y="495.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.12%)</title>
			<rect x="1078.3" y="549" width="1.4" height="15.0" fill="rgb(222,32,18)" rx="2" ry="2"/>
			<text x="1081.30" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1075.4" y="501" width="1.5" height="15.0" fill="rgb(244,21,38)" rx="2" ry="2"/>
			<text x="1078.44" y="511.5"></text>
		</g>
		<g>
			<title>MultiThreadedPageRankComputer::pool&lt;Page (3 samples, 0.36%)</title>
			<rect x="11.4" y="261" width="4.3" height="15.0" fill="rgb(222,169,53)" rx="2" ry="2"/>
			<text x="14.43" y="271.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples, 0.73%)</title>
			<rect x="11.4" y="325" width="8.6" height="15.0" fill="rgb(236,9,2)" rx="2" ry="2"/>
			<text x="14.43" y="335.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate (2 samples, 0.24%)</title>
			<rect x="1068.3" y="517" width="2.8" height="15.0" fill="rgb(229,62,49)" rx="2" ry="2"/>
			<text x="1071.28" y="527.5"></text>
		</g>
		<g>
			<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1058.3" y="501" width="2.8" height="15.0" fill="rgb(217,40,13)" rx="2" ry="2"/>
			<text x="1061.25" y="511.5"></text>
		</g>
		<g>
			<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (34 samples, 4.13%)</title>
			<rect x="409.5" y="245" width="48.7" height="15.0" fill="rgb(206,195,28)" rx="2" ry="2"/>
			<text x="412.54" y="255.5">std:..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="17.2" y="149" width="1.4" height="15.0" fill="rgb(251,79,47)" rx="2" ry="2"/>
			<text x="20.16" y="159.5"></text>
		</g>
		<g>
			<title>Page::Page (2 samples, 0.24%)</title>
			<rect x="1058.3" y="533" width="2.8" height="15.0" fill="rgb(242,61,7)" rx="2" ry="2"/>
			<text x="1061.25" y="543.5"></text>
		</g>
		<g>
			<title>malloc_consolidate (2 samples, 0.24%)</title>
			<rect x="1137.0" y="373" width="2.9" height="15.0" fill="rgb(208,129,14)" rx="2" ry="2"/>
			<text x="1140.01" y="383.5"></text>
		</g>
		<g>
			<title>Network::addPage (2 samples, 0.24%)</title>
			<rect x="1058.3" y="597" width="2.8" height="15.0" fill="rgb(250,64,6)" rx="2" ry="2"/>
			<text x="1061.25" y="607.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="741.8" y="533" width="1.4" height="15.0" fill="rgb(230,143,35)" rx="2" ry="2"/>
			<text x="744.77" y="543.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="517" width="2.8" height="15.0" fill="rgb(214,17,52)" rx="2" ry="2"/>
			<text x="1061.25" y="527.5"></text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (1 samples, 0.12%)</title>
			<rect x="1036.8" y="517" width="1.4" height="15.0" fill="rgb(242,119,49)" rx="2" ry="2"/>
			<text x="1039.77" y="527.5"></text>
		</g>
		<g>
			<title>__memcmp_avx2_movbe (11 samples, 1.33%)</title>
			<rect x="648.7" y="37" width="15.7" height="15.0" fill="rgb(242,82,32)" rx="2" ry="2"/>
			<text x="651.69" y="47.5"></text>
		</g>
		<g>
			<title>std::__detail::__to_chars_10_impl&lt;unsigned (1 samples, 0.12%)</title>
			<rect x="1055.4" y="565" width="1.4" height="15.0" fill="rgb(254,167,1)" rx="2" ry="2"/>
			<text x="1058.39" y="575.5"></text>
		</g>
		<g>
			<title>free (1 samples, 0.12%)</title>
			<rect x="1112.7" y="469" width="1.4" height="15.0" fill="rgb(232,61,21)" rx="2" ry="2"/>
			<text x="1115.67" y="479.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="549" width="2.8" height="15.0" fill="rgb(226,208,40)" rx="2" ry="2"/>
			<text x="1061.25" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="269.2" y="149" width="4.3" height="15.0" fill="rgb(252,211,45)" rx="2" ry="2"/>
			<text x="272.20" y="159.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (3 samples, 0.36%)</title>
			<rect x="269.2" y="133" width="4.3" height="15.0" fill="rgb(249,228,17)" rx="2" ry="2"/>
			<text x="272.20" y="143.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1066.8" y="453" width="1.5" height="15.0" fill="rgb(217,157,6)" rx="2" ry="2"/>
			<text x="1069.84" y="463.5"></text>
		</g>
		<g>
			<title>_int_free (1 samples, 0.12%)</title>
			<rect x="1052.5" y="421" width="1.5" height="15.0" fill="rgb(207,95,18)" rx="2" ry="2"/>
			<text x="1055.52" y="431.5"></text>
		</g>
		<g>
			<title>__pthread_mutex_unlock_usercnt (34 samples, 4.13%)</title>
			<rect x="138.9" y="197" width="48.7" height="15.0" fill="rgb(217,8,14)" rx="2" ry="2"/>
			<text x="141.88" y="207.5">__pt..</text>
		</g>
		<g>
			<title>memcpy@plt (1 samples, 0.12%)</title>
			<rect x="1082.6" y="357" width="1.4" height="15.0" fill="rgb(249,142,31)" rx="2" ry="2"/>
			<text x="1085.60" y="367.5"></text>
		</g>
		<g>
			<title>malloc_consolidate (1 samples, 0.12%)</title>
			<rect x="1052.5" y="405" width="1.5" height="15.0" fill="rgb(251,23,10)" rx="2" ry="2"/>
			<text x="1055.52" y="415.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;Page*, (1 samples, 0.12%)</title>
			<rect x="1052.5" y="581" width="1.5" height="15.0" fill="rgb(234,201,37)" rx="2" ry="2"/>
			<text x="1055.52" y="591.5"></text>
		</g>
		<g>
			<title>std::__detail::_Node_iterator_base&lt;PageId, (10 samples, 1.21%)</title>
			<rect x="20.0" y="229" width="14.3" height="15.0" fill="rgb(211,110,35)" rx="2" ry="2"/>
			<text x="23.02" y="239.5"></text>
		</g>
		<g>
			<title>__lll_lock_wait (65 samples, 7.89%)</title>
			<rect x="45.8" y="181" width="93.1" height="15.0" fill="rgb(246,93,43)" rx="2" ry="2"/>
			<text x="48.80" y="191.5">__lll_lock_..</text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (18 samples, 2.18%)</title>
			<rect x="979.5" y="565" width="25.8" height="15.0" fill="rgb(240,190,0)" rx="2" ry="2"/>
			<text x="982.49" y="575.5">s..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="437" width="1.4" height="15.0" fill="rgb(223,85,14)" rx="2" ry="2"/>
			<text x="1085.60" y="447.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1071.1" y="549" width="1.5" height="15.0" fill="rgb(229,152,4)" rx="2" ry="2"/>
			<text x="1074.14" y="559.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1132.7" y="517" width="2.9" height="15.0" fill="rgb(251,90,15)" rx="2" ry="2"/>
			<text x="1135.72" y="527.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.12%)</title>
			<rect x="1086.9" y="549" width="1.4" height="15.0" fill="rgb(231,105,28)" rx="2" ry="2"/>
			<text x="1089.89" y="559.5"></text>
		</g>
		<g>
			<title>Page::getId (1 samples, 0.12%)</title>
			<rect x="1085.5" y="597" width="1.4" height="15.0" fill="rgb(251,49,34)" rx="2" ry="2"/>
			<text x="1088.46" y="607.5"></text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (322 samples, 39.08%)</title>
			<rect x="273.5" y="437" width="461.1" height="15.0" fill="rgb(218,140,37)" rx="2" ry="2"/>
			<text x="276.50" y="447.5">std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std:..</text>
		</g>
		<g>
			<title>std::__relocate_object_a&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="485" width="1.4" height="15.0" fill="rgb(240,55,40)" rx="2" ry="2"/>
			<text x="1054.09" y="495.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="18.6" y="101" width="1.4" height="15.0" fill="rgb(248,183,54)" rx="2" ry="2"/>
			<text x="21.59" y="111.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1078.3" y="485" width="1.4" height="15.0" fill="rgb(235,175,45)" rx="2" ry="2"/>
			<text x="1081.30" y="495.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1084.0" y="517" width="1.5" height="15.0" fill="rgb(231,37,24)" rx="2" ry="2"/>
			<text x="1087.03" y="527.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (2 samples, 0.24%)</title>
			<rect x="979.5" y="517" width="2.9" height="15.0" fill="rgb(239,199,53)" rx="2" ry="2"/>
			<text x="982.49" y="527.5"></text>
		</g>
		<g>
			<title>unlink_chunk.constprop (2 samples, 0.24%)</title>
			<rect x="976.6" y="549" width="2.9" height="15.0" fill="rgb(243,172,51)" rx="2" ry="2"/>
			<text x="979.63" y="559.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1033.9" y="533" width="2.9" height="15.0" fill="rgb(209,6,28)" rx="2" ry="2"/>
			<text x="1036.91" y="543.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate (2 samples, 0.24%)</title>
			<rect x="979.5" y="501" width="2.9" height="15.0" fill="rgb(224,198,39)" rx="2" ry="2"/>
			<text x="982.49" y="511.5"></text>
		</g>
		<g>
			<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2 samples, 0.24%)</title>
			<rect x="11.4" y="245" width="2.9" height="15.0" fill="rgb(224,93,11)" rx="2" ry="2"/>
			<text x="14.43" y="255.5"></text>
		</g>
		<g>
			<title>std::__invoke_r&lt;void, (193 samples, 23.42%)</title>
			<rect x="458.2" y="229" width="276.4" height="15.0" fill="rgb(248,31,45)" rx="2" ry="2"/>
			<text x="461.23" y="239.5">std::__invoke_r&lt;void,</text>
		</g>
		<g>
			<title>std::_Hash_bytes (2 samples, 0.24%)</title>
			<rect x="555.6" y="85" width="2.9" height="15.0" fill="rgb(249,164,4)" rx="2" ry="2"/>
			<text x="558.61" y="95.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (72 samples, 8.74%)</title>
			<rect x="561.3" y="133" width="103.1" height="15.0" fill="rgb(241,227,8)" rx="2" ry="2"/>
			<text x="564.33" y="143.5">std::_Hashta..</text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="1085.5" y="485" width="1.4" height="15.0" fill="rgb(207,5,20)" rx="2" ry="2"/>
			<text x="1088.46" y="495.5"></text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="270.6" y="101" width="2.9" height="15.0" fill="rgb(252,190,24)" rx="2" ry="2"/>
			<text x="273.63" y="111.5"></text>
		</g>
		<g>
			<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title>
			<rect x="1129.9" y="325" width="1.4" height="15.0" fill="rgb(239,190,11)" rx="2" ry="2"/>
			<text x="1132.85" y="335.5"></text>
		</g>
		<g>
			<title>Page::~Page (1 samples, 0.12%)</title>
			<rect x="1052.5" y="517" width="1.5" height="15.0" fill="rgb(236,147,24)" rx="2" ry="2"/>
			<text x="1055.52" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1076.9" y="533" width="1.4" height="15.0" fill="rgb(208,97,45)" rx="2" ry="2"/>
			<text x="1079.87" y="543.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1064.0" y="485" width="4.3" height="15.0" fill="rgb(237,143,2)" rx="2" ry="2"/>
			<text x="1066.98" y="495.5"></text>
		</g>
		<g>
			<title>std::call_once&lt;void (322 samples, 39.08%)</title>
			<rect x="273.5" y="485" width="461.1" height="15.0" fill="rgb(205,123,34)" rx="2" ry="2"/>
			<text x="276.50" y="495.5">std::call_once&lt;void</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="738.9" y="517" width="2.9" height="15.0" fill="rgb(218,184,17)" rx="2" ry="2"/>
			<text x="741.91" y="527.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1038.2" y="533" width="4.3" height="15.0" fill="rgb(240,22,52)" rx="2" ry="2"/>
			<text x="1041.20" y="543.5"></text>
		</g>
		<g>
			<title>std::unordered_set&lt;PageId, (9 samples, 1.09%)</title>
			<rect x="1038.2" y="597" width="12.9" height="15.0" fill="rgb(229,138,6)" rx="2" ry="2"/>
			<text x="1041.20" y="607.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (13 samples, 1.58%)</title>
			<rect x="537.0" y="149" width="18.6" height="15.0" fill="rgb(236,227,25)" rx="2" ry="2"/>
			<text x="539.99" y="159.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="453" width="1.4" height="15.0" fill="rgb(213,166,4)" rx="2" ry="2"/>
			<text x="1085.60" y="463.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1082.6" y="485" width="1.4" height="15.0" fill="rgb(251,204,37)" rx="2" ry="2"/>
			<text x="1085.60" y="495.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (177 samples,
				21.48%)
			</title>
			<rect x="20.0" y="581" width="253.5" height="15.0" fill="rgb(232,223,19)" rx="2" ry="2"/>
			<text x="23.02" y="591.5">std::thread::_Invoker&lt;std::tuple&lt;..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1114.1" y="517" width="2.9" height="15.0" fill="rgb(251,171,20)" rx="2" ry="2"/>
			<text x="1117.10" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1112.7" y="581" width="1.4" height="15.0" fill="rgb(217,120,17)" rx="2" ry="2"/>
			<text x="1115.67" y="591.5"></text>
		</g>
		<g>
			<title>__pthread_mutex_unlock_usercnt (34 samples, 4.13%)</title>
			<rect x="409.5" y="197" width="48.7" height="15.0" fill="rgb(253,207,52)" rx="2" ry="2"/>
			<text x="412.54" y="207.5">__pt..</text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::wait (3 samples, 0.36%)</title>
			<rect x="734.6" y="549" width="4.3" height="15.0" fill="rgb(236,119,0)" rx="2" ry="2"/>
			<text x="737.61" y="559.5"></text>
		</g>
		<g>
			<title>PageIdAndRank::PageIdAndRank (2 samples, 0.24%)</title>
			<rect x="1114.1" y="597" width="2.9" height="15.0" fill="rgb(213,120,42)" rx="2" ry="2"/>
			<text x="1117.10" y="607.5"></text>
		</g>
		<g>
			<title>operator (2 samples, 0.24%)</title>
			<rect x="1058.3" y="357" width="2.8" height="15.0" fill="rgb(252,160,40)" rx="2" ry="2"/>
			<text x="1061.25" y="367.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1129.9" y="389" width="2.8" height="15.0" fill="rgb(246,144,28)" rx="2" ry="2"/>
			<text x="1132.85" y="399.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1137.0" y="453" width="2.9" height="15.0" fill="rgb(221,159,42)" rx="2" ry="2"/>
			<text x="1140.01" y="463.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (10 samples, 1.21%)</title>
			<rect x="990.9" y="469" width="14.4" height="15.0" fill="rgb(247,6,48)" rx="2" ry="2"/>
			<text x="993.95" y="479.5"></text>
		</g>
		<g>
			<title>std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (322 samples, 39.08%)</title>
			<rect x="273.5" y="309" width="461.1" height="15.0" fill="rgb(245,207,43)" rx="2" ry="2"/>
			<text x="276.50" y="319.5">std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;Pag..</text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1081.2" y="533" width="1.4" height="15.0" fill="rgb(218,91,33)" rx="2" ry="2"/>
			<text x="1084.17" y="543.5"></text>
		</g>
		<g>
			<title>std::_Destroy&lt;PageIdAndRank*&gt; (1 samples, 0.12%)</title>
			<rect x="1187.1" y="565" width="1.5" height="15.0" fill="rgb(227,30,10)" rx="2" ry="2"/>
			<text x="1190.14" y="575.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.12%)</title>
			<rect x="1061.1" y="437" width="1.4" height="15.0" fill="rgb(226,174,24)" rx="2" ry="2"/>
			<text x="1064.12" y="447.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1187.1" y="485" width="1.5" height="15.0" fill="rgb(215,226,44)" rx="2" ry="2"/>
			<text x="1190.14" y="495.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="996.7" y="293" width="1.4" height="15.0" fill="rgb(240,223,2)" rx="2" ry="2"/>
			<text x="999.67" y="303.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (8 samples, 0.97%)</title>
			<rect x="514.1" y="165" width="11.4" height="15.0" fill="rgb(245,15,10)" rx="2" ry="2"/>
			<text x="517.08" y="175.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="982.4" y="405" width="2.8" height="15.0" fill="rgb(252,197,15)" rx="2" ry="2"/>
			<text x="985.35" y="415.5"></text>
		</g>
		<g>
			<title>PageId::PageId (17 samples, 2.06%)</title>
			<rect x="1088.3" y="597" width="24.4" height="15.0" fill="rgb(253,59,4)" rx="2" ry="2"/>
			<text x="1091.33" y="607.5">P..</text>
		</g>
		<g>
			<title>std::_Destroy&lt;Page&gt; (1 samples, 0.12%)</title>
			<rect x="1052.5" y="533" width="1.5" height="15.0" fill="rgb(241,35,18)" rx="2" ry="2"/>
			<text x="1055.52" y="543.5"></text>
		</g>
		<g>
			<title>std::equal_to&lt;PageId&gt;::operator() (12 samples, 1.46%)</title>
			<rect x="233.4" y="101" width="17.2" height="15.0" fill="rgb(206,54,5)" rx="2" ry="2"/>
			<text x="236.40" y="111.5"></text>
		</g>
		<g>
			<title>std::call_once&lt;void (3 samples, 0.36%)</title>
			<rect x="734.6" y="501" width="4.3" height="15.0" fill="rgb(252,170,7)" rx="2" ry="2"/>
			<text x="737.61" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1058.3" y="389" width="2.8" height="15.0" fill="rgb(250,152,32)" rx="2" ry="2"/>
			<text x="1061.25" y="399.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1124.1" y="501" width="1.5" height="15.0" fill="rgb(210,161,52)" rx="2" ry="2"/>
			<text x="1127.13" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (17 samples, 2.06%)</title>
			<rect x="1088.3" y="565" width="24.4" height="15.0" fill="rgb(232,123,39)" rx="2" ry="2"/>
			<text x="1091.33" y="575.5">s..</text>
		</g>
		<g>
			<title>_int_malloc (2 samples, 0.24%)</title>
			<rect x="1068.3" y="469" width="2.8" height="15.0" fill="rgb(241,201,52)" rx="2" ry="2"/>
			<text x="1071.28" y="479.5"></text>
		</g>
		<g>
			<title>std::hash&lt;std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1139.9" y="533" width="2.8" height="15.0" fill="rgb(221,34,5)" rx="2" ry="2"/>
			<text x="1142.88" y="543.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;MultiThreadedPageRankComputer::{unnamed (6 samples, 0.73%)</title>
			<rect x="11.4" y="357" width="8.6" height="15.0" fill="rgb(233,23,24)" rx="2" ry="2"/>
			<text x="14.43" y="367.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1135.6" y="373" width="1.4" height="15.0" fill="rgb(247,130,21)" rx="2" ry="2"/>
			<text x="1138.58" y="383.5"></text>
		</g>
		<g>
			<title>PageId::PageId (1 samples, 0.12%)</title>
			<rect x="1071.1" y="437" width="1.5" height="15.0" fill="rgb(245,18,42)" rx="2" ry="2"/>
			<text x="1074.14" y="447.5"></text>
		</g>
		<g>
			<title>std::call_once&lt;void (6 samples, 0.73%)</title>
			<rect x="11.4" y="485" width="8.6" height="15.0" fill="rgb(231,120,30)" rx="2" ry="2"/>
			<text x="14.43" y="495.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;void, (6 samples, 0.73%)</title>
			<rect x="11.4" y="533" width="8.6" height="15.0" fill="rgb(254,26,27)" rx="2" ry="2"/>
			<text x="14.43" y="543.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="979.5" y="533" width="2.9" height="15.0" fill="rgb(228,201,43)" rx="2" ry="2"/>
			<text x="982.49" y="543.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="741.8" y="517" width="1.4" height="15.0" fill="rgb(238,166,31)" rx="2" ry="2"/>
			<text x="744.77" y="527.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="1137.0" y="437" width="2.9" height="15.0" fill="rgb(219,38,24)" rx="2" ry="2"/>
			<text x="1140.01" y="447.5"></text>
		</g>
		<g>
			<title>free (3 samples, 0.36%)</title>
			<rect x="986.7" y="341" width="4.2" height="15.0" fill="rgb(211,69,29)" rx="2" ry="2"/>
			<text x="989.65" y="351.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (8 samples, 0.97%)</title>
			<rect x="1009.6" y="533" width="11.4" height="15.0" fill="rgb(211,210,0)" rx="2" ry="2"/>
			<text x="1012.56" y="543.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (5 samples, 0.61%)</title>
			<rect x="990.9" y="341" width="7.2" height="15.0" fill="rgb(242,95,21)" rx="2" ry="2"/>
			<text x="993.95" y="351.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (5 samples, 0.61%)</title>
			<rect x="1132.7" y="549" width="7.2" height="15.0" fill="rgb(235,91,18)" rx="2" ry="2"/>
			<text x="1135.72" y="559.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (5 samples, 0.61%)</title>
			<rect x="1132.7" y="533" width="7.2" height="15.0" fill="rgb(210,112,47)" rx="2" ry="2"/>
			<text x="1135.72" y="543.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="741.8" y="549" width="1.4" height="15.0" fill="rgb(208,33,5)" rx="2" ry="2"/>
			<text x="744.77" y="559.5"></text>
		</g>
		<g>
			<title>pthread_mutex_lock (73 samples, 8.86%)</title>
			<rect x="34.3" y="197" width="104.6" height="15.0" fill="rgb(235,153,38)" rx="2" ry="2"/>
			<text x="37.34" y="207.5">pthread_mute..</text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (4 samples, 0.49%)</title>
			<rect x="1127.0" y="501" width="5.7" height="15.0" fill="rgb(249,226,9)" rx="2" ry="2"/>
			<text x="1129.99" y="511.5"></text>
		</g>
		<g>
			<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (6 samples, 0.73%)</title>
			<rect x="11.4" y="517" width="8.6" height="15.0" fill="rgb(253,217,32)" rx="2" ry="2"/>
			<text x="14.43" y="527.5"></text>
		</g>
		<g>
			<title>std::_Vector_base&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1052.5" y="469" width="1.5" height="15.0" fill="rgb(227,103,48)" rx="2" ry="2"/>
			<text x="1055.52" y="479.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (11 samples, 1.33%)</title>
			<rect x="250.6" y="133" width="15.7" height="15.0" fill="rgb(214,162,46)" rx="2" ry="2"/>
			<text x="253.58" y="143.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.49%)</title>
			<rect x="1180.0" y="565" width="5.7" height="15.0" fill="rgb(212,173,12)" rx="2" ry="2"/>
			<text x="1182.98" y="575.5"></text>
		</g>
		<g>
			<title>PageId::operator== (2 samples, 0.24%)</title>
			<rect x="1025.3" y="501" width="2.9" height="15.0" fill="rgb(207,166,43)" rx="2" ry="2"/>
			<text x="1028.32" y="511.5"></text>
		</g>
		<g>
			<title>__pthread_clockjoin_ex (3 samples, 0.36%)</title>
			<rect x="734.6" y="421" width="4.3" height="15.0" fill="rgb(213,33,1)" rx="2" ry="2"/>
			<text x="737.61" y="431.5"></text>
		</g>
		<g>
			<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId
				(322 samples, 39.08%)
			</title>
			<rect x="273.5" y="565" width="461.1" height="15.0" fill="rgb(213,1,47)" rx="2" ry="2"/>
			<text x="276.50" y="575.5">std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_sta..</text>
		</g>
		<g>
			<title>std::unordered_map&lt;PageId, (146 samples, 17.72%)</title>
			<rect x="525.5" y="181" width="209.1" height="15.0" fill="rgb(235,98,37)" rx="2" ry="2"/>
			<text x="528.53" y="191.5">std::unordered_map&lt;PageId,</text>
		</g>
		<g>
			<title>std::__relocate_a_1&lt;PageIdAndRank*, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="501" width="1.4" height="15.0" fill="rgb(209,180,6)" rx="2" ry="2"/>
			<text x="1054.09" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (15 samples, 1.82%)</title>
			<rect x="1091.2" y="549" width="21.5" height="15.0" fill="rgb(248,56,45)" rx="2" ry="2"/>
			<text x="1094.19" y="559.5">s..</text>
		</g>
		<g>
			<title>PageId::PageId (3 samples, 0.36%)</title>
			<rect x="1064.0" y="533" width="4.3" height="15.0" fill="rgb(223,58,0)" rx="2" ry="2"/>
			<text x="1066.98" y="543.5"></text>
		</g>
		<g>
			<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (5 samples, 0.61%)</title>
			<rect x="990.9" y="421" width="7.2" height="15.0" fill="rgb(254,77,45)" rx="2" ry="2"/>
			<text x="993.95" y="431.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.12%)</title>
			<rect x="1124.1" y="533" width="1.5" height="15.0" fill="rgb(247,115,0)" rx="2" ry="2"/>
			<text x="1127.13" y="543.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (47 samples, 5.70%)</title>
			<rect x="199.0" y="149" width="67.3" height="15.0" fill="rgb(244,217,0)" rx="2" ry="2"/>
			<text x="202.03" y="159.5">std::_H..</text>
		</g>
		<g>
			<title>std::vector&lt;PageIdAndRank, (2 samples, 0.24%)</title>
			<rect x="1187.1" y="597" width="2.9" height="15.0" fill="rgb(237,42,14)" rx="2" ry="2"/>
			<text x="1190.14" y="607.5"></text>
		</g>
		<g>
			<title>SingleThreadedPageRankComputer::computeForNetwork (75 samples, 9.10%)</title>
			<rect x="1082.6" y="613" width="107.4" height="15.0" fill="rgb(253,194,45)" rx="2" ry="2"/>
			<text x="1085.60" y="623.5">SingleThreade..</text>
		</g>
		<g>
			<title>PageId::PageId (39 samples, 4.73%)</title>
			<rect x="458.2" y="181" width="55.9" height="15.0" fill="rgb(220,72,34)" rx="2" ry="2"/>
			<text x="461.23" y="191.5">PageI..</text>
		</g>
		<g>
			<title>malloc (1 samples, 0.12%)</title>
			<rect x="1128.4" y="373" width="1.5" height="15.0" fill="rgb(249,103,22)" rx="2" ry="2"/>
			<text x="1131.42" y="383.5"></text>
		</g>
		<g>
			<title>__gthread_mutex_unlock (1 samples, 0.12%)</title>
			<rect x="14.3" y="213" width="1.4" height="15.0" fill="rgb(222,134,25)" rx="2" ry="2"/>
			<text x="17.30" y="223.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="17.2" y="133" width="1.4" height="15.0" fill="rgb(215,84,11)" rx="2" ry="2"/>
			<text x="20.16" y="143.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.61%)</title>
			<rect x="1172.8" y="549" width="7.2" height="15.0" fill="rgb(221,125,44)" rx="2" ry="2"/>
			<text x="1175.82" y="559.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1043.9" y="533" width="4.3" height="15.0" fill="rgb(238,70,8)" rx="2" ry="2"/>
			<text x="1046.93" y="543.5"></text>
		</g>
		<g>
			<title>start_thread (506 samples, 61.41%)</title>
			<rect x="10.0" y="629" width="724.6" height="15.0" fill="rgb(236,71,47)" rx="2" ry="2"/>
			<text x="13.00" y="639.5">start_thread</text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1092.6" y="517" width="1.5" height="15.0" fill="rgb(206,219,51)" rx="2" ry="2"/>
			<text x="1095.62" y="527.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (3 samples, 0.36%)</title>
			<rect x="1038.2" y="565" width="4.3" height="15.0" fill="rgb(242,180,53)" rx="2" ry="2"/>
			<text x="1041.20" y="575.5"></text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (3 samples, 0.36%)</title>
			<rect x="1064.0" y="565" width="4.3" height="15.0" fill="rgb(215,43,40)" rx="2" ry="2"/>
			<text x="1066.98" y="575.5"></text>
		</g>
		<g>
			<title>std::operator+&lt;char, (1 samples, 0.12%)</title>
			<rect x="1062.5" y="549" width="1.5" height="15.0" fill="rgb(235,17,23)" rx="2" ry="2"/>
			<text x="1065.55" y="559.5"></text>
		</g>
		<g>
			<title>std::vector&lt;PageId, (1 samples, 0.12%)</title>
			<rect x="1052.5" y="501" width="1.5" height="15.0" fill="rgb(205,109,8)" rx="2" ry="2"/>
			<text x="1055.52" y="511.5"></text>
		</g>
		<g>
			<title>std::__invoke_impl&lt;void, (322 samples, 39.08%)</title>
			<rect x="273.5" y="533" width="461.1" height="15.0" fill="rgb(215,169,2)" rx="2" ry="2"/>
			<text x="276.50" y="543.5">std::__invoke_impl&lt;void,</text>
		</g>
		<g>
			<title>std::__detail::_Map_base&lt;PageId, (49 samples, 5.95%)</title>
			<rect x="199.0" y="165" width="70.2" height="15.0" fill="rgb(220,49,24)" rx="2" ry="2"/>
			<text x="202.03" y="175.5">std::__..</text>
		</g>
		<g>
			<title>sysmalloc (1 samples, 0.12%)</title>
			<rect x="740.3" y="453" width="1.5" height="15.0" fill="rgb(254,223,24)" rx="2" ry="2"/>
			<text x="743.34" y="463.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1084.0" y="501" width="1.5" height="15.0" fill="rgb(211,139,50)" rx="2" ry="2"/>
			<text x="1087.03" y="511.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1061.1" y="469" width="1.4" height="15.0" fill="rgb(221,214,5)" rx="2" ry="2"/>
			<text x="1064.12" y="479.5"></text>
		</g>
		<g>
			<title>std::_Hash_impl::hash (2 samples, 0.24%)</title>
			<rect x="266.3" y="101" width="2.9" height="15.0" fill="rgb(229,30,49)" rx="2" ry="2"/>
			<text x="269.33" y="111.5"></text>
		</g>
		<g>
			<title>operator (1 samples, 0.12%)</title>
			<rect x="1127.0" y="485" width="1.4" height="15.0" fill="rgb(206,188,40)" rx="2" ry="2"/>
			<text x="1129.99" y="495.5"></text>
		</g>
		<g>
			<title>std::__relocate_a&lt;PageIdAndRank*, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="517" width="1.4" height="15.0" fill="rgb(236,115,41)" rx="2" ry="2"/>
			<text x="1054.09" y="527.5"></text>
		</g>
		<g>
			<title>__pthread_once_slow (159 samples, 19.30%)</title>
			<rect x="743.2" y="485" width="227.7" height="15.0" fill="rgb(212,167,5)" rx="2" ry="2"/>
			<text x="746.20" y="495.5">__pthread_once_slow</text>
		</g>
		<g>
			<title>_int_malloc (1 samples, 0.12%)</title>
			<rect x="1059.7" y="325" width="1.4" height="15.0" fill="rgb(228,42,6)" rx="2" ry="2"/>
			<text x="1062.68" y="335.5"></text>
		</g>
		<g>
			<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1058.3" y="469" width="2.8" height="15.0" fill="rgb(211,24,44)" rx="2" ry="2"/>
			<text x="1061.25" y="479.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1188.6" y="533" width="1.4" height="15.0" fill="rgb(236,175,36)" rx="2" ry="2"/>
			<text x="1191.57" y="543.5"></text>
		</g>
		<g>
			<title>PageIdHash::operator() (1 samples, 0.12%)</title>
			<rect x="1036.8" y="549" width="1.4" height="15.0" fill="rgb(233,151,29)" rx="2" ry="2"/>
			<text x="1039.77" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1081.2" y="549" width="1.4" height="15.0" fill="rgb(207,175,12)" rx="2" ry="2"/>
			<text x="1084.17" y="559.5"></text>
		</g>
		<g>
			<title>std::__future_base::_State_baseV2::wait (159 samples, 19.30%)</title>
			<rect x="743.2" y="565" width="227.7" height="15.0" fill="rgb(235,12,14)" rx="2" ry="2"/>
			<text x="746.20" y="575.5">std::__future_base::_State_bas..</text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1086.9" y="469" width="1.4" height="15.0" fill="rgb(250,125,24)" rx="2" ry="2"/>
			<text x="1089.89" y="479.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (2 samples, 0.24%)</title>
			<rect x="1033.9" y="517" width="2.9" height="15.0" fill="rgb(249,171,34)" rx="2" ry="2"/>
			<text x="1036.91" y="527.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (1 samples, 0.12%)</title>
			<rect x="1076.9" y="549" width="1.4" height="15.0" fill="rgb(235,11,24)" rx="2" ry="2"/>
			<text x="1079.87" y="559.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1078.3" y="421" width="1.4" height="15.0" fill="rgb(234,30,32)" rx="2" ry="2"/>
			<text x="1081.30" y="431.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (2 samples, 0.24%)</title>
			<rect x="1114.1" y="565" width="2.9" height="15.0" fill="rgb(211,72,14)" rx="2" ry="2"/>
			<text x="1117.10" y="575.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1128.4" y="453" width="4.3" height="15.0" fill="rgb(238,119,19)" rx="2" ry="2"/>
			<text x="1131.42" y="463.5"></text>
		</g>
		<g>
			<title>PageId::PageId (1 samples, 0.12%)</title>
			<rect x="1085.5" y="581" width="1.4" height="15.0" fill="rgb(228,149,42)" rx="2" ry="2"/>
			<text x="1088.46" y="591.5"></text>
		</g>
		<g>
			<title>std::__detail::_Node_iterator&lt;std::pair&lt;PageId (16 samples, 1.94%)</title>
			<rect x="276.4" y="245" width="22.9" height="15.0" fill="rgb(220,56,49)" rx="2" ry="2"/>
			<text x="279.36" y="255.5">s..</text>
		</g>
		<g>
			<title>std::vector&lt;PageIdAndRank, (1 samples, 0.12%)</title>
			<rect x="1051.1" y="533" width="1.4" height="15.0" fill="rgb(233,175,51)" rx="2" ry="2"/>
			<text x="1054.09" y="543.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1072.6" y="549" width="4.3" height="15.0" fill="rgb(249,150,12)" rx="2" ry="2"/>
			<text x="1075.57" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (6 samples, 0.73%)</title>
			<rect x="982.4" y="421" width="8.5" height="15.0" fill="rgb(218,178,20)" rx="2" ry="2"/>
			<text x="985.35" y="431.5"></text>
		</g>
		<g>
			<title>std::function&lt;void (193 samples, 23.42%)</title>
			<rect x="458.2" y="261" width="276.4" height="15.0" fill="rgb(243,153,3)" rx="2" ry="2"/>
			<text x="461.23" y="271.5">std::function&lt;void</text>
		</g>
		<g>
			<title>std::allocator_traits&lt;std::allocator&lt;char&gt; (8 samples, 0.97%)</title>
			<rect x="514.1" y="117" width="11.4" height="15.0" fill="rgb(254,216,12)" rx="2" ry="2"/>
			<text x="517.08" y="127.5"></text>
		</g>
		<g>
			<title>std::__detail::_Node_iterator&lt;PageId, (10 samples, 1.21%)</title>
			<rect x="20.0" y="245" width="14.3" height="15.0" fill="rgb(254,179,49)" rx="2" ry="2"/>
			<text x="23.02" y="255.5"></text>
		</g>
		<g>
			<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.12%)</title>
			<rect x="1135.6" y="389" width="1.4" height="15.0" fill="rgb(209,146,1)" rx="2" ry="2"/>
			<text x="1138.58" y="399.5"></text>
		</g>
		<g>
			<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.12%)</title>
			<rect x="1026.7" y="469" width="1.5" height="15.0" fill="rgb(241,2,34)" rx="2" ry="2"/>
			<text x="1029.75" y="479.5"></text>
		</g>
		<g>
			<title>PageId::PageId (2 samples, 0.24%)</title>
			<rect x="970.9" y="581" width="2.9" height="15.0" fill="rgb(252,128,35)" rx="2" ry="2"/>
			<text x="973.90" y="591.5"></text>
		</g>
		<g>
			<title>(anonymous (1 samples, 0.12%)</title>
			<rect x="557.0" y="69" width="1.5" height="15.0" fill="rgb(234,30,45)" rx="2" ry="2"/>
			<text x="560.04" y="79.5"></text>
		</g>
		<g>
			<title>__gthread_once (3 samples, 0.36%)</title>
			<rect x="734.6" y="485" width="4.3" height="15.0" fill="rgb(245,51,31)" rx="2" ry="2"/>
			<text x="737.61" y="495.5"></text>
		</g>
		<g>
			<title>std::operator==&lt;char&gt; (1 samples, 0.12%)</title>
			<rect x="1026.7" y="485" width="1.5" height="15.0" fill="rgb(248,122,18)" rx="2" ry="2"/>
			<text x="1029.75" y="495.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (2 samples, 0.24%)</title>
			<rect x="979.5" y="549" width="2.9" height="15.0" fill="rgb(217,155,9)" rx="2" ry="2"/>
			<text x="982.49" y="559.5"></text>
		</g>
		<g>
			<title>std::_Hashtable&lt;PageId, (22 samples, 2.67%)</title>
			<rect x="1005.3" y="565" width="31.5" height="15.0" fill="rgb(238,61,32)" rx="2" ry="2"/>
			<text x="1008.27" y="575.5">st..</text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.49%)</title>
			<rect x="1028.2" y="549" width="5.7" height="15.0" fill="rgb(250,105,44)" rx="2" ry="2"/>
			<text x="1031.18" y="559.5"></text>
		</g>
		<g>
			<title>std::__cxx11::basic_string&lt;char, (3 samples, 0.36%)</title>
			<rect x="1072.6" y="533" width="4.3" height="15.0" fill="rgb(229,229,53)" rx="2" ry="2"/>
			<text x="1075.57" y="543.5"></text>
		</g>
		<g>
			<title>__lll_lock_wait (2 samples, 0.24%)</title>
			<rect x="11.4" y="181" width="2.9" height="15.0" fill="rgb(215,187,18)" rx="2" ry="2"/>
			<text x="14.43" y="191.5"></text>
		</g>
		<g>
			<title>SimpleIdGenerator::generateId (2 samples, 0.24%)</title>
			<rect x="17.2" y="229" width="2.8" height="15.0" fill="rgb(248,0,12)" rx="2" ry="2"/>
			<text x="20.16" y="239.5"></text>
		</g>
		<g>
			<title>_int_malloc (1 samples, 0.12%)</title>
			<rect x="1128.4" y="357" width="1.5" height="15.0" fill="rgb(233,33,16)" rx="2" ry="2"/>
			<text x="1131.42" y="367.5"></text>
		</g>
		<g>
			<title>std::__detail::_Hash_code_base&lt;PageId, (16 samples, 1.94%)</title>
			<rect x="711.7" y="149" width="22.9" height="15.0" fill="rgb(209,91,38)" rx="2" ry="2"/>
			<text x="714.70" y="159.5">s..</text>
		</g>
	</g>
</svg>
