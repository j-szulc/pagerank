<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
    <!-- NOTES:  -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
        text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
        #search, #ignorecase { opacity:0.1; cursor:pointer; }
        #search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
        #subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
        #title { text-anchor:middle; font-size:17px}
        #unzoom { cursor:pointer; }
        #frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
        .hide { display:none; }
        .parent { opacity:0.5; }
    </style>
    <script type="text/ecmascript">
        <![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
    </script>
    <rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"/>
    <text id="title" x="600.00" y="24">Flame Graph</text>
    <text id="details" x="10.00" y="645"></text>
    <text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
    <text id="search" x="1090.00" y="24">Search</text>
    <text id="ignorecase" x="1174.00" y="24">ic</text>
    <text id="matched" x="1090.00" y="645"></text>
    <g id="frames">
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (14 samples, 0.65%)</title>
            <rect x="275.4" y="101" width="7.7" height="15.0" fill="rgb(240,73,20)" rx="2" ry="2"/>
            <text x="278.45" y="111.5"></text>
        </g>
        <g>
            <title>std::_Hash_impl::hash (7 samples, 0.32%)</title>
            <rect x="1081.1" y="469" width="3.8" height="15.0" fill="rgb(235,11,16)" rx="2" ry="2"/>
            <text x="1084.09" y="479.5"></text>
        </g>
        <g>
            <title>__GI___pthread_timedjoin_ex (3 samples, 0.14%)</title>
            <rect x="806.9" y="389" width="1.6" height="15.0" fill="rgb(238,54,6)" rx="2" ry="2"/>
            <text x="809.88" y="399.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (5 samples, 0.23%)</title>
            <rect x="1141.8" y="405" width="2.8" height="15.0" fill="rgb(244,71,24)" rx="2" ry="2"/>
            <text x="1144.84" y="415.5"></text>
        </g>
        <g>
            <title>__GI___pthread_timedjoin_ex (393 samples, 18.23%)</title>
            <rect x="819.5" y="405" width="215.1" height="15.0" fill="rgb(216,137,42)" rx="2" ry="2"/>
            <text x="822.47" y="415.5">__GI___pthread_timedjoin_ex</text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (14 samples, 0.65%)</title>
            <rect x="10.5" y="389" width="7.7" height="15.0" fill="rgb(236,34,14)" rx="2" ry="2"/>
            <text x="13.55" y="399.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1103.0" y="453" width="0.5" height="15.0" fill="rgb(222,213,33)" rx="2" ry="2"/>
            <text x="1105.98" y="463.5"></text>
        </g>
        <g>
            <title>__pthread_mutex_unlock_usercnt (174 samples, 8.07%)</title>
            <rect x="156.7" y="181" width="95.2" height="15.0" fill="rgb(249,79,16)" rx="2" ry="2"/>
            <text x="159.68" y="191.5">__pthread_m..</text>
        </g>
        <g>
            <title>SimpleIdGenerator::generateId (4 samples, 0.19%)</title>
            <rect x="16.0" y="213" width="2.2" height="15.0" fill="rgb(218,225,24)" rx="2" ry="2"/>
            <text x="19.02" y="223.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="453" width="0.5" height="15.0" fill="rgb(226,39,46)" rx="2" ry="2"/>
            <text x="1101.05" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1113.9" y="517" width="0.6" height="15.0" fill="rgb(240,144,14)" rx="2" ry="2"/>
            <text x="1116.92" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.05%)</title>
            <rect x="1157.7" y="485" width="0.6" height="15.0" fill="rgb(216,196,14)" rx="2" ry="2"/>
            <text x="1160.71" y="495.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="453" width="1.7" height="15.0" fill="rgb(219,139,4)" rx="2" ry="2"/>
            <text x="1098.32" y="463.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1112.8" y="437" width="0.6" height="15.0" fill="rgb(225,87,6)" rx="2" ry="2"/>
            <text x="1115.83" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (4 samples, 0.19%)</title>
            <rect x="1169.7" y="453" width="2.2" height="15.0" fill="rgb(234,107,51)" rx="2" ry="2"/>
            <text x="1172.75" y="463.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples, 0.65%)</title>
            <rect x="10.5" y="325" width="7.7" height="15.0" fill="rgb(231,205,51)" rx="2" ry="2"/>
            <text x="13.55" y="335.5"></text>
        </g>
        <g>
            <title>std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples, 0.65%)</title>
            <rect x="10.5" y="293" width="7.7" height="15.0" fill="rgb(218,36,26)" rx="2" ry="2"/>
            <text x="13.55" y="303.5"></text>
        </g>
        <g>
            <title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (3 samples, 0.14%)</title>
            <rect x="1101.3" y="437" width="1.7" height="15.0" fill="rgb(248,208,11)" rx="2" ry="2"/>
            <text x="1104.34" y="447.5"></text>
        </g>
        <g>
            <title>PageId::PageId (6 samples, 0.28%)</title>
            <rect x="1034.6" y="533" width="3.2" height="15.0" fill="rgb(211,224,24)" rx="2" ry="2"/>
            <text x="1037.56" y="543.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (16 samples, 0.74%)</title>
            <rect x="809.6" y="485" width="8.8" height="15.0" fill="rgb(242,214,8)" rx="2" ry="2"/>
            <text x="812.62" y="495.5"></text>
        </g>
        <g>
            <title>PageId::operator== (45 samples, 2.09%)</title>
            <rect x="734.1" y="85" width="24.6" height="15.0" fill="rgb(244,14,17)" rx="2" ry="2"/>
            <text x="737.09" y="95.5">P..</text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.05%)</title>
            <rect x="1097.5" y="405" width="0.6" height="15.0" fill="rgb(217,193,33)" rx="2" ry="2"/>
            <text x="1100.50" y="415.5"></text>
        </g>
        <g>
            <title>_int_free (16 samples, 0.74%)</title>
            <rect x="1037.8" y="533" width="8.8" height="15.0" fill="rgb(210,75,52)" rx="2" ry="2"/>
            <text x="1040.85" y="543.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_base&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1077.3" y="485" width="1.0" height="15.0" fill="rgb(211,174,24)" rx="2" ry="2"/>
            <text x="1080.25" y="495.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (1 samples, 0.05%)</title>
            <rect x="818.9" y="421" width="0.6" height="15.0" fill="rgb(226,165,30)" rx="2" ry="2"/>
            <text x="821.92" y="431.5"></text>
        </g>
        <g>
            <title>std::mutex::unlock (165 samples, 7.65%)</title>
            <rect x="525.6" y="213" width="90.3" height="15.0" fill="rgb(247,221,9)" rx="2" ry="2"/>
            <text x="528.57" y="223.5">std::mutex..</text>
        </g>
        <g>
            <title>__memcmp_avx2_movbe (1 samples, 0.05%)</title>
            <rect x="690.9" y="53" width="0.5" height="15.0" fill="rgb(205,14,7)" rx="2" ry="2"/>
            <text x="693.85" y="63.5"></text>
        </g>
        <g>
            <title>_int_malloc (1 samples, 0.05%)</title>
            <rect x="1150.0" y="405" width="0.6" height="15.0" fill="rgb(254,175,14)" rx="2" ry="2"/>
            <text x="1153.05" y="415.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="485" width="0.5" height="15.0" fill="rgb(225,112,13)" rx="2" ry="2"/>
            <text x="1101.05" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1158.3" y="405" width="1.1" height="15.0" fill="rgb(211,72,42)" rx="2" ry="2"/>
            <text x="1161.26" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1113.9" y="485" width="0.6" height="15.0" fill="rgb(250,118,43)" rx="2" ry="2"/>
            <text x="1116.92" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1141.8" y="453" width="2.8" height="15.0" fill="rgb(232,146,30)" rx="2" ry="2"/>
            <text x="1144.84" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1153.3" y="357" width="1.7" height="15.0" fill="rgb(233,165,4)" rx="2" ry="2"/>
            <text x="1156.33" y="367.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*, (1 samples, 0.05%)</title>
            <rect x="1097.0" y="437" width="0.5" height="15.0" fill="rgb(254,215,48)" rx="2" ry="2"/>
            <text x="1099.96" y="447.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title>
            <rect x="1116.1" y="309" width="0.6" height="15.0" fill="rgb(240,212,31)" rx="2" ry="2"/>
            <text x="1119.11" y="319.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (23 samples, 1.07%)</title>
            <rect x="253.6" y="181" width="12.5" height="15.0" fill="rgb(254,127,23)" rx="2" ry="2"/>
            <text x="256.55" y="191.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (6 samples, 0.28%)</title>
            <rect x="1177.4" y="485" width="3.3" height="15.0" fill="rgb(232,130,42)" rx="2" ry="2"/>
            <text x="1180.41" y="495.5"></text>
        </g>
        <g>
            <title>std::_Hash_bytes(void (7 samples, 0.32%)</title>
            <rect x="1081.1" y="453" width="3.8" height="15.0" fill="rgb(211,37,52)" rx="2" ry="2"/>
            <text x="1084.09" y="463.5"></text>
        </g>
        <g>
            <title>SimpleIdGenerator::generateId (8 samples, 0.37%)</title>
            <rect x="1107.4" y="517" width="4.3" height="15.0" fill="rgb(244,47,33)" rx="2" ry="2"/>
            <text x="1110.36" y="527.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (6 samples, 0.28%)</title>
            <rect x="1136.9" y="501" width="3.3" height="15.0" fill="rgb(227,57,23)" rx="2" ry="2"/>
            <text x="1139.91" y="511.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::compare (1 samples, 0.05%)</title>
            <rect x="690.9" y="69" width="0.5" height="15.0" fill="rgb(234,122,23)" rx="2" ry="2"/>
            <text x="693.85" y="79.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (11 samples, 0.51%)</title>
            <rect x="1149.0" y="469" width="6.0" height="15.0" fill="rgb(214,220,37)" rx="2" ry="2"/>
            <text x="1151.95" y="479.5"></text>
        </g>
        <g>
            <title>PageId::PageId (16 samples, 0.74%)</title>
            <rect x="809.6" y="533" width="8.8" height="15.0" fill="rgb(253,149,12)" rx="2" ry="2"/>
            <text x="812.62" y="543.5"></text>
        </g>
        <g>
            <title>std::vector&lt;Page, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="517" width="0.5" height="15.0" fill="rgb(213,183,14)" rx="2" ry="2"/>
            <text x="1101.05" y="527.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="533" width="0.5" height="15.0" fill="rgb(250,53,21)" rx="2" ry="2"/>
            <text x="1189.17" y="543.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.23%)</title>
            <rect x="716.0" y="117" width="2.8" height="15.0" fill="rgb(249,12,35)" rx="2" ry="2"/>
            <text x="719.03" y="127.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1169.7" y="485" width="2.2" height="15.0" fill="rgb(218,124,29)" rx="2" ry="2"/>
            <text x="1172.75" y="495.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (488 samples, 22.63%)</title>
            <rect x="348.8" y="245" width="267.1" height="15.0" fill="rgb(213,79,41)" rx="2" ry="2"/>
            <text x="351.78" y="255.5">MultiThreadedPageRankComputer::pool..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="818.4" y="501" width="1.1" height="15.0" fill="rgb(246,82,1)" rx="2" ry="2"/>
            <text x="821.38" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1113.9" y="469" width="0.6" height="15.0" fill="rgb(219,148,32)" rx="2" ry="2"/>
            <text x="1116.92" y="479.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageIdAndRank, (1 samples, 0.05%)</title>
            <rect x="1189.5" y="549" width="0.5" height="15.0" fill="rgb(238,159,18)" rx="2" ry="2"/>
            <text x="1192.45" y="559.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1136.4" y="469" width="0.5" height="15.0" fill="rgb(249,101,16)" rx="2" ry="2"/>
            <text x="1139.36" y="479.5"></text>
        </g>
        <g>
            <title>std::unordered_map&lt;PageId, (75 samples, 3.48%)</title>
            <rect x="1144.6" y="549" width="41.0" height="15.0" fill="rgb(237,173,18)" rx="2" ry="2"/>
            <text x="1147.57" y="559.5">std..</text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1097.5" y="373" width="0.6" height="15.0" fill="rgb(252,218,27)" rx="2" ry="2"/>
            <text x="1100.50" y="383.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (5 samples, 0.23%)</title>
            <rect x="716.0" y="133" width="2.8" height="15.0" fill="rgb(236,196,0)" rx="2" ry="2"/>
            <text x="719.03" y="143.5"></text>
        </g>
        <g>
            <title>Page::addLink (3 samples, 0.14%)</title>
            <rect x="1111.7" y="549" width="1.7" height="15.0" fill="rgb(251,69,6)" rx="2" ry="2"/>
            <text x="1114.73" y="559.5"></text>
        </g>
        <g>
            <title>std::__invoke_impl&lt;double, (603 samples, 27.97%)</title>
            <rect x="18.2" y="277" width="330.0" height="15.0" fill="rgb(219,199,53)" rx="2" ry="2"/>
            <text x="21.21" y="287.5">std::__invoke_impl&lt;double,</text>
        </g>
        <g>
            <title>std::function&lt;void (150 samples, 6.96%)</title>
            <rect x="266.1" y="245" width="82.1" height="15.0" fill="rgb(242,14,41)" rx="2" ry="2"/>
            <text x="269.14" y="255.5">std::func..</text>
        </g>
        <g>
            <title>malloc_consolidate (1 samples, 0.05%)</title>
            <rect x="1185.6" y="517" width="0.6" height="15.0" fill="rgb(224,207,23)" rx="2" ry="2"/>
            <text x="1188.62" y="527.5"></text>
        </g>
        <g>
            <title>std::_Hash_bytes(void (5 samples, 0.23%)</title>
            <rect x="344.4" y="101" width="2.7" height="15.0" fill="rgb(247,62,51)" rx="2" ry="2"/>
            <text x="347.41" y="111.5"></text>
        </g>
        <g>
            <title>PageId::PageId (108 samples, 5.01%)</title>
            <rect x="617.5" y="197" width="59.1" height="15.0" fill="rgb(214,110,35)" rx="2" ry="2"/>
            <text x="620.51" y="207.5">PageId..</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (59 samples, 2.74%)</title>
            <rect x="758.7" y="149" width="32.3" height="15.0" fill="rgb(208,22,54)" rx="2" ry="2"/>
            <text x="761.72" y="159.5">st..</text>
        </g>
        <g>
            <title>__GI___pthread_mutex_lock (3 samples, 0.14%)</title>
            <rect x="10.5" y="181" width="1.7" height="15.0" fill="rgb(223,218,23)" rx="2" ry="2"/>
            <text x="13.55" y="191.5"></text>
        </g>
        <g>
            <title>std::__invoke_impl&lt;double, (837 samples, 38.82%)</title>
            <rect x="348.2" y="277" width="458.1" height="15.0" fill="rgb(245,81,45)" rx="2" ry="2"/>
            <text x="351.24" y="287.5">std::__invoke_impl&lt;double,</text>
        </g>
        <g>
            <title>std::make_shared&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="501" width="0.6" height="15.0" fill="rgb(219,64,10)" rx="2" ry="2"/>
            <text x="809.34" y="511.5"></text>
        </g>
        <g>
            <title>std::pair&lt;PageId (7 samples, 0.32%)</title>
            <rect x="1158.3" y="437" width="3.8" height="15.0" fill="rgb(249,107,0)" rx="2" ry="2"/>
            <text x="1161.26" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1115.0" y="501" width="0.6" height="15.0" fill="rgb(228,206,8)" rx="2" ry="2"/>
            <text x="1118.02" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="501" width="0.5" height="15.0" fill="rgb(249,65,12)" rx="2" ry="2"/>
            <text x="1103.79" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1116.1" y="357" width="0.6" height="15.0" fill="rgb(243,225,31)" rx="2" ry="2"/>
            <text x="1119.11" y="367.5"></text>
        </g>
        <g>
            <title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (603 samples, 27.97%)</title>
            <rect x="18.2" y="357" width="330.0" height="15.0" fill="rgb(236,83,30)" rx="2" ry="2"/>
            <text x="21.21" y="367.5">std::_Function_handler&lt;std::unique_ptr&lt;std::..</text>
        </g>
        <g>
            <title>std::uninitialized_copy&lt;std::move_iterator&lt;Page*&gt;, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="469" width="0.5" height="15.0" fill="rgb(252,33,48)" rx="2" ry="2"/>
            <text x="1101.05" y="479.5"></text>
        </g>
        <g>
            <title>std::call_once&lt;void (837 samples, 38.82%)</title>
            <rect x="348.2" y="437" width="458.1" height="15.0" fill="rgb(240,213,37)" rx="2" ry="2"/>
            <text x="351.24" y="447.5">std::call_once&lt;void</text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (14 samples, 0.65%)</title>
            <rect x="10.5" y="453" width="7.7" height="15.0" fill="rgb(236,104,54)" rx="2" ry="2"/>
            <text x="13.55" y="463.5"></text>
        </g>
        <g>
            <title>_int_free (7 samples, 0.32%)</title>
            <rect x="1058.1" y="245" width="3.8" height="15.0" fill="rgb(210,113,22)" rx="2" ry="2"/>
            <text x="1061.10" y="255.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1089.3" y="357" width="0.5" height="15.0" fill="rgb(214,63,1)" rx="2" ry="2"/>
            <text x="1092.29" y="367.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1035.7" y="485" width="2.1" height="15.0" fill="rgb(217,146,40)" rx="2" ry="2"/>
            <text x="1038.66" y="495.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageIdAndRank&gt; (1 samples, 0.05%)</title>
            <rect x="1189.5" y="501" width="0.5" height="15.0" fill="rgb(231,127,53)" rx="2" ry="2"/>
            <text x="1192.45" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1111.7" y="469" width="1.1" height="15.0" fill="rgb(210,51,3)" rx="2" ry="2"/>
            <text x="1114.73" y="479.5"></text>
        </g>
        <g>
            <title>std::_Construct&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="437" width="1.1" height="15.0" fill="rgb(209,154,5)" rx="2" ry="2"/>
            <text x="1191.36" y="447.5"></text>
        </g>
        <g>
            <title>std::operator==&lt;char&gt; (42 samples, 1.95%)</title>
            <rect x="306.6" y="69" width="23.0" height="15.0" fill="rgb(227,92,8)" rx="2" ry="2"/>
            <text x="309.64" y="79.5">s..</text>
        </g>
        <g>
            <title>sysmalloc (1 samples, 0.05%)</title>
            <rect x="17.7" y="69" width="0.5" height="15.0" fill="rgb(213,143,6)" rx="2" ry="2"/>
            <text x="20.66" y="79.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (2 samples, 0.09%)</title>
            <rect x="1093.7" y="437" width="1.1" height="15.0" fill="rgb(212,112,45)" rx="2" ry="2"/>
            <text x="1096.67" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Map_base&lt;PageId, (36 samples, 1.67%)</title>
            <rect x="1065.8" y="533" width="19.7" height="15.0" fill="rgb(243,94,49)" rx="2" ry="2"/>
            <text x="1068.76" y="543.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1185.6" y="533" width="0.6" height="15.0" fill="rgb(206,162,39)" rx="2" ry="2"/>
            <text x="1188.62" y="543.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1111.7" y="501" width="1.1" height="15.0" fill="rgb(220,145,32)" rx="2" ry="2"/>
            <text x="1114.73" y="511.5"></text>
        </g>
        <g>
            <title>std::hash&lt;std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="344.4" y="133" width="2.7" height="15.0" fill="rgb(218,178,35)" rx="2" ry="2"/>
            <text x="347.41" y="143.5"></text>
        </g>
        <g>
            <title>PageId::PageId (2 samples, 0.09%)</title>
            <rect x="1115.6" y="453" width="1.1" height="15.0" fill="rgb(228,21,10)" rx="2" ry="2"/>
            <text x="1118.57" y="463.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1112.8" y="517" width="0.6" height="15.0" fill="rgb(205,153,6)" rx="2" ry="2"/>
            <text x="1115.83" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="690.9" y="165" width="0.5" height="15.0" fill="rgb(240,218,12)" rx="2" ry="2"/>
            <text x="693.85" y="175.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples,
                0.05%)
            </title>
            <rect x="806.3" y="405" width="0.6" height="15.0" fill="rgb(221,188,42)" rx="2" ry="2"/>
            <text x="809.34" y="415.5"></text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (603 samples, 27.97%)</title>
            <rect x="18.2" y="389" width="330.0" height="15.0" fill="rgb(247,112,4)" rx="2" ry="2"/>
            <text x="21.21" y="399.5">std::__future_base::_State_baseV2::_M_do_set..</text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.32%)</title>
            <rect x="1158.3" y="453" width="3.8" height="15.0" fill="rgb(216,113,4)" rx="2" ry="2"/>
            <text x="1161.26" y="463.5"></text>
        </g>
        <g>
            <title>std::uninitialized_copy&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="469" width="1.1" height="15.0" fill="rgb(244,28,1)" rx="2" ry="2"/>
            <text x="1191.36" y="479.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.05%)</title>
            <rect x="1097.0" y="421" width="0.5" height="15.0" fill="rgb(205,228,43)" rx="2" ry="2"/>
            <text x="1099.96" y="431.5"></text>
        </g>
        <g>
            <title>std::equal_to&lt;PageId&gt;::operator() (45 samples, 2.09%)</title>
            <rect x="734.1" y="101" width="24.6" height="15.0" fill="rgb(246,26,38)" rx="2" ry="2"/>
            <text x="737.09" y="111.5">s..</text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_commonV2::_M_join (3 samples, 0.14%)</title>
            <rect x="806.9" y="469" width="1.6" height="15.0" fill="rgb(216,136,6)" rx="2" ry="2"/>
            <text x="809.88" y="479.5"></text>
        </g>
        <g>
            <title>PageIdHash::operator() (3 samples, 0.14%)</title>
            <rect x="689.2" y="149" width="1.7" height="15.0" fill="rgb(240,167,28)" rx="2" ry="2"/>
            <text x="692.21" y="159.5"></text>
        </g>
        <g>
            <title>std::pair&lt;PageId (6 samples, 0.28%)</title>
            <rect x="1034.6" y="549" width="3.2" height="15.0" fill="rgb(224,91,28)" rx="2" ry="2"/>
            <text x="1037.56" y="559.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1103.0" y="485" width="0.5" height="15.0" fill="rgb(219,135,52)" rx="2" ry="2"/>
            <text x="1105.98" y="495.5"></text>
        </g>
        <g>
            <title>__GI___libc_free (1 samples, 0.05%)</title>
            <rect x="1136.4" y="453" width="0.5" height="15.0" fill="rgb(220,34,12)" rx="2" ry="2"/>
            <text x="1139.36" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1115.0" y="469" width="0.6" height="15.0" fill="rgb(220,202,7)" rx="2" ry="2"/>
            <text x="1118.02" y="479.5"></text>
        </g>
        <g>
            <title>_int_free (5 samples, 0.23%)</title>
            <rect x="1155.0" y="437" width="2.7" height="15.0" fill="rgb(213,192,25)" rx="2" ry="2"/>
            <text x="1157.97" y="447.5"></text>
        </g>
        <g>
            <title>PageId::PageId (36 samples, 1.67%)</title>
            <rect x="1116.7" y="549" width="19.7" height="15.0" fill="rgb(239,54,11)" rx="2" ry="2"/>
            <text x="1119.66" y="559.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="389" width="0.6" height="15.0" fill="rgb(229,11,19)" rx="2" ry="2"/>
            <text x="809.34" y="399.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (1 samples, 0.05%)</title>
            <rect x="1097.0" y="373" width="0.5" height="15.0" fill="rgb(237,224,4)" rx="2" ry="2"/>
            <text x="1099.96" y="383.5"></text>
        </g>
        <g>
            <title>PageIdHash::operator() (7 samples, 0.32%)</title>
            <rect x="1081.1" y="501" width="3.8" height="15.0" fill="rgb(230,162,27)" rx="2" ry="2"/>
            <text x="1084.09" y="511.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="469" width="1.7" height="15.0" fill="rgb(248,99,13)" rx="2" ry="2"/>
            <text x="1104.34" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (103 samples, 4.78%)</title>
            <rect x="620.3" y="149" width="56.3" height="15.0" fill="rgb(237,181,1)" rx="2" ry="2"/>
            <text x="623.25" y="159.5">std::..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (11 samples, 0.51%)</title>
            <rect x="1047.7" y="373" width="6.0" height="15.0" fill="rgb(217,95,53)" rx="2" ry="2"/>
            <text x="1050.70" y="383.5"></text>
        </g>
        <g>
            <title>PageIdHash::operator() (5 samples, 0.23%)</title>
            <rect x="344.4" y="149" width="2.7" height="15.0" fill="rgb(219,4,29)" rx="2" ry="2"/>
            <text x="347.41" y="159.5"></text>
        </g>
        <g>
            <title>std::__detail::_Node_iterator_base&lt;PageId, (20 samples, 0.93%)</title>
            <rect x="18.8" y="213" width="10.9" height="15.0" fill="rgb(240,81,38)" rx="2" ry="2"/>
            <text x="21.76" y="223.5"></text>
        </g>
        <g>
            <title>std::distance&lt;char*&gt; (1 samples, 0.05%)</title>
            <rect x="1135.8" y="469" width="0.6" height="15.0" fill="rgb(249,130,48)" rx="2" ry="2"/>
            <text x="1138.82" y="479.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (30 samples, 1.39%)</title>
            <rect x="1145.7" y="533" width="16.4" height="15.0" fill="rgb(214,54,25)" rx="2" ry="2"/>
            <text x="1148.67" y="543.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1084.9" y="469" width="0.6" height="15.0" fill="rgb(233,77,13)" rx="2" ry="2"/>
            <text x="1087.92" y="479.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId&gt; (15 samples, 0.70%)</title>
            <rect x="1053.7" y="357" width="8.2" height="15.0" fill="rgb(230,137,39)" rx="2" ry="2"/>
            <text x="1056.72" y="367.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (7 samples, 0.32%)</title>
            <rect x="1073.4" y="453" width="3.9" height="15.0" fill="rgb(218,225,6)" rx="2" ry="2"/>
            <text x="1076.42" y="463.5"></text>
        </g>
        <g>
            <title>_int_malloc (1 samples, 0.05%)</title>
            <rect x="1112.3" y="373" width="0.5" height="15.0" fill="rgb(247,95,7)" rx="2" ry="2"/>
            <text x="1115.28" y="383.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="453" width="0.5" height="15.0" fill="rgb(226,100,49)" rx="2" ry="2"/>
            <text x="1189.17" y="463.5"></text>
        </g>
        <g>
            <title>_IO_vfprintf_internal (6 samples, 0.28%)</title>
            <rect x="1104.1" y="469" width="3.3" height="15.0" fill="rgb(209,87,36)" rx="2" ry="2"/>
            <text x="1107.07" y="479.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title>
            <rect x="1102.4" y="245" width="0.6" height="15.0" fill="rgb(211,30,30)" rx="2" ry="2"/>
            <text x="1105.43" y="255.5"></text>
        </g>
        <g>
            <title>std::function&lt;void (348 samples, 16.14%)</title>
            <rect x="615.9" y="245" width="190.4" height="15.0" fill="rgb(243,181,41)" rx="2" ry="2"/>
            <text x="618.87" y="255.5">std::function&lt;void</text>
        </g>
        <g>
            <title>std::_Hash_bytes(void (3 samples, 0.14%)</title>
            <rect x="689.2" y="101" width="1.7" height="15.0" fill="rgb(205,83,30)" rx="2" ry="2"/>
            <text x="692.21" y="111.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1035.7" y="469" width="2.1" height="15.0" fill="rgb(241,135,36)" rx="2" ry="2"/>
            <text x="1038.66" y="479.5"></text>
        </g>
        <g>
            <title>PageId::PageId (3 samples, 0.14%)</title>
            <rect x="1095.3" y="421" width="1.7" height="15.0" fill="rgb(237,87,7)" rx="2" ry="2"/>
            <text x="1098.32" y="431.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (35 samples, 1.62%)</title>
            <rect x="1046.6" y="485" width="19.2" height="15.0" fill="rgb(216,39,42)" rx="2" ry="2"/>
            <text x="1049.60" y="495.5"></text>
        </g>
        <g>
            <title>operator (2 samples, 0.09%)</title>
            <rect x="1101.3" y="309" width="1.1" height="15.0" fill="rgb(238,221,29)" rx="2" ry="2"/>
            <text x="1104.34" y="319.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (21 samples, 0.97%)</title>
            <rect x="254.6" y="101" width="11.5" height="15.0" fill="rgb(239,143,16)" rx="2" ry="2"/>
            <text x="257.65" y="111.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1141.8" y="437" width="2.8" height="15.0" fill="rgb(243,115,53)" rx="2" ry="2"/>
            <text x="1144.84" y="447.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (837 samples, 38.82%)</title>
            <rect x="348.2" y="261" width="458.1" height="15.0" fill="rgb(244,223,29)" rx="2" ry="2"/>
            <text x="351.24" y="271.5">MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="347.1" y="181" width="1.1" height="15.0" fill="rgb(245,144,39)" rx="2" ry="2"/>
            <text x="350.14" y="191.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (6 samples, 0.28%)</title>
            <rect x="1034.6" y="517" width="3.2" height="15.0" fill="rgb(238,103,17)" rx="2" ry="2"/>
            <text x="1037.56" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.05%)</title>
            <rect x="1148.4" y="469" width="0.6" height="15.0" fill="rgb(248,227,25)" rx="2" ry="2"/>
            <text x="1151.40" y="479.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1088.2" y="517" width="2.2" height="15.0" fill="rgb(235,204,23)" rx="2" ry="2"/>
            <text x="1091.20" y="527.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*&gt; (15 samples, 0.70%)</title>
            <rect x="1053.7" y="389" width="8.2" height="15.0" fill="rgb(233,158,15)" rx="2" ry="2"/>
            <text x="1056.72" y="399.5"></text>
        </g>
        <g>
            <title>std::call_once&lt;void (3 samples, 0.14%)</title>
            <rect x="806.9" y="453" width="1.6" height="15.0" fill="rgb(240,104,7)" rx="2" ry="2"/>
            <text x="809.88" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1109.0" y="485" width="2.7" height="15.0" fill="rgb(248,159,13)" rx="2" ry="2"/>
            <text x="1112.00" y="495.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="373" width="0.5" height="15.0" fill="rgb(224,36,31)" rx="2" ry="2"/>
            <text x="1101.05" y="383.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (4 samples, 0.19%)</title>
            <rect x="816.2" y="405" width="2.2" height="15.0" fill="rgb(251,145,45)" rx="2" ry="2"/>
            <text x="819.19" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="421" width="0.5" height="15.0" fill="rgb(230,9,33)" rx="2" ry="2"/>
            <text x="1103.79" y="431.5"></text>
        </g>
        <g>
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.05%)</title>
            <rect x="1114.5" y="485" width="0.5" height="15.0" fill="rgb(226,15,45)" rx="2" ry="2"/>
            <text x="1117.47" y="495.5"></text>
        </g>
        <g>
            <title>?? (1 samples, 0.05%)</title>
            <rect x="10.0" y="581" width="0.5" height="15.0" fill="rgb(243,139,6)" rx="2" ry="2"/>
            <text x="13.00" y="591.5"></text>
        </g>
        <g>
            <title>pageRankComputationWithNumNodes (701 samples, 32.51%)</title>
            <rect x="806.3" y="581" width="383.7" height="15.0" fill="rgb(207,72,47)" rx="2" ry="2"/>
            <text x="809.34" y="591.5">pageRankComputationWithNumNodes</text>
        </g>
        <g>
            <title>std::_Destroy&lt;Page&gt; (2 samples, 0.09%)</title>
            <rect x="1097.0" y="485" width="1.1" height="15.0" fill="rgb(246,125,48)" rx="2" ry="2"/>
            <text x="1099.96" y="495.5"></text>
        </g>
        <g>
            <title>Page::Page (1 samples, 0.05%)</title>
            <rect x="1103.0" y="517" width="0.5" height="15.0" fill="rgb(242,178,11)" rx="2" ry="2"/>
            <text x="1105.98" y="527.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1097.0" y="293" width="0.5" height="15.0" fill="rgb(242,185,43)" rx="2" ry="2"/>
            <text x="1099.96" y="303.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="816.2" y="421" width="2.2" height="15.0" fill="rgb(254,143,50)" rx="2" ry="2"/>
            <text x="819.19" y="431.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::computeForNetwork(Network (345 samples, 16.00%)</title>
            <rect x="617.0" y="213" width="188.8" height="15.0" fill="rgb(225,73,18)" rx="2" ry="2"/>
            <text x="619.97" y="223.5">MultiThreadedPageRankCom..</text>
        </g>
        <g>
            <title>std::mutex::unlock (7 samples, 0.32%)</title>
            <rect x="12.2" y="213" width="3.8" height="15.0" fill="rgb(234,147,50)" rx="2" ry="2"/>
            <text x="15.19" y="223.5"></text>
        </g>
        <g>
            <title>Page::Page (1 samples, 0.05%)</title>
            <rect x="1098.1" y="421" width="0.5" height="15.0" fill="rgb(240,20,50)" rx="2" ry="2"/>
            <text x="1101.05" y="431.5"></text>
        </g>
        <g>
            <title>Page::getId (2 samples, 0.09%)</title>
            <rect x="1113.4" y="549" width="1.1" height="15.0" fill="rgb(254,49,9)" rx="2" ry="2"/>
            <text x="1116.38" y="559.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (34 samples, 1.58%)</title>
            <rect x="1162.1" y="517" width="18.6" height="15.0" fill="rgb(252,124,17)" rx="2" ry="2"/>
            <text x="1165.09" y="527.5"></text>
        </g>
        <g>
            <title>clone (1 samples, 0.05%)</title>
            <rect x="10.0" y="549" width="0.5" height="15.0" fill="rgb(250,23,20)" rx="2" ry="2"/>
            <text x="13.00" y="559.5"></text>
        </g>
        <g>
            <title>IO_validate_vtable (1 samples, 0.05%)</title>
            <rect x="1105.2" y="453" width="0.5" height="15.0" fill="rgb(216,76,44)" rx="2" ry="2"/>
            <text x="1108.17" y="463.5"></text>
        </g>
        <g>
            <title>std::hash&lt;std::__cxx11::basic_string&lt;char, (7 samples, 0.32%)</title>
            <rect x="1081.1" y="485" width="3.8" height="15.0" fill="rgb(226,53,12)" rx="2" ry="2"/>
            <text x="1084.09" y="495.5"></text>
        </g>
        <g>
            <title>free@plt (1 samples, 0.05%)</title>
            <rect x="347.1" y="117" width="0.6" height="15.0" fill="rgb(223,90,6)" rx="2" ry="2"/>
            <text x="350.14" y="127.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;MultiThreadedPageRankComputer::{unnamed (14 samples, 0.65%)</title>
            <rect x="10.5" y="341" width="7.7" height="15.0" fill="rgb(215,162,1)" rx="2" ry="2"/>
            <text x="13.55" y="351.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageIdAndRank, (1 samples, 0.05%)</title>
            <rect x="1189.5" y="533" width="0.5" height="15.0" fill="rgb(214,10,51)" rx="2" ry="2"/>
            <text x="1192.45" y="543.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples, 27.97%)</title>
            <rect x="18.2" y="325" width="330.0" height="15.0" fill="rgb(244,114,52)" rx="2" ry="2"/>
            <text x="21.21" y="335.5">std::thread::_Invoker&lt;std::tuple&lt;MultiThread..</text>
        </g>
        <g>
            <title>std::_Construct&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="437" width="1.7" height="15.0" fill="rgb(206,180,1)" rx="2" ry="2"/>
            <text x="1098.32" y="447.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="677.7" y="101" width="0.6" height="15.0" fill="rgb(242,70,8)" rx="2" ry="2"/>
            <text x="680.72" y="111.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (35 samples, 1.62%)</title>
            <rect x="1046.6" y="517" width="19.2" height="15.0" fill="rgb(224,212,36)" rx="2" ry="2"/>
            <text x="1049.60" y="527.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1097.5" y="437" width="0.6" height="15.0" fill="rgb(251,46,17)" rx="2" ry="2"/>
            <text x="1100.50" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (9 samples, 0.42%)</title>
            <rect x="1180.7" y="517" width="4.9" height="15.0" fill="rgb(211,47,40)" rx="2" ry="2"/>
            <text x="1183.70" y="527.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.05%)</title>
            <rect x="1187.8" y="517" width="0.6" height="15.0" fill="rgb(216,169,53)" rx="2" ry="2"/>
            <text x="1190.81" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Node_iterator&lt;PageId, (20 samples, 0.93%)</title>
            <rect x="18.8" y="229" width="10.9" height="15.0" fill="rgb(216,10,18)" rx="2" ry="2"/>
            <text x="21.76" y="239.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageId&gt;::allocate (1 samples, 0.05%)</title>
            <rect x="1112.8" y="469" width="0.6" height="15.0" fill="rgb(211,46,25)" rx="2" ry="2"/>
            <text x="1115.83" y="479.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1186.2" y="357" width="0.5" height="15.0" fill="rgb(236,74,38)" rx="2" ry="2"/>
            <text x="1189.17" y="367.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1116.1" y="341" width="0.6" height="15.0" fill="rgb(225,228,12)" rx="2" ry="2"/>
            <text x="1119.11" y="351.5"></text>
        </g>
        <g>
            <title>std::operator==&lt;char&gt; (45 samples, 2.09%)</title>
            <rect x="734.1" y="69" width="24.6" height="15.0" fill="rgb(231,4,7)" rx="2" ry="2"/>
            <text x="737.09" y="79.5">s..</text>
        </g>
        <g>
            <title>std::__basic_future&lt;MultiThreadedPageRankComputer::{unnamed (3 samples, 0.14%)</title>
            <rect x="806.9" y="517" width="1.6" height="15.0" fill="rgb(225,146,17)" rx="2" ry="2"/>
            <text x="809.88" y="527.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (15 samples, 0.70%)</title>
            <rect x="1053.7" y="341" width="8.2" height="15.0" fill="rgb(251,45,42)" rx="2" ry="2"/>
            <text x="1056.72" y="351.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (11 samples, 0.51%)</title>
            <rect x="1047.7" y="421" width="6.0" height="15.0" fill="rgb(223,31,13)" rx="2" ry="2"/>
            <text x="1050.70" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (8 samples, 0.37%)</title>
            <rect x="1150.6" y="405" width="4.4" height="15.0" fill="rgb(215,35,8)" rx="2" ry="2"/>
            <text x="1153.59" y="415.5"></text>
        </g>
        <g>
            <title>clone (1,454 samples, 67.44%)</title>
            <rect x="10.5" y="597" width="795.8" height="15.0" fill="rgb(234,210,46)" rx="2" ry="2"/>
            <text x="13.55" y="607.5">clone</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1035.7" y="501" width="2.1" height="15.0" fill="rgb(225,214,6)" rx="2" ry="2"/>
            <text x="1038.66" y="511.5"></text>
        </g>
        <g>
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;Page*&gt; (2 samples, 0.09%)</title>
            <rect x="1097.0" y="501" width="1.1" height="15.0" fill="rgb(213,226,24)" rx="2" ry="2"/>
            <text x="1099.96" y="511.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1159.9" y="245" width="0.5" height="15.0" fill="rgb(227,35,27)" rx="2" ry="2"/>
            <text x="1162.90" y="255.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (1 samples, 0.05%)</title>
            <rect x="1112.8" y="485" width="0.6" height="15.0" fill="rgb(241,123,2)" rx="2" ry="2"/>
            <text x="1115.83" y="495.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (4 samples, 0.19%)</title>
            <rect x="676.6" y="117" width="2.2" height="15.0" fill="rgb(243,25,36)" rx="2" ry="2"/>
            <text x="679.62" y="127.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (140 samples, 6.49%)</title>
            <rect x="267.8" y="165" width="76.6" height="15.0" fill="rgb(252,77,20)" rx="2" ry="2"/>
            <text x="270.78" y="175.5">std::_Ha..</text>
        </g>
        <g>
            <title>std::mutex::unlock (174 samples, 8.07%)</title>
            <rect x="156.7" y="213" width="95.2" height="15.0" fill="rgb(205,135,11)" rx="2" ry="2"/>
            <text x="159.68" y="223.5">std::mutex:..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1115.6" y="437" width="1.1" height="15.0" fill="rgb(250,28,43)" rx="2" ry="2"/>
            <text x="1118.57" y="447.5"></text>
        </g>
        <g>
            <title>Network::addPage (3 samples, 0.14%)</title>
            <rect x="1101.3" y="549" width="1.7" height="15.0" fill="rgb(247,120,46)" rx="2" ry="2"/>
            <text x="1104.34" y="559.5"></text>
        </g>
        <g>
            <title>std::_Function_base::_Base_manager&lt;MultiThreadedPageRankComputer::computeForNetwork(Network (1 samples, 0.05%)</title>
            <rect x="805.8" y="213" width="0.5" height="15.0" fill="rgb(249,69,9)" rx="2" ry="2"/>
            <text x="808.79" y="223.5"></text>
        </g>
        <g>
            <title>std::__invoke_impl&lt;void, (837 samples, 38.82%)</title>
            <rect x="348.2" y="485" width="458.1" height="15.0" fill="rgb(223,185,38)" rx="2" ry="2"/>
            <text x="351.24" y="495.5">std::__invoke_impl&lt;void,</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1115.6" y="389" width="1.1" height="15.0" fill="rgb(217,122,44)" rx="2" ry="2"/>
            <text x="1118.57" y="399.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="405" width="0.5" height="15.0" fill="rgb(248,174,6)" rx="2" ry="2"/>
            <text x="1189.17" y="415.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (5 samples, 0.23%)</title>
            <rect x="1078.3" y="485" width="2.8" height="15.0" fill="rgb(251,214,15)" rx="2" ry="2"/>
            <text x="1081.35" y="495.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (9 samples, 0.42%)</title>
            <rect x="684.3" y="165" width="4.9" height="15.0" fill="rgb(233,181,17)" rx="2" ry="2"/>
            <text x="687.29" y="175.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1088.2" y="373" width="1.1" height="15.0" fill="rgb(246,186,2)" rx="2" ry="2"/>
            <text x="1091.20" y="383.5"></text>
        </g>
        <g>
            <title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (174 samples, 8.07%)</title>
            <rect x="156.7" y="229" width="95.2" height="15.0" fill="rgb(242,204,18)" rx="2" ry="2"/>
            <text x="159.68" y="239.5">std::lock_g..</text>
        </g>
        <g>
            <title>memcmp@plt (1 samples, 0.05%)</title>
            <rect x="758.2" y="37" width="0.5" height="15.0" fill="rgb(224,154,36)" rx="2" ry="2"/>
            <text x="761.17" y="47.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (6 samples, 0.28%)</title>
            <rect x="1177.4" y="501" width="3.3" height="15.0" fill="rgb(214,80,25)" rx="2" ry="2"/>
            <text x="1180.41" y="511.5"></text>
        </g>
        <g>
            <title>std::call_once&lt;void (14 samples, 0.65%)</title>
            <rect x="10.5" y="437" width="7.7" height="15.0" fill="rgb(224,51,52)" rx="2" ry="2"/>
            <text x="13.55" y="447.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1112.3" y="405" width="0.5" height="15.0" fill="rgb(244,45,18)" rx="2" ry="2"/>
            <text x="1115.28" y="415.5"></text>
        </g>
        <g>
            <title>__strchrnul_avx2 (2 samples, 0.09%)</title>
            <rect x="1099.7" y="453" width="1.1" height="15.0" fill="rgb(226,33,24)" rx="2" ry="2"/>
            <text x="1102.69" y="463.5"></text>
        </g>
        <g>
            <title>std:: (7 samples, 0.32%)</title>
            <rect x="1103.5" y="517" width="3.9" height="15.0" fill="rgb(223,29,2)" rx="2" ry="2"/>
            <text x="1106.53" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (7 samples, 0.32%)</title>
            <rect x="1073.4" y="469" width="3.9" height="15.0" fill="rgb(225,23,9)" rx="2" ry="2"/>
            <text x="1076.42" y="479.5"></text>
        </g>
        <g>
            <title>__find_specmb (3 samples, 0.14%)</title>
            <rect x="1099.1" y="469" width="1.7" height="15.0" fill="rgb(212,7,16)" rx="2" ry="2"/>
            <text x="1102.15" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1035.7" y="421" width="2.1" height="15.0" fill="rgb(236,55,11)" rx="2" ry="2"/>
            <text x="1038.66" y="431.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (14 samples, 0.65%)</title>
            <rect x="275.4" y="133" width="7.7" height="15.0" fill="rgb(236,124,14)" rx="2" ry="2"/>
            <text x="278.45" y="143.5"></text>
        </g>
        <g>
            <title>std::unordered_set&lt;PageId, (18 samples, 0.83%)</title>
            <rect x="1085.5" y="549" width="9.8" height="15.0" fill="rgb(207,203,10)" rx="2" ry="2"/>
            <text x="1088.46" y="559.5"></text>
        </g>
        <g>
            <title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (7 samples, 0.32%)</title>
            <rect x="12.2" y="229" width="3.8" height="15.0" fill="rgb(207,77,38)" rx="2" ry="2"/>
            <text x="15.19" y="239.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::deallocate (5 samples, 0.23%)</title>
            <rect x="1155.0" y="453" width="2.7" height="15.0" fill="rgb(208,47,3)" rx="2" ry="2"/>
            <text x="1157.97" y="463.5"></text>
        </g>
        <g>
            <title>_IO_vsnprintf (4 samples, 0.19%)</title>
            <rect x="1098.6" y="501" width="2.2" height="15.0" fill="rgb(225,208,1)" rx="2" ry="2"/>
            <text x="1101.60" y="511.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1148.4" y="485" width="0.6" height="15.0" fill="rgb(235,46,26)" rx="2" ry="2"/>
            <text x="1151.40" y="495.5"></text>
        </g>
        <g>
            <title>__memcmp_avx2_movbe (7 samples, 0.32%)</title>
            <rect x="1173.6" y="389" width="3.8" height="15.0" fill="rgb(244,15,46)" rx="2" ry="2"/>
            <text x="1176.58" y="399.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.05%)</title>
            <rect x="1114.5" y="389" width="0.5" height="15.0" fill="rgb(239,154,20)" rx="2" ry="2"/>
            <text x="1117.47" y="399.5"></text>
        </g>
        <g>
            <title>__memcmp_avx2_movbe (31 samples, 1.44%)</title>
            <rect x="741.2" y="37" width="17.0" height="15.0" fill="rgb(214,218,36)" rx="2" ry="2"/>
            <text x="744.21" y="47.5"></text>
        </g>
        <g>
            <title>__GI___libc_free (6 samples, 0.28%)</title>
            <rect x="1049.9" y="325" width="3.3" height="15.0" fill="rgb(239,213,39)" rx="2" ry="2"/>
            <text x="1052.89" y="335.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="517" width="1.1" height="15.0" fill="rgb(220,152,15)" rx="2" ry="2"/>
            <text x="1191.36" y="527.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId
                (837 samples, 38.82%)
            </title>
            <rect x="348.2" y="517" width="458.1" height="15.0" fill="rgb(216,157,38)" rx="2" ry="2"/>
            <text x="351.24" y="527.5">std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_st..</text>
        </g>
        <g>
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (15 samples, 0.70%)</title>
            <rect x="1053.7" y="373" width="8.2" height="15.0" fill="rgb(221,138,18)" rx="2" ry="2"/>
            <text x="1056.72" y="383.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1141.8" y="469" width="2.8" height="15.0" fill="rgb(221,53,42)" rx="2" ry="2"/>
            <text x="1144.84" y="479.5"></text>
        </g>
        <g>
            <title>tcache_get (1 samples, 0.05%)</title>
            <rect x="1107.9" y="389" width="0.6" height="15.0" fill="rgb(249,194,41)" rx="2" ry="2"/>
            <text x="1110.90" y="399.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (121 samples, 5.61%)</title>
            <rect x="692.5" y="149" width="66.2" height="15.0" fill="rgb(244,56,7)" rx="2" ry="2"/>
            <text x="695.50" y="159.5">std::_H..</text>
        </g>
        <g>
            <title>__GI___pthread_mutex_lock (232 samples, 10.76%)</title>
            <rect x="29.7" y="181" width="127.0" height="15.0" fill="rgb(252,100,0)" rx="2" ry="2"/>
            <text x="32.70" y="191.5">__GI___pthread_..</text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (95 samples, 4.41%)</title>
            <rect x="624.6" y="53" width="52.0" height="15.0" fill="rgb(214,16,32)" rx="2" ry="2"/>
            <text x="627.63" y="63.5">__mem..</text>
        </g>
        <g>
            <title>std::_Construct&lt;Page, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="437" width="0.5" height="15.0" fill="rgb(246,39,30)" rx="2" ry="2"/>
            <text x="1101.05" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (7 samples, 0.32%)</title>
            <rect x="1081.1" y="517" width="3.8" height="15.0" fill="rgb(209,18,22)" rx="2" ry="2"/>
            <text x="1084.09" y="527.5"></text>
        </g>
        <g>
            <title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page
                (14 samples, 0.65%)
            </title>
            <rect x="10.5" y="549" width="7.7" height="15.0" fill="rgb(232,33,13)" rx="2" ry="2"/>
            <text x="13.55" y="559.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1112.8" y="453" width="0.6" height="15.0" fill="rgb(252,57,43)" rx="2" ry="2"/>
            <text x="1115.83" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="818.4" y="533" width="1.1" height="15.0" fill="rgb(229,21,11)" rx="2" ry="2"/>
            <text x="821.38" y="543.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_commonV2::_M_join (393 samples, 18.23%)</title>
            <rect x="819.5" y="485" width="215.1" height="15.0" fill="rgb(248,165,38)" rx="2" ry="2"/>
            <text x="822.47" y="495.5">std::__future_base::_Async_s..</text>
        </g>
        <g>
            <title>std::shared_ptr&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="469" width="0.6" height="15.0" fill="rgb(235,43,54)" rx="2" ry="2"/>
            <text x="809.34" y="479.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="469" width="0.5" height="15.0" fill="rgb(254,18,11)" rx="2" ry="2"/>
            <text x="1189.17" y="479.5"></text>
        </g>
        <g>
            <title>__GI___libc_free (2 samples, 0.09%)</title>
            <rect x="676.6" y="101" width="1.1" height="15.0" fill="rgb(251,67,2)" rx="2" ry="2"/>
            <text x="679.62" y="111.5"></text>
        </g>
        <g>
            <title>SingleThreadedPageRankComputer::computeForNetwork (137 samples, 6.35%)</title>
            <rect x="1115.0" y="565" width="75.0" height="15.0" fill="rgb(242,207,46)" rx="2" ry="2"/>
            <text x="1118.02" y="575.5">SingleTh..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1097.0" y="357" width="0.5" height="15.0" fill="rgb(246,200,21)" rx="2" ry="2"/>
            <text x="1099.96" y="367.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (27 samples, 1.25%)</title>
            <rect x="1066.3" y="517" width="14.8" height="15.0" fill="rgb(220,89,49)" rx="2" ry="2"/>
            <text x="1069.31" y="527.5"></text>
        </g>
        <g>
            <title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.09%)</title>
            <rect x="1115.6" y="501" width="1.1" height="15.0" fill="rgb(246,7,7)" rx="2" ry="2"/>
            <text x="1118.57" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (32 samples, 1.48%)</title>
            <rect x="1118.8" y="517" width="17.6" height="15.0" fill="rgb(214,15,43)" rx="2" ry="2"/>
            <text x="1121.85" y="527.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="485" width="0.5" height="15.0" fill="rgb(215,10,53)" rx="2" ry="2"/>
            <text x="1103.79" y="495.5"></text>
        </g>
        <g>
            <title>std::operator+&lt;char, (5 samples, 0.23%)</title>
            <rect x="1109.0" y="501" width="2.7" height="15.0" fill="rgb(210,125,23)" rx="2" ry="2"/>
            <text x="1112.00" y="511.5"></text>
        </g>
        <g>
            <title>std:: (5 samples, 0.23%)</title>
            <rect x="1098.6" y="533" width="2.7" height="15.0" fill="rgb(239,196,34)" rx="2" ry="2"/>
            <text x="1101.60" y="543.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1102.4" y="277" width="0.6" height="15.0" fill="rgb(208,99,48)" rx="2" ry="2"/>
            <text x="1105.43" y="287.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (35 samples, 1.62%)</title>
            <rect x="1046.6" y="501" width="19.2" height="15.0" fill="rgb(223,208,19)" rx="2" ry="2"/>
            <text x="1049.60" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1115.6" y="421" width="1.1" height="15.0" fill="rgb(235,163,8)" rx="2" ry="2"/>
            <text x="1118.57" y="431.5"></text>
        </g>
        <g>
            <title>__gthread_mutex_lock (232 samples, 10.76%)</title>
            <rect x="29.7" y="197" width="127.0" height="15.0" fill="rgb(215,212,25)" rx="2" ry="2"/>
            <text x="32.70" y="207.5">__gthread_mutex..</text>
        </g>
        <g>
            <title>?? (1 samples, 0.05%)</title>
            <rect x="10.0" y="565" width="0.5" height="15.0" fill="rgb(253,176,29)" rx="2" ry="2"/>
            <text x="13.00" y="575.5"></text>
        </g>
        <g>
            <title>_int_malloc (2 samples, 0.09%)</title>
            <rect x="17.1" y="85" width="1.1" height="15.0" fill="rgb(231,140,54)" rx="2" ry="2"/>
            <text x="20.12" y="95.5"></text>
        </g>
        <g>
            <title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (837 samples, 38.82%)
            </title>
            <rect x="348.2" y="501" width="458.1" height="15.0" fill="rgb(229,71,51)" rx="2" ry="2"/>
            <text x="351.24" y="511.5">std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::threa..</text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(233,197,35)" rx="2" ry="2"/>
            <text x="1192.45" y="479.5"></text>
        </g>
        <g>
            <title>std::async&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="533" width="0.6" height="15.0" fill="rgb(222,29,1)" rx="2" ry="2"/>
            <text x="809.34" y="543.5"></text>
        </g>
        <g>
            <title>__lll_lock_wait (223 samples, 10.34%)</title>
            <rect x="34.6" y="165" width="122.1" height="15.0" fill="rgb(233,17,46)" rx="2" ry="2"/>
            <text x="37.63" y="175.5">__lll_lock_wait</text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1097.5" y="421" width="0.6" height="15.0" fill="rgb(227,80,40)" rx="2" ry="2"/>
            <text x="1100.50" y="431.5"></text>
        </g>
        <g>
            <title>operator (2 samples, 0.09%)</title>
            <rect x="1110.1" y="421" width="1.1" height="15.0" fill="rgb(240,59,36)" rx="2" ry="2"/>
            <text x="1113.09" y="431.5"></text>
        </g>
        <g>
            <title>std::unordered_set&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1185.6" y="549" width="2.2" height="15.0" fill="rgb(252,108,23)" rx="2" ry="2"/>
            <text x="1188.62" y="559.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.05%)</title>
            <rect x="1084.9" y="501" width="0.6" height="15.0" fill="rgb(225,75,2)" rx="2" ry="2"/>
            <text x="1087.92" y="511.5"></text>
        </g>
        <g>
            <title>Page::generateId (8 samples, 0.37%)</title>
            <rect x="1107.4" y="533" width="4.3" height="15.0" fill="rgb(213,8,28)" rx="2" ry="2"/>
            <text x="1110.36" y="543.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (7 samples, 0.32%)</title>
            <rect x="1061.9" y="357" width="3.9" height="15.0" fill="rgb(208,208,28)" rx="2" ry="2"/>
            <text x="1064.93" y="367.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1088.2" y="469" width="2.2" height="15.0" fill="rgb(223,18,38)" rx="2" ry="2"/>
            <text x="1091.20" y="479.5"></text>
        </g>
        <g>
            <title>PageId::PageId (1 samples, 0.05%)</title>
            <rect x="1187.8" y="485" width="0.6" height="15.0" fill="rgb(223,29,5)" rx="2" ry="2"/>
            <text x="1190.81" y="495.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1097.0" y="277" width="0.5" height="15.0" fill="rgb(231,101,18)" rx="2" ry="2"/>
            <text x="1099.96" y="287.5"></text>
        </g>
        <g>
            <title>__gthread_once (603 samples, 27.97%)</title>
            <rect x="18.2" y="421" width="330.0" height="15.0" fill="rgb(241,114,30)" rx="2" ry="2"/>
            <text x="21.21" y="431.5">__gthread_once</text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (4 samples, 0.19%)</title>
            <rect x="1035.7" y="389" width="2.1" height="15.0" fill="rgb(207,54,5)" rx="2" ry="2"/>
            <text x="1038.66" y="399.5"></text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (603 samples, 27.97%)</title>
            <rect x="18.2" y="453" width="330.0" height="15.0" fill="rgb(233,199,40)" rx="2" ry="2"/>
            <text x="21.21" y="463.5">std::__future_base::_State_baseV2::_M_set_re..</text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;Page&gt; (3 samples, 0.14%)</title>
            <rect x="1101.3" y="517" width="1.7" height="15.0" fill="rgb(209,143,17)" rx="2" ry="2"/>
            <text x="1104.34" y="527.5"></text>
        </g>
        <g>
            <title>std::unordered_map&lt;PageId, (147 samples, 6.82%)</title>
            <rect x="266.7" y="197" width="80.4" height="15.0" fill="rgb(216,209,34)" rx="2" ry="2"/>
            <text x="269.69" y="207.5">std::unor..</text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (7 samples, 0.32%)</title>
            <rect x="1049.9" y="357" width="3.8" height="15.0" fill="rgb(229,119,17)" rx="2" ry="2"/>
            <text x="1052.89" y="367.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.32%)</title>
            <rect x="1158.3" y="501" width="3.8" height="15.0" fill="rgb(226,142,22)" rx="2" ry="2"/>
            <text x="1161.26" y="511.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="501" width="0.5" height="15.0" fill="rgb(221,51,24)" rx="2" ry="2"/>
            <text x="1189.17" y="511.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (3 samples, 0.14%)</title>
            <rect x="1153.3" y="325" width="1.7" height="15.0" fill="rgb(244,158,47)" rx="2" ry="2"/>
            <text x="1156.33" y="335.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (30 samples, 1.39%)</title>
            <rect x="1119.9" y="485" width="16.5" height="15.0" fill="rgb(213,40,24)" rx="2" ry="2"/>
            <text x="1122.94" y="495.5"></text>
        </g>
        <g>
            <title>__gthread_mutex_unlock (7 samples, 0.32%)</title>
            <rect x="12.2" y="197" width="3.8" height="15.0" fill="rgb(231,97,21)" rx="2" ry="2"/>
            <text x="15.19" y="207.5"></text>
        </g>
        <g>
            <title>_int_free (2 samples, 0.09%)</title>
            <rect x="1144.6" y="533" width="1.1" height="15.0" fill="rgb(226,63,45)" rx="2" ry="2"/>
            <text x="1147.57" y="543.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (2 samples, 0.09%)</title>
            <rect x="1111.7" y="517" width="1.1" height="15.0" fill="rgb(205,156,26)" rx="2" ry="2"/>
            <text x="1114.73" y="527.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples,
                27.97%)
            </title>
            <rect x="18.2" y="517" width="330.0" height="15.0" fill="rgb(219,126,29)" rx="2" ry="2"/>
            <text x="21.21" y="527.5">std::thread::_Invoker&lt;std::tuple&lt;std::__futu..</text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="549" width="1.7" height="15.0" fill="rgb(222,13,43)" rx="2" ry="2"/>
            <text x="1098.32" y="559.5"></text>
        </g>
        <g>
            <title>std::equal_to&lt;PageId&gt;::operator() (7 samples, 0.32%)</title>
            <rect x="1173.6" y="453" width="3.8" height="15.0" fill="rgb(252,26,33)" rx="2" ry="2"/>
            <text x="1176.58" y="463.5"></text>
        </g>
        <g>
            <title>PageId::PageId (1 samples, 0.05%)</title>
            <rect x="1115.0" y="533" width="0.6" height="15.0" fill="rgb(220,78,39)" rx="2" ry="2"/>
            <text x="1118.02" y="543.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1112.8" y="501" width="0.6" height="15.0" fill="rgb(205,107,37)" rx="2" ry="2"/>
            <text x="1115.83" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="676.6" y="181" width="2.2" height="15.0" fill="rgb(242,209,20)" rx="2" ry="2"/>
            <text x="679.62" y="191.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1186.7" y="517" width="1.1" height="15.0" fill="rgb(240,122,52)" rx="2" ry="2"/>
            <text x="1189.72" y="527.5"></text>
        </g>
        <g>
            <title>operator (12 samples, 0.56%)</title>
            <rect x="809.6" y="453" width="6.6" height="15.0" fill="rgb(246,141,19)" rx="2" ry="2"/>
            <text x="812.62" y="463.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1089.3" y="341" width="0.5" height="15.0" fill="rgb(210,75,13)" rx="2" ry="2"/>
            <text x="1092.29" y="351.5"></text>
        </g>
        <g>
            <title>std::_Hash_impl::hash (9 samples, 0.42%)</title>
            <rect x="1180.7" y="469" width="4.9" height="15.0" fill="rgb(209,206,5)" rx="2" ry="2"/>
            <text x="1183.70" y="479.5"></text>
        </g>
        <g>
            <title>__pthread_once_slow (14 samples, 0.65%)</title>
            <rect x="10.5" y="405" width="7.7" height="15.0" fill="rgb(225,118,36)" rx="2" ry="2"/>
            <text x="13.55" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1107.4" y="453" width="1.6" height="15.0" fill="rgb(243,51,30)" rx="2" ry="2"/>
            <text x="1110.36" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="16.0" y="165" width="2.2" height="15.0" fill="rgb(246,24,47)" rx="2" ry="2"/>
            <text x="19.02" y="175.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (1 samples, 0.05%)</title>
            <rect x="1108.5" y="373" width="0.5" height="15.0" fill="rgb(208,213,8)" rx="2" ry="2"/>
            <text x="1111.45" y="383.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (7 samples, 0.32%)</title>
            <rect x="1049.9" y="341" width="3.8" height="15.0" fill="rgb(243,150,47)" rx="2" ry="2"/>
            <text x="1052.89" y="351.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="818.4" y="485" width="1.1" height="15.0" fill="rgb(227,200,28)" rx="2" ry="2"/>
            <text x="821.38" y="495.5"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (165 samples, 7.65%)</title>
            <rect x="161.6" y="165" width="90.3" height="15.0" fill="rgb(205,9,52)" rx="2" ry="2"/>
            <text x="164.60" y="175.5">__lll_unlo..</text>
        </g>
        <g>
            <title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId,
                (1 samples, 0.05%)
            </title>
            <rect x="806.3" y="437" width="0.6" height="15.0" fill="rgb(225,154,38)" rx="2" ry="2"/>
            <text x="809.34" y="447.5"></text>
        </g>
        <g>
            <title>Network::~Network (2 samples, 0.09%)</title>
            <rect x="1097.0" y="565" width="1.1" height="15.0" fill="rgb(243,123,46)" rx="2" ry="2"/>
            <text x="1099.96" y="575.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1103.0" y="501" width="0.5" height="15.0" fill="rgb(227,188,10)" rx="2" ry="2"/>
            <text x="1105.98" y="511.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1047.2" y="437" width="0.5" height="15.0" fill="rgb(235,114,36)" rx="2" ry="2"/>
            <text x="1050.15" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1093.7" y="453" width="1.1" height="15.0" fill="rgb(235,23,2)" rx="2" ry="2"/>
            <text x="1096.67" y="463.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (35 samples, 1.62%)</title>
            <rect x="1046.6" y="453" width="19.2" height="15.0" fill="rgb(206,152,13)" rx="2" ry="2"/>
            <text x="1049.60" y="463.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::computeForNetwork(Network (147 samples, 6.82%)</title>
            <rect x="266.7" y="213" width="80.4" height="15.0" fill="rgb(211,139,8)" rx="2" ry="2"/>
            <text x="269.69" y="223.5">MultiThre..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1109.0" y="469" width="2.7" height="15.0" fill="rgb(221,154,7)" rx="2" ry="2"/>
            <text x="1112.00" y="479.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::compare (42 samples, 1.95%)</title>
            <rect x="735.7" y="53" width="23.0" height="15.0" fill="rgb(250,205,6)" rx="2" ry="2"/>
            <text x="738.73" y="63.5">s..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="676.6" y="149" width="2.2" height="15.0" fill="rgb(209,85,22)" rx="2" ry="2"/>
            <text x="679.62" y="159.5"></text>
        </g>
        <g>
            <title>std::__detail::_Node_iterator&lt;std::pair&lt;PageId (38 samples, 1.76%)</title>
            <rect x="351.0" y="229" width="20.8" height="15.0" fill="rgb(208,99,41)" rx="2" ry="2"/>
            <text x="353.97" y="239.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1111.2" y="405" width="0.5" height="15.0" fill="rgb(211,11,21)" rx="2" ry="2"/>
            <text x="1114.19" y="415.5"></text>
        </g>
        <g>
            <title>__gthread_mutex_unlock (165 samples, 7.65%)</title>
            <rect x="525.6" y="197" width="90.3" height="15.0" fill="rgb(234,164,12)" rx="2" ry="2"/>
            <text x="528.57" y="207.5">__gthread_..</text>
        </g>
        <g>
            <title>operator (5 samples, 0.23%)</title>
            <rect x="620.8" y="117" width="2.7" height="15.0" fill="rgb(214,101,20)" rx="2" ry="2"/>
            <text x="623.80" y="127.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.05%)</title>
            <rect x="1084.9" y="485" width="0.6" height="15.0" fill="rgb(238,66,6)" rx="2" ry="2"/>
            <text x="1087.92" y="495.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1088.2" y="501" width="2.2" height="15.0" fill="rgb(219,54,8)" rx="2" ry="2"/>
            <text x="1091.20" y="511.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1186.7" y="501" width="1.1" height="15.0" fill="rgb(205,142,25)" rx="2" ry="2"/>
            <text x="1189.72" y="511.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples, 27.97%)</title>
            <rect x="18.2" y="469" width="330.0" height="15.0" fill="rgb(230,53,38)" rx="2" ry="2"/>
            <text x="21.21" y="479.5">std::__future_base::_Async_state_impl&lt;std::t..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (15 samples, 0.70%)</title>
            <rect x="1053.7" y="325" width="8.2" height="15.0" fill="rgb(250,193,19)" rx="2" ry="2"/>
            <text x="1056.72" y="335.5"></text>
        </g>
        <g>
            <title>std::__detail::_Equal_helper&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="690.9" y="133" width="0.5" height="15.0" fill="rgb(230,109,54)" rx="2" ry="2"/>
            <text x="693.85" y="143.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1160.4" y="405" width="1.7" height="15.0" fill="rgb(244,190,17)" rx="2" ry="2"/>
            <text x="1163.45" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1107.4" y="437" width="1.6" height="15.0" fill="rgb(240,117,49)" rx="2" ry="2"/>
            <text x="1110.36" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1102.4" y="293" width="0.6" height="15.0" fill="rgb(245,23,13)" rx="2" ry="2"/>
            <text x="1105.43" y="303.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (6 samples, 0.28%)</title>
            <rect x="1136.9" y="517" width="3.3" height="15.0" fill="rgb(225,161,40)" rx="2" ry="2"/>
            <text x="1139.91" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (27 samples, 1.25%)</title>
            <rect x="329.6" y="149" width="14.8" height="15.0" fill="rgb(251,54,15)" rx="2" ry="2"/>
            <text x="332.63" y="159.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (15 samples, 0.70%)</title>
            <rect x="1053.7" y="277" width="8.2" height="15.0" fill="rgb(208,177,5)" rx="2" ry="2"/>
            <text x="1056.72" y="287.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="533" width="1.7" height="15.0" fill="rgb(234,145,21)" rx="2" ry="2"/>
            <text x="1098.32" y="543.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1114.5" y="357" width="0.5" height="15.0" fill="rgb(207,42,52)" rx="2" ry="2"/>
            <text x="1117.47" y="367.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (7 samples, 0.32%)</title>
            <rect x="1061.9" y="389" width="3.9" height="15.0" fill="rgb(234,144,23)" rx="2" ry="2"/>
            <text x="1064.93" y="399.5"></text>
        </g>
        <g>
            <title>free@plt (1 samples, 0.05%)</title>
            <rect x="678.3" y="101" width="0.5" height="15.0" fill="rgb(233,78,1)" rx="2" ry="2"/>
            <text x="681.27" y="111.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="689.2" y="165" width="1.7" height="15.0" fill="rgb(231,157,0)" rx="2" ry="2"/>
            <text x="692.21" y="175.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.23%)</title>
            <rect x="344.4" y="165" width="2.7" height="15.0" fill="rgb(236,16,49)" rx="2" ry="2"/>
            <text x="347.41" y="175.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="405" width="0.5" height="15.0" fill="rgb(217,185,28)" rx="2" ry="2"/>
            <text x="1103.79" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1111.2" y="389" width="0.5" height="15.0" fill="rgb(254,58,52)" rx="2" ry="2"/>
            <text x="1114.19" y="399.5"></text>
        </g>
        <g>
            <title>__GI___libc_free (8 samples, 0.37%)</title>
            <rect x="1053.7" y="245" width="4.4" height="15.0" fill="rgb(208,60,15)" rx="2" ry="2"/>
            <text x="1056.72" y="255.5"></text>
        </g>
        <g>
            <title>_int_malloc (4 samples, 0.19%)</title>
            <rect x="814.0" y="421" width="2.2" height="15.0" fill="rgb(248,64,3)" rx="2" ry="2"/>
            <text x="817.00" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="818.4" y="517" width="1.1" height="15.0" fill="rgb(237,153,3)" rx="2" ry="2"/>
            <text x="821.38" y="527.5"></text>
        </g>
        <g>
            <title>PageId::operator== (1 samples, 0.05%)</title>
            <rect x="690.9" y="101" width="0.5" height="15.0" fill="rgb(238,87,25)" rx="2" ry="2"/>
            <text x="693.85" y="111.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1187.8" y="533" width="1.7" height="15.0" fill="rgb(244,166,24)" rx="2" ry="2"/>
            <text x="1190.81" y="543.5"></text>
        </g>
        <g>
            <title>PageIdAndRank::PageIdAndRank (6 samples, 0.28%)</title>
            <rect x="1136.9" y="549" width="3.3" height="15.0" fill="rgb(235,64,51)" rx="2" ry="2"/>
            <text x="1139.91" y="559.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (21 samples, 0.97%)</title>
            <rect x="254.6" y="149" width="11.5" height="15.0" fill="rgb(223,91,19)" rx="2" ry="2"/>
            <text x="257.65" y="159.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1114.5" y="405" width="0.5" height="15.0" fill="rgb(209,170,3)" rx="2" ry="2"/>
            <text x="1117.47" y="415.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (5 samples, 0.23%)</title>
            <rect x="1136.9" y="437" width="2.7" height="15.0" fill="rgb(205,215,6)" rx="2" ry="2"/>
            <text x="1139.91" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (96 samples, 4.45%)</title>
            <rect x="624.1" y="101" width="52.5" height="15.0" fill="rgb(219,59,46)" rx="2" ry="2"/>
            <text x="627.08" y="111.5">std::..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1153.3" y="373" width="1.7" height="15.0" fill="rgb(232,135,5)" rx="2" ry="2"/>
            <text x="1156.33" y="383.5"></text>
        </g>
        <g>
            <title>PageId::PageId (3 samples, 0.14%)</title>
            <rect x="1101.3" y="389" width="1.7" height="15.0" fill="rgb(226,137,7)" rx="2" ry="2"/>
            <text x="1104.34" y="399.5"></text>
        </g>
        <g>
            <title>Page::~Page (2 samples, 0.09%)</title>
            <rect x="1097.0" y="469" width="1.1" height="15.0" fill="rgb(238,165,40)" rx="2" ry="2"/>
            <text x="1099.96" y="479.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;Page*&gt; (2 samples, 0.09%)</title>
            <rect x="1097.0" y="517" width="1.1" height="15.0" fill="rgb(205,155,32)" rx="2" ry="2"/>
            <text x="1099.96" y="527.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (4 samples, 0.19%)</title>
            <rect x="1035.7" y="405" width="2.1" height="15.0" fill="rgb(251,224,24)" rx="2" ry="2"/>
            <text x="1038.66" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="816.2" y="453" width="2.2" height="15.0" fill="rgb(242,86,14)" rx="2" ry="2"/>
            <text x="819.19" y="463.5"></text>
        </g>
        <g>
            <title>std::hash&lt;std::__cxx11::basic_string&lt;char, (27 samples, 1.25%)</title>
            <rect x="791.0" y="133" width="14.8" height="15.0" fill="rgb(251,82,0)" rx="2" ry="2"/>
            <text x="794.01" y="143.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1097.0" y="453" width="1.1" height="15.0" fill="rgb(240,37,21)" rx="2" ry="2"/>
            <text x="1099.96" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="453" width="0.5" height="15.0" fill="rgb(243,35,45)" rx="2" ry="2"/>
            <text x="1103.79" y="463.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*, (2 samples, 0.09%)</title>
            <rect x="1159.4" y="405" width="1.0" height="15.0" fill="rgb(218,155,38)" rx="2" ry="2"/>
            <text x="1162.35" y="415.5"></text>
        </g>
        <g>
            <title>std::call_once&lt;void (603 samples, 27.97%)</title>
            <rect x="18.2" y="437" width="330.0" height="15.0" fill="rgb(241,168,23)" rx="2" ry="2"/>
            <text x="21.21" y="447.5">std::call_once&lt;void</text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="549" width="0.6" height="15.0" fill="rgb(209,123,4)" rx="2" ry="2"/>
            <text x="809.34" y="559.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1110.1" y="437" width="1.6" height="15.0" fill="rgb(225,17,41)" rx="2" ry="2"/>
            <text x="1113.09" y="447.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.09%)</title>
            <rect x="1115.6" y="485" width="1.1" height="15.0" fill="rgb(238,190,33)" rx="2" ry="2"/>
            <text x="1118.57" y="495.5"></text>
        </g>
        <g>
            <title>std::pair&lt;PageId (8 samples, 0.37%)</title>
            <rect x="1150.6" y="437" width="4.4" height="15.0" fill="rgb(207,69,33)" rx="2" ry="2"/>
            <text x="1153.59" y="447.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1084.9" y="453" width="0.6" height="15.0" fill="rgb(212,55,9)" rx="2" ry="2"/>
            <text x="1087.92" y="463.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId
                (837 samples, 38.82%)
            </title>
            <rect x="348.2" y="533" width="458.1" height="15.0" fill="rgb(234,219,12)" rx="2" ry="2"/>
            <text x="351.24" y="543.5">std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_st..</text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (3 samples, 0.14%)</title>
            <rect x="1160.4" y="373" width="1.7" height="15.0" fill="rgb(250,204,31)" rx="2" ry="2"/>
            <text x="1163.45" y="383.5"></text>
        </g>
        <g>
            <title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (165 samples, 7.65%)</title>
            <rect x="525.6" y="229" width="90.3" height="15.0" fill="rgb(222,108,11)" rx="2" ry="2"/>
            <text x="528.57" y="239.5">std::lock_..</text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="405" width="0.5" height="15.0" fill="rgb(213,227,30)" rx="2" ry="2"/>
            <text x="1101.05" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1111.7" y="437" width="1.1" height="15.0" fill="rgb(248,213,24)" rx="2" ry="2"/>
            <text x="1114.73" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (4 samples, 0.19%)</title>
            <rect x="687.0" y="133" width="2.2" height="15.0" fill="rgb(244,5,51)" rx="2" ry="2"/>
            <text x="690.02" y="143.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="517" width="0.5" height="15.0" fill="rgb(208,225,11)" rx="2" ry="2"/>
            <text x="1189.17" y="527.5"></text>
        </g>
        <g>
            <title>std::equal_to&lt;PageId&gt;::operator() (1 samples, 0.05%)</title>
            <rect x="690.9" y="117" width="0.5" height="15.0" fill="rgb(212,121,31)" rx="2" ry="2"/>
            <text x="693.85" y="127.5"></text>
        </g>
        <g>
            <title>PageId::PageId (2 samples, 0.09%)</title>
            <rect x="818.4" y="549" width="1.1" height="15.0" fill="rgb(210,163,49)" rx="2" ry="2"/>
            <text x="821.38" y="559.5"></text>
        </g>
        <g>
            <title>__pthread_create_2_1 (1 samples, 0.05%)</title>
            <rect x="806.3" y="325" width="0.6" height="15.0" fill="rgb(243,26,13)" rx="2" ry="2"/>
            <text x="809.34" y="335.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (22 samples, 1.02%)</title>
            <rect x="1066.3" y="501" width="12.0" height="15.0" fill="rgb(212,151,46)" rx="2" ry="2"/>
            <text x="1069.31" y="511.5"></text>
        </g>
        <g>
            <title>std::lock_guard&lt;std::mutex&gt;::lock_guard (232 samples, 10.76%)</title>
            <rect x="29.7" y="229" width="127.0" height="15.0" fill="rgb(218,3,45)" rx="2" ry="2"/>
            <text x="32.70" y="239.5">std::lock_guard..</text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::compare (41 samples, 1.90%)</title>
            <rect x="307.2" y="53" width="22.4" height="15.0" fill="rgb(247,219,43)" rx="2" ry="2"/>
            <text x="310.19" y="63.5">s..</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (5 samples, 0.23%)</title>
            <rect x="1078.3" y="501" width="2.8" height="15.0" fill="rgb(235,108,54)" rx="2" ry="2"/>
            <text x="1081.35" y="511.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (4 samples, 0.19%)</title>
            <rect x="676.6" y="197" width="2.2" height="15.0" fill="rgb(213,186,13)" rx="2" ry="2"/>
            <text x="679.62" y="207.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1113.9" y="453" width="0.6" height="15.0" fill="rgb(230,175,3)" rx="2" ry="2"/>
            <text x="1116.92" y="463.5"></text>
        </g>
        <g>
            <title>__gthread_once (14 samples, 0.65%)</title>
            <rect x="10.5" y="421" width="7.7" height="15.0" fill="rgb(231,32,29)" rx="2" ry="2"/>
            <text x="13.55" y="431.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (3 samples, 0.14%)</title>
            <rect x="16.6" y="101" width="1.6" height="15.0" fill="rgb(224,166,26)" rx="2" ry="2"/>
            <text x="19.57" y="111.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (2 samples, 0.09%)</title>
            <rect x="347.1" y="149" width="1.1" height="15.0" fill="rgb(210,228,17)" rx="2" ry="2"/>
            <text x="350.14" y="159.5"></text>
        </g>
        <g>
            <title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (14 samples, 0.65%)</title>
            <rect x="10.5" y="373" width="7.7" height="15.0" fill="rgb(220,198,33)" rx="2" ry="2"/>
            <text x="13.55" y="383.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (27 samples, 1.25%)</title>
            <rect x="329.6" y="133" width="14.8" height="15.0" fill="rgb(236,53,16)" rx="2" ry="2"/>
            <text x="332.63" y="143.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="341" width="1.7" height="15.0" fill="rgb(241,167,27)" rx="2" ry="2"/>
            <text x="1104.34" y="351.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (27 samples, 1.25%)</title>
            <rect x="1121.0" y="453" width="14.8" height="15.0" fill="rgb(233,85,11)" rx="2" ry="2"/>
            <text x="1124.04" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1103.0" y="469" width="0.5" height="15.0" fill="rgb(222,24,33)" rx="2" ry="2"/>
            <text x="1105.98" y="479.5"></text>
        </g>
        <g>
            <title>std::_Hash_impl::hash (3 samples, 0.14%)</title>
            <rect x="689.2" y="117" width="1.7" height="15.0" fill="rgb(233,73,22)" rx="2" ry="2"/>
            <text x="692.21" y="127.5"></text>
        </g>
        <g>
            <title>create_thread (1 samples, 0.05%)</title>
            <rect x="806.3" y="309" width="0.6" height="15.0" fill="rgb(209,109,18)" rx="2" ry="2"/>
            <text x="809.34" y="319.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1107.4" y="485" width="1.6" height="15.0" fill="rgb(221,123,22)" rx="2" ry="2"/>
            <text x="1110.36" y="495.5"></text>
        </g>
        <g>
            <title>std::thread::join() (3 samples, 0.14%)</title>
            <rect x="806.9" y="405" width="1.6" height="15.0" fill="rgb(211,45,29)" rx="2" ry="2"/>
            <text x="809.88" y="415.5"></text>
        </g>
        <g>
            <title>__gthread_mutex_lock (281 samples, 13.03%)</title>
            <rect x="371.8" y="197" width="153.8" height="15.0" fill="rgb(245,94,53)" rx="2" ry="2"/>
            <text x="374.77" y="207.5">__gthread_mutex_lock</text>
        </g>
        <g>
            <title>std::operator==&lt;char&gt; (7 samples, 0.32%)</title>
            <rect x="1173.6" y="421" width="3.8" height="15.0" fill="rgb(246,219,22)" rx="2" ry="2"/>
            <text x="1176.58" y="431.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (1 samples, 0.05%)</title>
            <rect x="1114.5" y="453" width="0.5" height="15.0" fill="rgb(249,175,51)" rx="2" ry="2"/>
            <text x="1117.47" y="463.5"></text>
        </g>
        <g>
            <title>_int_malloc (1 samples, 0.05%)</title>
            <rect x="1115.6" y="341" width="0.5" height="15.0" fill="rgb(253,166,42)" rx="2" ry="2"/>
            <text x="1118.57" y="351.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (26 samples, 1.21%)</title>
            <rect x="251.9" y="229" width="14.2" height="15.0" fill="rgb(215,202,3)" rx="2" ry="2"/>
            <text x="254.91" y="239.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (5 samples, 0.23%)</title>
            <rect x="1159.4" y="421" width="2.7" height="15.0" fill="rgb(239,27,19)" rx="2" ry="2"/>
            <text x="1162.35" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1115.0" y="517" width="0.6" height="15.0" fill="rgb(206,189,22)" rx="2" ry="2"/>
            <text x="1118.02" y="527.5"></text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::wait (3 samples, 0.14%)</title>
            <rect x="806.9" y="501" width="1.6" height="15.0" fill="rgb(228,132,1)" rx="2" ry="2"/>
            <text x="809.88" y="511.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title>
            <rect x="818.9" y="405" width="0.6" height="15.0" fill="rgb(248,131,37)" rx="2" ry="2"/>
            <text x="821.92" y="415.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_base&lt;PageId, (85 samples, 3.94%)</title>
            <rect x="283.1" y="133" width="46.5" height="15.0" fill="rgb(211,202,10)" rx="2" ry="2"/>
            <text x="286.11" y="143.5">std:..</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1157.7" y="501" width="0.6" height="15.0" fill="rgb(238,165,7)" rx="2" ry="2"/>
            <text x="1160.71" y="511.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (1 samples, 0.05%)</title>
            <rect x="1100.8" y="389" width="0.5" height="15.0" fill="rgb(236,40,18)" rx="2" ry="2"/>
            <text x="1103.79" y="399.5"></text>
        </g>
        <g>
            <title>__GI___pthread_mutex_lock (281 samples, 13.03%)</title>
            <rect x="371.8" y="181" width="153.8" height="15.0" fill="rgb(244,224,36)" rx="2" ry="2"/>
            <text x="374.77" y="191.5">__GI___pthread_mute..</text>
        </g>
        <g>
            <title>__GI___libc_malloc (12 samples, 0.56%)</title>
            <rect x="809.6" y="437" width="6.6" height="15.0" fill="rgb(234,1,22)" rx="2" ry="2"/>
            <text x="812.62" y="447.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples,
                27.97%)
            </title>
            <rect x="18.2" y="533" width="330.0" height="15.0" fill="rgb(234,45,6)" rx="2" ry="2"/>
            <text x="21.21" y="543.5">std::thread::_Invoker&lt;std::tuple&lt;std::__futu..</text>
        </g>
        <g>
            <title>__memcmp_avx2_movbe (36 samples, 1.67%)</title>
            <rect x="309.9" y="37" width="19.7" height="15.0" fill="rgb(234,142,53)" rx="2" ry="2"/>
            <text x="312.93" y="47.5"></text>
        </g>
        <g>
            <title>all (2,156 samples, 100%)</title>
            <rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(249,192,14)" rx="2" ry="2"/>
            <text x="13.00" y="623.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1111.7" y="453" width="1.1" height="15.0" fill="rgb(249,16,49)" rx="2" ry="2"/>
            <text x="1114.73" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (26 samples, 1.21%)</title>
            <rect x="251.9" y="197" width="14.2" height="15.0" fill="rgb(221,72,30)" rx="2" ry="2"/>
            <text x="254.91" y="207.5"></text>
        </g>
        <g>
            <title>NetworkGenerator::generatePageFromNum (8 samples, 0.37%)</title>
            <rect x="1103.0" y="533" width="4.4" height="15.0" fill="rgb(223,177,44)" rx="2" ry="2"/>
            <text x="1105.98" y="543.5"></text>
        </g>
        <g>
            <title>PageId::PageId (1 samples, 0.05%)</title>
            <rect x="1113.9" y="533" width="0.6" height="15.0" fill="rgb(252,137,10)" rx="2" ry="2"/>
            <text x="1116.92" y="543.5"></text>
        </g>
        <g>
            <title>std::allocate_shared&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="485" width="0.6" height="15.0" fill="rgb(250,163,45)" rx="2" ry="2"/>
            <text x="809.34" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (108 samples, 5.01%)</title>
            <rect x="617.5" y="181" width="59.1" height="15.0" fill="rgb(228,118,10)" rx="2" ry="2"/>
            <text x="620.51" y="191.5">std::_..</text>
        </g>
        <g>
            <title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId
                (837 samples, 38.82%)
            </title>
            <rect x="348.2" y="549" width="458.1" height="15.0" fill="rgb(254,30,21)" rx="2" ry="2"/>
            <text x="351.24" y="559.5">std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std:..</text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples, 0.65%)</title>
            <rect x="10.5" y="469" width="7.7" height="15.0" fill="rgb(242,16,29)" rx="2" ry="2"/>
            <text x="13.55" y="479.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (8 samples, 0.37%)</title>
            <rect x="1090.4" y="485" width="4.4" height="15.0" fill="rgb(216,22,30)" rx="2" ry="2"/>
            <text x="1093.39" y="495.5"></text>
        </g>
        <g>
            <title>?? (1 samples, 0.05%)</title>
            <rect x="10.0" y="597" width="0.5" height="15.0" fill="rgb(229,210,54)" rx="2" ry="2"/>
            <text x="13.00" y="607.5"></text>
        </g>
        <g>
            <title>std::operator+&lt;char, (4 samples, 0.19%)</title>
            <rect x="16.0" y="197" width="2.2" height="15.0" fill="rgb(211,131,32)" rx="2" ry="2"/>
            <text x="19.02" y="207.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1113.9" y="501" width="0.6" height="15.0" fill="rgb(245,222,16)" rx="2" ry="2"/>
            <text x="1116.92" y="511.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (97 samples, 4.50%)</title>
            <rect x="623.5" y="117" width="53.1" height="15.0" fill="rgb(206,126,23)" rx="2" ry="2"/>
            <text x="626.53" y="127.5">std::..</text>
        </g>
        <g>
            <title>std::vector&lt;Page, (2 samples, 0.09%)</title>
            <rect x="1097.0" y="549" width="1.1" height="15.0" fill="rgb(206,81,51)" rx="2" ry="2"/>
            <text x="1099.96" y="559.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;PageId (3 samples, 0.14%)</title>
            <rect x="1101.3" y="421" width="1.7" height="15.0" fill="rgb(230,216,28)" rx="2" ry="2"/>
            <text x="1104.34" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="421" width="0.5" height="15.0" fill="rgb(220,145,29)" rx="2" ry="2"/>
            <text x="1189.17" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (26 samples, 1.21%)</title>
            <rect x="251.9" y="213" width="14.2" height="15.0" fill="rgb(205,172,8)" rx="2" ry="2"/>
            <text x="254.91" y="223.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (2 samples, 0.09%)</title>
            <rect x="347.1" y="213" width="1.1" height="15.0" fill="rgb(206,174,10)" rx="2" ry="2"/>
            <text x="350.14" y="223.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1111.7" y="421" width="1.1" height="15.0" fill="rgb(249,152,34)" rx="2" ry="2"/>
            <text x="1114.73" y="431.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (1 samples, 0.05%)</title>
            <rect x="1136.4" y="549" width="0.5" height="15.0" fill="rgb(213,177,16)" rx="2" ry="2"/>
            <text x="1139.36" y="559.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="469" width="0.5" height="15.0" fill="rgb(222,136,50)" rx="2" ry="2"/>
            <text x="1103.79" y="479.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples, 27.97%)</title>
            <rect x="18.2" y="309" width="330.0" height="15.0" fill="rgb(233,116,15)" rx="2" ry="2"/>
            <text x="21.21" y="319.5">std::thread::_Invoker&lt;std::tuple&lt;MultiThread..</text>
        </g>
        <g>
            <title>std::pair&lt;PageId (33 samples, 1.53%)</title>
            <rect x="1047.7" y="437" width="18.1" height="15.0" fill="rgb(253,173,24)" rx="2" ry="2"/>
            <text x="1050.70" y="447.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*&gt; (2 samples, 0.09%)</title>
            <rect x="1159.4" y="389" width="1.0" height="15.0" fill="rgb(250,58,3)" rx="2" ry="2"/>
            <text x="1162.35" y="399.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (21 samples, 0.97%)</title>
            <rect x="254.6" y="133" width="11.5" height="15.0" fill="rgb(216,117,43)" rx="2" ry="2"/>
            <text x="257.65" y="143.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="818.9" y="453" width="0.6" height="15.0" fill="rgb(222,23,45)" rx="2" ry="2"/>
            <text x="821.92" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1136.4" y="517" width="0.5" height="15.0" fill="rgb(248,146,32)" rx="2" ry="2"/>
            <text x="1139.36" y="527.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1110.6" y="405" width="0.6" height="15.0" fill="rgb(248,133,35)" rx="2" ry="2"/>
            <text x="1113.64" y="415.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="347.7" y="117" width="0.5" height="15.0" fill="rgb(225,10,41)" rx="2" ry="2"/>
            <text x="350.69" y="127.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1112.3" y="389" width="0.5" height="15.0" fill="rgb(246,98,36)" rx="2" ry="2"/>
            <text x="1115.28" y="399.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="325" width="1.7" height="15.0" fill="rgb(232,132,6)" rx="2" ry="2"/>
            <text x="1104.34" y="335.5"></text>
        </g>
        <g>
            <title>NetworkGenerator::generatePageFromNum (5 samples, 0.23%)</title>
            <rect x="1098.6" y="549" width="2.7" height="15.0" fill="rgb(252,17,0)" rx="2" ry="2"/>
            <text x="1101.60" y="559.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1109.5" y="437" width="0.6" height="15.0" fill="rgb(232,38,7)" rx="2" ry="2"/>
            <text x="1112.55" y="447.5"></text>
        </g>
        <g>
            <title>_int_malloc (1 samples, 0.05%)</title>
            <rect x="1101.9" y="277" width="0.5" height="15.0" fill="rgb(253,136,18)" rx="2" ry="2"/>
            <text x="1104.88" y="287.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::computeForNetwork (531 samples, 24.63%)</title>
            <rect x="806.3" y="565" width="290.7" height="15.0" fill="rgb(251,141,30)" rx="2" ry="2"/>
            <text x="809.34" y="575.5">MultiThreadedPageRankComputer::computeF..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="347.1" y="165" width="1.1" height="15.0" fill="rgb(254,79,21)" rx="2" ry="2"/>
            <text x="350.14" y="175.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1096.4" y="389" width="0.6" height="15.0" fill="rgb(240,138,38)" rx="2" ry="2"/>
            <text x="1099.41" y="399.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (2 samples, 0.09%)</title>
            <rect x="1159.4" y="277" width="1.0" height="15.0" fill="rgb(246,218,28)" rx="2" ry="2"/>
            <text x="1162.35" y="287.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (27 samples, 1.25%)</title>
            <rect x="1121.0" y="405" width="14.8" height="15.0" fill="rgb(230,90,32)" rx="2" ry="2"/>
            <text x="1124.04" y="415.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (16 samples, 0.74%)</title>
            <rect x="809.6" y="469" width="8.8" height="15.0" fill="rgb(231,106,16)" rx="2" ry="2"/>
            <text x="812.62" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (16 samples, 0.74%)</title>
            <rect x="809.6" y="517" width="8.8" height="15.0" fill="rgb(207,153,38)" rx="2" ry="2"/>
            <text x="812.62" y="527.5"></text>
        </g>
        <g>
            <title>Page::~Page (1 samples, 0.05%)</title>
            <rect x="1114.5" y="549" width="0.5" height="15.0" fill="rgb(224,228,15)" rx="2" ry="2"/>
            <text x="1117.47" y="559.5"></text>
        </g>
        <g>
            <title>std::unordered_map&lt;PageId, (87 samples, 4.04%)</title>
            <rect x="1037.8" y="549" width="47.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2"/>
            <text x="1040.85" y="559.5">std:..</text>
        </g>
        <g>
            <title>__gthread_once (393 samples, 18.23%)</title>
            <rect x="819.5" y="453" width="215.1" height="15.0" fill="rgb(206,175,52)" rx="2" ry="2"/>
            <text x="822.47" y="463.5">__gthread_once</text>
        </g>
        <g>
            <title>tcache_get (1 samples, 0.05%)</title>
            <rect x="1113.9" y="421" width="0.6" height="15.0" fill="rgb(208,0,49)" rx="2" ry="2"/>
            <text x="1116.92" y="431.5"></text>
        </g>
        <g>
            <title>__pthread_once_slow (837 samples, 38.82%)</title>
            <rect x="348.2" y="405" width="458.1" height="15.0" fill="rgb(216,78,54)" rx="2" ry="2"/>
            <text x="351.24" y="415.5">__pthread_once_slow</text>
        </g>
        <g>
            <title>operator (3 samples, 0.14%)</title>
            <rect x="16.6" y="117" width="1.6" height="15.0" fill="rgb(224,191,49)" rx="2" ry="2"/>
            <text x="19.57" y="127.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="16.6" y="133" width="1.6" height="15.0" fill="rgb(211,136,1)" rx="2" ry="2"/>
            <text x="19.57" y="143.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_base&lt;PageId, (10 samples, 0.46%)</title>
            <rect x="1171.9" y="485" width="5.5" height="15.0" fill="rgb(223,49,13)" rx="2" ry="2"/>
            <text x="1174.94" y="495.5"></text>
        </g>
        <g>
            <title>NetworkGenerator::generatePageFromNumWithGeneratedId (16 samples, 0.74%)</title>
            <rect x="1103.0" y="549" width="8.7" height="15.0" fill="rgb(215,19,21)" rx="2" ry="2"/>
            <text x="1105.98" y="559.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; (5 samples, 0.23%)</title>
            <rect x="1155.0" y="469" width="2.7" height="15.0" fill="rgb(234,35,43)" rx="2" ry="2"/>
            <text x="1157.97" y="479.5"></text>
        </g>
        <g>
            <title>std::lock_guard&lt;std::mutex&gt;::lock_guard (3 samples, 0.14%)</title>
            <rect x="10.5" y="229" width="1.7" height="15.0" fill="rgb(234,93,14)" rx="2" ry="2"/>
            <text x="13.55" y="239.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1089.8" y="437" width="0.6" height="15.0" fill="rgb(253,175,48)" rx="2" ry="2"/>
            <text x="1092.84" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="16.0" y="149" width="2.2" height="15.0" fill="rgb(229,80,45)" rx="2" ry="2"/>
            <text x="19.02" y="159.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1186.7" y="485" width="1.1" height="15.0" fill="rgb(206,60,24)" rx="2" ry="2"/>
            <text x="1189.72" y="495.5"></text>
        </g>
        <g>
            <title>std::thread::_M_start_thread(std::unique_ptr&lt;std::thread::_State, (1 samples, 0.05%)</title>
            <rect x="806.3" y="341" width="0.6" height="15.0" fill="rgb(251,205,29)" rx="2" ry="2"/>
            <text x="809.34" y="351.5"></text>
        </g>
        <g>
            <title>std::__detail::_Insert&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1186.7" y="533" width="1.1" height="15.0" fill="rgb(216,6,9)" rx="2" ry="2"/>
            <text x="1189.72" y="543.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1115.6" y="533" width="1.1" height="15.0" fill="rgb(226,7,11)" rx="2" ry="2"/>
            <text x="1118.57" y="543.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (17 samples, 0.79%)</title>
            <rect x="1148.4" y="501" width="9.3" height="15.0" fill="rgb(250,102,17)" rx="2" ry="2"/>
            <text x="1151.40" y="511.5"></text>
        </g>
        <g>
            <title>std::__detail::_Map_base&lt;PageId, (43 samples, 1.99%)</title>
            <rect x="1162.1" y="533" width="23.5" height="15.0" fill="rgb(205,175,5)" rx="2" ry="2"/>
            <text x="1165.09" y="543.5">s..</text>
        </g>
        <g>
            <title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="485" width="1.1" height="15.0" fill="rgb(217,226,0)" rx="2" ry="2"/>
            <text x="1191.36" y="495.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples, 0.65%)</title>
            <rect x="10.5" y="309" width="7.7" height="15.0" fill="rgb(216,167,36)" rx="2" ry="2"/>
            <text x="13.55" y="319.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (28 samples, 1.30%)</title>
            <rect x="1146.8" y="517" width="15.3" height="15.0" fill="rgb(218,145,14)" rx="2" ry="2"/>
            <text x="1149.76" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Insert&lt;PageId, (9 samples, 0.42%)</title>
            <rect x="1090.4" y="533" width="4.9" height="15.0" fill="rgb(248,34,14)" rx="2" ry="2"/>
            <text x="1093.39" y="543.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (1 samples, 0.05%)</title>
            <rect x="1111.2" y="373" width="0.5" height="15.0" fill="rgb(214,61,28)" rx="2" ry="2"/>
            <text x="1114.19" y="383.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1107.4" y="469" width="1.6" height="15.0" fill="rgb(248,214,32)" rx="2" ry="2"/>
            <text x="1110.36" y="479.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1114.5" y="373" width="0.5" height="15.0" fill="rgb(242,39,3)" rx="2" ry="2"/>
            <text x="1117.47" y="383.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (27 samples, 1.25%)</title>
            <rect x="1121.0" y="437" width="14.8" height="15.0" fill="rgb(240,195,8)" rx="2" ry="2"/>
            <text x="1124.04" y="447.5"></text>
        </g>
        <g>
            <title>std::thread::join() (393 samples, 18.23%)</title>
            <rect x="819.5" y="421" width="215.1" height="15.0" fill="rgb(225,22,18)" rx="2" ry="2"/>
            <text x="822.47" y="431.5">std::thread::join()</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="389" width="0.5" height="15.0" fill="rgb(238,5,5)" rx="2" ry="2"/>
            <text x="1189.17" y="399.5"></text>
        </g>
        <g>
            <title>std::unordered_map&lt;PageId, (232 samples, 10.76%)</title>
            <rect x="678.8" y="197" width="127.0" height="15.0" fill="rgb(219,140,1)" rx="2" ry="2"/>
            <text x="681.81" y="207.5">std::unordered_..</text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::waitForAll&lt;MultiThreadedPageRankComputer::{unnamed (3 samples, 0.14%)</title>
            <rect x="806.9" y="533" width="1.6" height="15.0" fill="rgb(251,143,49)" rx="2" ry="2"/>
            <text x="809.88" y="543.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (28 samples, 1.30%)</title>
            <rect x="1120.5" y="469" width="15.3" height="15.0" fill="rgb(221,30,33)" rx="2" ry="2"/>
            <text x="1123.49" y="479.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (3 samples, 0.14%)</title>
            <rect x="1101.3" y="453" width="1.7" height="15.0" fill="rgb(230,201,1)" rx="2" ry="2"/>
            <text x="1104.34" y="463.5"></text>
        </g>
        <g>
            <title>std::pair&lt;PageId (8 samples, 0.37%)</title>
            <rect x="1140.2" y="549" width="4.4" height="15.0" fill="rgb(211,163,18)" rx="2" ry="2"/>
            <text x="1143.19" y="559.5"></text>
        </g>
        <g>
            <title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId,
                (603 samples, 27.97%)
            </title>
            <rect x="18.2" y="549" width="330.0" height="15.0" fill="rgb(212,215,41)" rx="2" ry="2"/>
            <text x="21.21" y="559.5">std::thread::_State_impl&lt;std::thread::_Invok..</text>
        </g>
        <g>
            <title>_IO_vsnprintf (7 samples, 0.32%)</title>
            <rect x="1103.5" y="485" width="3.9" height="15.0" fill="rgb(214,78,20)" rx="2" ry="2"/>
            <text x="1106.53" y="495.5"></text>
        </g>
        <g>
            <title>__GI___libc_free (1 samples, 0.05%)</title>
            <rect x="1186.2" y="341" width="0.5" height="15.0" fill="rgb(243,72,29)" rx="2" ry="2"/>
            <text x="1189.17" y="351.5"></text>
        </g>
        <g>
            <title>std::__future_base::_S_make_async_state&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="517" width="0.6" height="15.0" fill="rgb(206,57,16)" rx="2" ry="2"/>
            <text x="809.34" y="527.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*, (1 samples, 0.05%)</title>
            <rect x="1114.5" y="517" width="0.5" height="15.0" fill="rgb(247,184,49)" rx="2" ry="2"/>
            <text x="1117.47" y="527.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;PageId*&gt;, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="453" width="1.1" height="15.0" fill="rgb(222,143,52)" rx="2" ry="2"/>
            <text x="1191.36" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1116.1" y="373" width="0.6" height="15.0" fill="rgb(219,37,41)" rx="2" ry="2"/>
            <text x="1119.11" y="383.5"></text>
        </g>
        <g>
            <title>std::__detail::_Map_base&lt;PageId, (209 samples, 9.69%)</title>
            <rect x="691.4" y="181" width="114.4" height="15.0" fill="rgb(235,19,50)" rx="2" ry="2"/>
            <text x="694.40" y="191.5">std::__detail:..</text>
        </g>
        <g>
            <title>Page::Page (3 samples, 0.14%)</title>
            <rect x="1101.3" y="485" width="1.7" height="15.0" fill="rgb(218,147,6)" rx="2" ry="2"/>
            <text x="1104.34" y="495.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;Page*, (2 samples, 0.09%)</title>
            <rect x="1097.0" y="533" width="1.1" height="15.0" fill="rgb(237,36,46)" rx="2" ry="2"/>
            <text x="1099.96" y="543.5"></text>
        </g>
        <g>
            <title>std::thread::thread&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="357" width="0.6" height="15.0" fill="rgb(229,196,24)" rx="2" ry="2"/>
            <text x="809.34" y="367.5"></text>
        </g>
        <g>
            <title>__pthread_mutex_unlock_usercnt (7 samples, 0.32%)</title>
            <rect x="12.2" y="181" width="3.8" height="15.0" fill="rgb(228,71,24)" rx="2" ry="2"/>
            <text x="15.19" y="191.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1035.7" y="437" width="2.1" height="15.0" fill="rgb(251,50,2)" rx="2" ry="2"/>
            <text x="1038.66" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1141.8" y="485" width="2.8" height="15.0" fill="rgb(249,210,45)" rx="2" ry="2"/>
            <text x="1144.84" y="495.5"></text>
        </g>
        <g>
            <title>std::vector&lt;Page, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="533" width="0.5" height="15.0" fill="rgb(222,176,12)" rx="2" ry="2"/>
            <text x="1101.05" y="543.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1139.6" y="453" width="0.6" height="15.0" fill="rgb(242,131,46)" rx="2" ry="2"/>
            <text x="1142.65" y="463.5"></text>
        </g>
        <g>
            <title>_int_free (1 samples, 0.05%)</title>
            <rect x="1053.2" y="325" width="0.5" height="15.0" fill="rgb(221,19,25)" rx="2" ry="2"/>
            <text x="1056.17" y="335.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1114.5" y="437" width="0.5" height="15.0" fill="rgb(219,146,10)" rx="2" ry="2"/>
            <text x="1117.47" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (96 samples, 4.45%)</title>
            <rect x="624.1" y="85" width="52.5" height="15.0" fill="rgb(221,82,42)" rx="2" ry="2"/>
            <text x="627.08" y="95.5">std::..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="676.6" y="165" width="2.2" height="15.0" fill="rgb(242,154,30)" rx="2" ry="2"/>
            <text x="679.62" y="175.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1097.0" y="325" width="0.5" height="15.0" fill="rgb(215,138,49)" rx="2" ry="2"/>
            <text x="1099.96" y="335.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.32%)</title>
            <rect x="1158.3" y="469" width="3.8" height="15.0" fill="rgb(218,28,48)" rx="2" ry="2"/>
            <text x="1161.26" y="479.5"></text>
        </g>
        <g>
            <title>malloc_consolidate (5 samples, 0.23%)</title>
            <rect x="1085.5" y="517" width="2.7" height="15.0" fill="rgb(219,120,34)" rx="2" ry="2"/>
            <text x="1088.46" y="527.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="818.9" y="469" width="0.6" height="15.0" fill="rgb(232,76,44)" rx="2" ry="2"/>
            <text x="821.92" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1047.7" y="357" width="2.2" height="15.0" fill="rgb(223,215,20)" rx="2" ry="2"/>
            <text x="1050.70" y="367.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1159.4" y="325" width="1.0" height="15.0" fill="rgb(245,181,33)" rx="2" ry="2"/>
            <text x="1162.35" y="335.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;double&gt;, (603 samples, 27.97%)</title>
            <rect x="18.2" y="341" width="330.0" height="15.0" fill="rgb(228,182,50)" rx="2" ry="2"/>
            <text x="21.21" y="351.5">std::__future_base::_Task_setter&lt;std::unique..</text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (16 samples, 0.74%)</title>
            <rect x="1149.0" y="485" width="8.7" height="15.0" fill="rgb(243,225,43)" rx="2" ry="2"/>
            <text x="1151.95" y="495.5"></text>
        </g>
        <g>
            <title>std::mutex::lock (3 samples, 0.14%)</title>
            <rect x="10.5" y="213" width="1.7" height="15.0" fill="rgb(234,189,28)" rx="2" ry="2"/>
            <text x="13.55" y="223.5"></text>
        </g>
        <g>
            <title>_itoa_word (1 samples, 0.05%)</title>
            <rect x="1106.8" y="453" width="0.6" height="15.0" fill="rgb(254,190,13)" rx="2" ry="2"/>
            <text x="1109.81" y="463.5"></text>
        </g>
        <g>
            <title>PageId::PageId (3 samples, 0.14%)</title>
            <rect x="1107.4" y="501" width="1.6" height="15.0" fill="rgb(236,185,6)" rx="2" ry="2"/>
            <text x="1110.36" y="511.5"></text>
        </g>
        <g>
            <title>__gthread_once (837 samples, 38.82%)</title>
            <rect x="348.2" y="421" width="458.1" height="15.0" fill="rgb(223,66,4)" rx="2" ry="2"/>
            <text x="351.24" y="431.5">__gthread_once</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1158.3" y="389" width="1.1" height="15.0" fill="rgb(215,18,47)" rx="2" ry="2"/>
            <text x="1161.26" y="399.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (7 samples, 0.32%)</title>
            <rect x="1061.9" y="405" width="3.9" height="15.0" fill="rgb(249,120,17)" rx="2" ry="2"/>
            <text x="1064.93" y="415.5"></text>
        </g>
        <g>
            <title>PageIdHash::operator() (9 samples, 0.42%)</title>
            <rect x="1180.7" y="501" width="4.9" height="15.0" fill="rgb(224,104,24)" rx="2" ry="2"/>
            <text x="1183.70" y="511.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1113.9" y="437" width="0.6" height="15.0" fill="rgb(251,112,4)" rx="2" ry="2"/>
            <text x="1116.92" y="447.5"></text>
        </g>
        <g>
            <title>std::operator==&lt;char&gt; (1 samples, 0.05%)</title>
            <rect x="690.9" y="85" width="0.5" height="15.0" fill="rgb(253,86,1)" rx="2" ry="2"/>
            <text x="693.85" y="95.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (4 samples, 0.19%)</title>
            <rect x="676.6" y="133" width="2.2" height="15.0" fill="rgb(225,168,13)" rx="2" ry="2"/>
            <text x="679.62" y="143.5"></text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (837 samples, 38.82%)</title>
            <rect x="348.2" y="389" width="458.1" height="15.0" fill="rgb(213,198,1)" rx="2" ry="2"/>
            <text x="351.24" y="399.5">std::__future_base::_State_baseV2::_M_do_set(std::function&lt;std..</text>
        </g>
        <g>
            <title>__lll_lock_wait (269 samples, 12.48%)</title>
            <rect x="378.3" y="165" width="147.3" height="15.0" fill="rgb(229,155,30)" rx="2" ry="2"/>
            <text x="381.34" y="175.5">__lll_lock_wait</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1035.7" y="453" width="2.1" height="15.0" fill="rgb(248,41,9)" rx="2" ry="2"/>
            <text x="1038.66" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1159.4" y="293" width="1.0" height="15.0" fill="rgb(250,22,4)" rx="2" ry="2"/>
            <text x="1162.35" y="303.5"></text>
        </g>
        <g>
            <title>malloc_consolidate (1 samples, 0.05%)</title>
            <rect x="1097.5" y="357" width="0.6" height="15.0" fill="rgb(209,5,20)" rx="2" ry="2"/>
            <text x="1100.50" y="367.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1141.8" y="421" width="2.8" height="15.0" fill="rgb(229,152,43)" rx="2" ry="2"/>
            <text x="1144.84" y="431.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="389" width="0.5" height="15.0" fill="rgb(218,185,27)" rx="2" ry="2"/>
            <text x="1101.05" y="399.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1097.5" y="389" width="0.6" height="15.0" fill="rgb(248,150,19)" rx="2" ry="2"/>
            <text x="1100.50" y="399.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1108.5" y="405" width="0.5" height="15.0" fill="rgb(211,32,24)" rx="2" ry="2"/>
            <text x="1111.45" y="415.5"></text>
        </g>
        <g>
            <title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples, 27.97%)</title>
            <rect x="18.2" y="501" width="330.0" height="15.0" fill="rgb(239,202,52)" rx="2" ry="2"/>
            <text x="21.21" y="511.5">std::__invoke&lt;std::__future_base::_Async_sta..</text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::wait (393 samples, 18.23%)</title>
            <rect x="819.5" y="517" width="215.1" height="15.0" fill="rgb(227,154,8)" rx="2" ry="2"/>
            <text x="822.47" y="527.5">std::__future_base::_State_b..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1159.4" y="309" width="1.0" height="15.0" fill="rgb(244,11,42)" rx="2" ry="2"/>
            <text x="1162.35" y="319.5"></text>
        </g>
        <g>
            <title>__pthread_once_slow (3 samples, 0.14%)</title>
            <rect x="806.9" y="421" width="1.6" height="15.0" fill="rgb(208,25,32)" rx="2" ry="2"/>
            <text x="809.88" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="405" width="1.7" height="15.0" fill="rgb(243,98,17)" rx="2" ry="2"/>
            <text x="1098.32" y="415.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (3 samples, 0.14%)</title>
            <rect x="1149.0" y="421" width="1.6" height="15.0" fill="rgb(237,29,19)" rx="2" ry="2"/>
            <text x="1151.95" y="431.5"></text>
        </g>
        <g>
            <title>malloc_consolidate (16 samples, 0.74%)</title>
            <rect x="1037.8" y="517" width="8.8" height="15.0" fill="rgb(207,37,48)" rx="2" ry="2"/>
            <text x="1040.85" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Map_base&lt;PageId, (147 samples, 6.82%)</title>
            <rect x="266.7" y="181" width="80.4" height="15.0" fill="rgb(207,64,30)" rx="2" ry="2"/>
            <text x="269.69" y="191.5">std::__de..</text>
        </g>
        <g>
            <title>PageId::PageId (2 samples, 0.09%)</title>
            <rect x="1188.4" y="421" width="1.1" height="15.0" fill="rgb(210,222,39)" rx="2" ry="2"/>
            <text x="1191.36" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="1109.5" y="453" width="2.2" height="15.0" fill="rgb(222,209,26)" rx="2" ry="2"/>
            <text x="1112.55" y="463.5"></text>
        </g>
        <g>
            <title>std::__invoke_impl&lt;void, (14 samples, 0.65%)</title>
            <rect x="10.5" y="485" width="7.7" height="15.0" fill="rgb(236,153,26)" rx="2" ry="2"/>
            <text x="13.55" y="495.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;double&gt;, (837 samples, 38.82%)</title>
            <rect x="348.2" y="341" width="458.1" height="15.0" fill="rgb(210,202,5)" rx="2" ry="2"/>
            <text x="351.24" y="351.5">std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1136.4" y="501" width="0.5" height="15.0" fill="rgb(249,78,43)" rx="2" ry="2"/>
            <text x="1139.36" y="511.5"></text>
        </g>
        <g>
            <title>std::_Construct&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="405" width="1.7" height="15.0" fill="rgb(237,102,44)" rx="2" ry="2"/>
            <text x="1104.34" y="415.5"></text>
        </g>
        <g>
            <title>Network::addPage (1 samples, 0.05%)</title>
            <rect x="1098.1" y="549" width="0.5" height="15.0" fill="rgb(218,58,49)" rx="2" ry="2"/>
            <text x="1101.05" y="559.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (15 samples, 0.70%)</title>
            <rect x="1053.7" y="309" width="8.2" height="15.0" fill="rgb(246,138,53)" rx="2" ry="2"/>
            <text x="1056.72" y="319.5"></text>
        </g>
        <g>
            <title>malloc@plt (1 samples, 0.05%)</title>
            <rect x="1109.5" y="421" width="0.6" height="15.0" fill="rgb(243,113,35)" rx="2" ry="2"/>
            <text x="1112.55" y="431.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.05%)</title>
            <rect x="1136.4" y="485" width="0.5" height="15.0" fill="rgb(225,153,25)" rx="2" ry="2"/>
            <text x="1139.36" y="495.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (22 samples, 1.02%)</title>
            <rect x="1053.7" y="421" width="12.1" height="15.0" fill="rgb(237,140,5)" rx="2" ry="2"/>
            <text x="1056.72" y="431.5"></text>
        </g>
        <g>
            <title>std::_Function_handler&lt;void (150 samples, 6.96%)</title>
            <rect x="266.1" y="229" width="82.1" height="15.0" fill="rgb(224,187,2)" rx="2" ry="2"/>
            <text x="269.14" y="239.5">std::_Fun..</text>
        </g>
        <g>
            <title>__lll_unlock_wake (159 samples, 7.37%)</title>
            <rect x="528.8" y="165" width="87.1" height="15.0" fill="rgb(245,220,27)" rx="2" ry="2"/>
            <text x="531.85" y="175.5">__lll_unlo..</text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId&gt; (1 samples, 0.05%)</title>
            <rect x="1114.5" y="469" width="0.5" height="15.0" fill="rgb(239,18,27)" rx="2" ry="2"/>
            <text x="1117.47" y="479.5"></text>
        </g>
        <g>
            <title>Page::Page (3 samples, 0.14%)</title>
            <rect x="1115.0" y="549" width="1.7" height="15.0" fill="rgb(229,182,23)" rx="2" ry="2"/>
            <text x="1118.02" y="559.5"></text>
        </g>
        <g>
            <title>std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (837 samples, 38.82%)</title>
            <rect x="348.2" y="293" width="458.1" height="15.0" fill="rgb(210,31,46)" rx="2" ry="2"/>
            <text x="351.24" y="303.5">std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;Pa..</text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageIdAndRank, (1 samples, 0.05%)</title>
            <rect x="1189.5" y="517" width="0.5" height="15.0" fill="rgb(242,74,10)" rx="2" ry="2"/>
            <text x="1192.45" y="527.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1153.3" y="389" width="1.7" height="15.0" fill="rgb(226,217,54)" rx="2" ry="2"/>
            <text x="1156.33" y="399.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (7 samples, 0.32%)</title>
            <rect x="1103.5" y="501" width="3.9" height="15.0" fill="rgb(221,83,38)" rx="2" ry="2"/>
            <text x="1106.53" y="511.5"></text>
        </g>
        <g>
            <title>__lll_unlock_wake (7 samples, 0.32%)</title>
            <rect x="12.2" y="165" width="3.8" height="15.0" fill="rgb(223,194,25)" rx="2" ry="2"/>
            <text x="15.19" y="175.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (2 samples, 0.09%)</title>
            <rect x="1159.4" y="341" width="1.0" height="15.0" fill="rgb(209,173,29)" rx="2" ry="2"/>
            <text x="1162.35" y="351.5"></text>
        </g>
        <g>
            <title>std::mutex::lock (232 samples, 10.76%)</title>
            <rect x="29.7" y="213" width="127.0" height="15.0" fill="rgb(233,21,20)" rx="2" ry="2"/>
            <text x="32.70" y="223.5">std::mutex::lock</text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;PageId&gt; (7 samples, 0.32%)</title>
            <rect x="1061.9" y="373" width="3.9" height="15.0" fill="rgb(213,129,13)" rx="2" ry="2"/>
            <text x="1064.93" y="383.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageIdAndRank&gt;::deallocate (1 samples, 0.05%)</title>
            <rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(232,88,45)" rx="2" ry="2"/>
            <text x="1192.45" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (6 samples, 0.28%)</title>
            <rect x="1136.9" y="469" width="3.3" height="15.0" fill="rgb(250,56,47)" rx="2" ry="2"/>
            <text x="1139.91" y="479.5"></text>
        </g>
        <g>
            <title>std::__invoke&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples, 27.97%)</title>
            <rect x="18.2" y="293" width="330.0" height="15.0" fill="rgb(237,211,36)" rx="2" ry="2"/>
            <text x="21.21" y="303.5">std::__invoke&lt;MultiThreadedPageRankComputer:..</text>
        </g>
        <g>
            <title>std::vector&lt;Page, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="533" width="1.7" height="15.0" fill="rgb(235,11,8)" rx="2" ry="2"/>
            <text x="1104.34" y="543.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;PageId, (603 samples, 27.97%)</title>
            <rect x="18.2" y="261" width="330.0" height="15.0" fill="rgb(253,131,42)" rx="2" ry="2"/>
            <text x="21.21" y="271.5">MultiThreadedPageRankComputer::pool&lt;PageId,</text>
        </g>
        <g>
            <title>__GI__IO_default_xsputn (2 samples, 0.09%)</title>
            <rect x="1105.7" y="453" width="1.1" height="15.0" fill="rgb(218,126,8)" rx="2" ry="2"/>
            <text x="1108.71" y="463.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_move_if_noexcept_a&lt;Page*, (1 samples, 0.05%)</title>
            <rect x="1098.1" y="501" width="0.5" height="15.0" fill="rgb(218,122,30)" rx="2" ry="2"/>
            <text x="1101.05" y="511.5"></text>
        </g>
        <g>
            <title>std::function&lt;void (4 samples, 0.19%)</title>
            <rect x="16.0" y="245" width="2.2" height="15.0" fill="rgb(208,105,23)" rx="2" ry="2"/>
            <text x="19.02" y="255.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1115.6" y="373" width="0.5" height="15.0" fill="rgb(221,27,38)" rx="2" ry="2"/>
            <text x="1118.57" y="383.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.05%)</title>
            <rect x="1187.3" y="437" width="0.5" height="15.0" fill="rgb(242,225,37)" rx="2" ry="2"/>
            <text x="1190.26" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1100.8" y="437" width="0.5" height="15.0" fill="rgb(216,17,28)" rx="2" ry="2"/>
            <text x="1103.79" y="447.5"></text>
        </g>
        <g>
            <title>std::hash&lt;std::__cxx11::basic_string&lt;char, (9 samples, 0.42%)</title>
            <rect x="1180.7" y="485" width="4.9" height="15.0" fill="rgb(234,90,40)" rx="2" ry="2"/>
            <text x="1183.70" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1102.4" y="309" width="0.6" height="15.0" fill="rgb(248,38,34)" rx="2" ry="2"/>
            <text x="1105.43" y="319.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1158.3" y="357" width="1.1" height="15.0" fill="rgb(225,76,6)" rx="2" ry="2"/>
            <text x="1161.26" y="367.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId&gt; (2 samples, 0.09%)</title>
            <rect x="1159.4" y="357" width="1.0" height="15.0" fill="rgb(227,204,41)" rx="2" ry="2"/>
            <text x="1162.35" y="367.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="517" width="1.7" height="15.0" fill="rgb(223,136,41)" rx="2" ry="2"/>
            <text x="1098.32" y="527.5"></text>
        </g>
        <g>
            <title>std::__basic_future&lt;double&gt;::_M_get_result (393 samples, 18.23%)</title>
            <rect x="819.5" y="533" width="215.1" height="15.0" fill="rgb(248,145,4)" rx="2" ry="2"/>
            <text x="822.47" y="543.5">std::__basic_future&lt;double&gt;:..</text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.05%)</title>
            <rect x="1097.0" y="309" width="0.5" height="15.0" fill="rgb(232,203,9)" rx="2" ry="2"/>
            <text x="1099.96" y="319.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;PageId (2 samples, 0.09%)</title>
            <rect x="1115.6" y="517" width="1.1" height="15.0" fill="rgb(221,187,54)" rx="2" ry="2"/>
            <text x="1118.57" y="527.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1136.4" y="533" width="0.5" height="15.0" fill="rgb(205,137,38)" rx="2" ry="2"/>
            <text x="1139.36" y="543.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1114.5" y="421" width="0.5" height="15.0" fill="rgb(222,34,49)" rx="2" ry="2"/>
            <text x="1117.47" y="431.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1115.6" y="357" width="0.5" height="15.0" fill="rgb(241,115,27)" rx="2" ry="2"/>
            <text x="1118.57" y="367.5"></text>
        </g>
        <g>
            <title>std::__invoke_impl&lt;void, (603 samples, 27.97%)</title>
            <rect x="18.2" y="485" width="330.0" height="15.0" fill="rgb(246,26,50)" rx="2" ry="2"/>
            <text x="21.21" y="495.5">std::__invoke_impl&lt;void,</text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (28 samples, 1.30%)</title>
            <rect x="1162.1" y="501" width="15.3" height="15.0" fill="rgb(243,203,21)" rx="2" ry="2"/>
            <text x="1165.09" y="511.5"></text>
        </g>
        <g>
            <title>std::uninitialized_copy&lt;std::move_iterator&lt;PageId*&gt;, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="469" width="1.7" height="15.0" fill="rgb(237,209,18)" rx="2" ry="2"/>
            <text x="1098.32" y="479.5"></text>
        </g>
        <g>
            <title>std::_Function_handler&lt;void (347 samples, 16.09%)</title>
            <rect x="616.4" y="229" width="189.9" height="15.0" fill="rgb(227,40,10)" rx="2" ry="2"/>
            <text x="619.42" y="239.5">std::_Function_handler&lt;v..</text>
        </g>
        <g>
            <title>std::_Hash_impl::hash (27 samples, 1.25%)</title>
            <rect x="791.0" y="117" width="14.8" height="15.0" fill="rgb(249,133,45)" rx="2" ry="2"/>
            <text x="794.01" y="127.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (180 samples, 8.35%)</title>
            <rect x="692.5" y="165" width="98.5" height="15.0" fill="rgb(220,92,42)" rx="2" ry="2"/>
            <text x="695.50" y="175.5">std::_Hasht..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1158.3" y="373" width="1.1" height="15.0" fill="rgb(226,13,12)" rx="2" ry="2"/>
            <text x="1161.26" y="383.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (6 samples, 0.28%)</title>
            <rect x="1136.9" y="485" width="3.3" height="15.0" fill="rgb(244,52,4)" rx="2" ry="2"/>
            <text x="1139.91" y="495.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title>
            <rect x="1100.8" y="373" width="0.5" height="15.0" fill="rgb(219,228,8)" rx="2" ry="2"/>
            <text x="1103.79" y="383.5"></text>
        </g>
        <g>
            <title>std::_Hash_impl::hash (5 samples, 0.23%)</title>
            <rect x="344.4" y="117" width="2.7" height="15.0" fill="rgb(209,72,12)" rx="2" ry="2"/>
            <text x="347.41" y="127.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (11 samples, 0.51%)</title>
            <rect x="1047.7" y="405" width="6.0" height="15.0" fill="rgb(225,39,20)" rx="2" ry="2"/>
            <text x="1050.70" y="415.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.05%)</title>
            <rect x="1094.8" y="469" width="0.5" height="15.0" fill="rgb(254,198,44)" rx="2" ry="2"/>
            <text x="1097.77" y="479.5"></text>
        </g>
        <g>
            <title>std::__detail::_Node_iterator_base&lt;std::pair&lt;PageId (38 samples, 1.76%)</title>
            <rect x="351.0" y="213" width="20.8" height="15.0" fill="rgb(250,40,15)" rx="2" ry="2"/>
            <text x="353.97" y="223.5"></text>
        </g>
        <g>
            <title>std::_Hash_bytes(void (27 samples, 1.25%)</title>
            <rect x="791.0" y="101" width="14.8" height="15.0" fill="rgb(207,158,47)" rx="2" ry="2"/>
            <text x="794.01" y="111.5"></text>
        </g>
        <g>
            <title>NetworkWithoutManyEdgesGenerator::generateNetworkOfSize (6 samples, 0.28%)</title>
            <rect x="1098.1" y="565" width="3.2" height="15.0" fill="rgb(205,98,51)" rx="2" ry="2"/>
            <text x="1101.05" y="575.5"></text>
        </g>
        <g>
            <title>start_thread (1,454 samples, 67.44%)</title>
            <rect x="10.5" y="581" width="795.8" height="15.0" fill="rgb(241,116,16)" rx="2" ry="2"/>
            <text x="13.55" y="591.5">start_thread</text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId&gt; (1 samples, 0.05%)</title>
            <rect x="1097.0" y="389" width="0.5" height="15.0" fill="rgb(240,32,5)" rx="2" ry="2"/>
            <text x="1099.96" y="399.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;PageId, (427 samples, 19.81%)</title>
            <rect x="18.2" y="245" width="233.7" height="15.0" fill="rgb(228,184,28)" rx="2" ry="2"/>
            <text x="21.21" y="255.5">MultiThreadedPageRankComputer::..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1111.2" y="421" width="0.5" height="15.0" fill="rgb(228,71,46)" rx="2" ry="2"/>
            <text x="1114.19" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1088.2" y="389" width="1.6" height="15.0" fill="rgb(217,195,29)" rx="2" ry="2"/>
            <text x="1091.20" y="399.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (15 samples, 0.70%)</title>
            <rect x="1053.7" y="261" width="8.2" height="15.0" fill="rgb(225,18,13)" rx="2" ry="2"/>
            <text x="1056.72" y="271.5"></text>
        </g>
        <g>
            <title>std::future&lt;double&gt;::get (393 samples, 18.23%)</title>
            <rect x="819.5" y="549" width="215.1" height="15.0" fill="rgb(210,181,21)" rx="2" ry="2"/>
            <text x="822.47" y="559.5">std::future&lt;double&gt;::get</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="687.0" y="149" width="2.2" height="15.0" fill="rgb(217,96,19)" rx="2" ry="2"/>
            <text x="690.02" y="159.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="357" width="1.7" height="15.0" fill="rgb(235,166,29)" rx="2" ry="2"/>
            <text x="1104.34" y="367.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_move_if_noexcept_a&lt;PageId*, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="501" width="1.7" height="15.0" fill="rgb(249,175,12)" rx="2" ry="2"/>
            <text x="1098.32" y="511.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (113 samples, 5.24%)</title>
            <rect x="267.8" y="149" width="61.8" height="15.0" fill="rgb(217,138,39)" rx="2" ry="2"/>
            <text x="270.78" y="159.5">std::_..</text>
        </g>
        <g>
            <title>__gthread_mutex_unlock (174 samples, 8.07%)</title>
            <rect x="156.7" y="197" width="95.2" height="15.0" fill="rgb(225,162,54)" rx="2" ry="2"/>
            <text x="159.68" y="207.5">__gthread_m..</text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (21 samples, 0.97%)</title>
            <rect x="679.9" y="181" width="11.5" height="15.0" fill="rgb(251,143,5)" rx="2" ry="2"/>
            <text x="682.91" y="191.5"></text>
        </g>
        <g>
            <title>std::lock_guard&lt;std::mutex&gt;::lock_guard (281 samples, 13.03%)</title>
            <rect x="371.8" y="229" width="153.8" height="15.0" fill="rgb(230,179,45)" rx="2" ry="2"/>
            <text x="374.77" y="239.5">std::lock_guard&lt;std..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1115.6" y="405" width="1.1" height="15.0" fill="rgb(235,192,19)" rx="2" ry="2"/>
            <text x="1118.57" y="415.5"></text>
        </g>
        <g>
            <title>_int_free (7 samples, 0.32%)</title>
            <rect x="1061.9" y="341" width="3.9" height="15.0" fill="rgb(206,144,22)" rx="2" ry="2"/>
            <text x="1064.93" y="351.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (32 samples, 1.48%)</title>
            <rect x="1118.8" y="501" width="17.6" height="15.0" fill="rgb(205,61,36)" rx="2" ry="2"/>
            <text x="1121.85" y="511.5"></text>
        </g>
        <g>
            <title>PageId::PageId (8 samples, 0.37%)</title>
            <rect x="1150.6" y="421" width="4.4" height="15.0" fill="rgb(208,8,7)" rx="2" ry="2"/>
            <text x="1153.59" y="431.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1114.5" y="533" width="0.5" height="15.0" fill="rgb(207,15,42)" rx="2" ry="2"/>
            <text x="1117.47" y="543.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.05%)</title>
            <rect x="1186.2" y="373" width="0.5" height="15.0" fill="rgb(216,164,29)" rx="2" ry="2"/>
            <text x="1189.17" y="383.5"></text>
        </g>
        <g>
            <title>_int_free (3 samples, 0.14%)</title>
            <rect x="1160.4" y="341" width="1.7" height="15.0" fill="rgb(229,9,33)" rx="2" ry="2"/>
            <text x="1163.45" y="351.5"></text>
        </g>
        <g>
            <title>__lll_lock_wait (2 samples, 0.09%)</title>
            <rect x="11.1" y="165" width="1.1" height="15.0" fill="rgb(248,129,50)" rx="2" ry="2"/>
            <text x="14.09" y="175.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*&gt; (1 samples, 0.05%)</title>
            <rect x="1114.5" y="501" width="0.5" height="15.0" fill="rgb(206,120,47)" rx="2" ry="2"/>
            <text x="1117.47" y="511.5"></text>
        </g>
        <g>
            <title>std::equal_to&lt;PageId&gt;::operator() (42 samples, 1.95%)</title>
            <rect x="306.6" y="101" width="23.0" height="15.0" fill="rgb(215,128,14)" rx="2" ry="2"/>
            <text x="309.64" y="111.5">s..</text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (4 samples, 0.19%)</title>
            <rect x="816.2" y="389" width="2.2" height="15.0" fill="rgb(236,113,35)" rx="2" ry="2"/>
            <text x="819.19" y="399.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="818.9" y="437" width="0.6" height="15.0" fill="rgb(240,124,25)" rx="2" ry="2"/>
            <text x="821.92" y="447.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (5 samples, 0.23%)</title>
            <rect x="1141.8" y="389" width="2.8" height="15.0" fill="rgb(224,149,17)" rx="2" ry="2"/>
            <text x="1144.84" y="399.5"></text>
        </g>
        <g>
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (1 samples, 0.05%)</title>
            <rect x="1097.0" y="405" width="0.5" height="15.0" fill="rgb(234,49,53)" rx="2" ry="2"/>
            <text x="1099.96" y="415.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="690.9" y="149" width="0.5" height="15.0" fill="rgb(230,42,20)" rx="2" ry="2"/>
            <text x="693.85" y="159.5"></text>
        </g>
        <g>
            <title>PageIdHash::operator() (27 samples, 1.25%)</title>
            <rect x="791.0" y="149" width="14.8" height="15.0" fill="rgb(207,213,8)" rx="2" ry="2"/>
            <text x="794.01" y="159.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1187.8" y="469" width="0.6" height="15.0" fill="rgb(234,12,8)" rx="2" ry="2"/>
            <text x="1190.81" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (103 samples, 4.78%)</title>
            <rect x="620.3" y="133" width="56.3" height="15.0" fill="rgb(236,87,0)" rx="2" ry="2"/>
            <text x="623.25" y="143.5">std::..</text>
        </g>
        <g>
            <title>__GI___libc_malloc (2 samples, 0.09%)</title>
            <rect x="1101.3" y="293" width="1.1" height="15.0" fill="rgb(251,198,52)" rx="2" ry="2"/>
            <text x="1104.34" y="303.5"></text>
        </g>
        <g>
            <title>_IO_vfprintf_internal (4 samples, 0.19%)</title>
            <rect x="1098.6" y="485" width="2.2" height="15.0" fill="rgb(232,34,34)" rx="2" ry="2"/>
            <text x="1101.60" y="495.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (2 samples, 0.09%)</title>
            <rect x="1107.4" y="405" width="1.1" height="15.0" fill="rgb(248,69,40)" rx="2" ry="2"/>
            <text x="1110.36" y="415.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;PageId*&gt;, (3 samples, 0.14%)</title>
            <rect x="1095.3" y="485" width="1.7" height="15.0" fill="rgb(217,77,22)" rx="2" ry="2"/>
            <text x="1098.32" y="495.5"></text>
        </g>
        <g>
            <title>malloc_consolidate (1 samples, 0.05%)</title>
            <rect x="1189.5" y="453" width="0.5" height="15.0" fill="rgb(207,53,41)" rx="2" ry="2"/>
            <text x="1192.45" y="463.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (7 samples, 0.32%)</title>
            <rect x="1158.3" y="485" width="3.8" height="15.0" fill="rgb(211,150,4)" rx="2" ry="2"/>
            <text x="1161.26" y="495.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (1 samples, 0.05%)</title>
            <rect x="1084.9" y="517" width="0.6" height="15.0" fill="rgb(208,28,9)" rx="2" ry="2"/>
            <text x="1087.92" y="527.5"></text>
        </g>
        <g>
            <title>malloc_consolidate (7 samples, 0.32%)</title>
            <rect x="1061.9" y="325" width="3.9" height="15.0" fill="rgb(237,91,49)" rx="2" ry="2"/>
            <text x="1064.93" y="335.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::compare (7 samples, 0.32%)</title>
            <rect x="1173.6" y="405" width="3.8" height="15.0" fill="rgb(205,120,48)" rx="2" ry="2"/>
            <text x="1176.58" y="415.5"></text>
        </g>
        <g>
            <title>__pthread_mutex_unlock_usercnt (164 samples, 7.61%)</title>
            <rect x="526.1" y="181" width="89.8" height="15.0" fill="rgb(248,193,0)" rx="2" ry="2"/>
            <text x="529.11" y="191.5">__pthread_..</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1094.8" y="485" width="0.5" height="15.0" fill="rgb(220,120,36)" rx="2" ry="2"/>
            <text x="1097.77" y="495.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (27 samples, 1.25%)</title>
            <rect x="1121.0" y="421" width="14.8" height="15.0" fill="rgb(232,81,18)" rx="2" ry="2"/>
            <text x="1124.04" y="431.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (2 samples, 0.09%)</title>
            <rect x="1158.3" y="421" width="1.1" height="15.0" fill="rgb(232,74,42)" rx="2" ry="2"/>
            <text x="1161.26" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (16 samples, 0.74%)</title>
            <rect x="809.6" y="501" width="8.8" height="15.0" fill="rgb(220,163,2)" rx="2" ry="2"/>
            <text x="812.62" y="511.5"></text>
        </g>
        <g>
            <title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (14 samples, 0.65%)</title>
            <rect x="10.5" y="357" width="7.7" height="15.0" fill="rgb(244,136,52)" rx="2" ry="2"/>
            <text x="13.55" y="367.5"></text>
        </g>
        <g>
            <title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples, 0.65%)</title>
            <rect x="10.5" y="501" width="7.7" height="15.0" fill="rgb(220,186,19)" rx="2" ry="2"/>
            <text x="13.55" y="511.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (21 samples, 0.97%)</title>
            <rect x="254.6" y="117" width="11.5" height="15.0" fill="rgb(228,167,38)" rx="2" ry="2"/>
            <text x="257.65" y="127.5"></text>
        </g>
        <g>
            <title>PageId::PageId (6 samples, 0.28%)</title>
            <rect x="1136.9" y="533" width="3.3" height="15.0" fill="rgb(214,84,15)" rx="2" ry="2"/>
            <text x="1139.91" y="543.5"></text>
        </g>
        <g>
            <title>__pthread_once_slow (603 samples, 27.97%)</title>
            <rect x="18.2" y="405" width="330.0" height="15.0" fill="rgb(228,194,33)" rx="2" ry="2"/>
            <text x="21.21" y="415.5">__pthread_once_slow</text>
        </g>
        <g>
            <title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)
            </title>
            <rect x="806.3" y="421" width="0.6" height="15.0" fill="rgb(210,144,26)" rx="2" ry="2"/>
            <text x="809.34" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1088.2" y="405" width="1.6" height="15.0" fill="rgb(233,12,36)" rx="2" ry="2"/>
            <text x="1091.20" y="415.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (59 samples, 2.74%)</title>
            <rect x="758.7" y="133" width="32.3" height="15.0" fill="rgb(229,94,13)" rx="2" ry="2"/>
            <text x="761.72" y="143.5">st..</text>
        </g>
        <g>
            <title>operator (3 samples, 0.14%)</title>
            <rect x="1153.3" y="341" width="1.7" height="15.0" fill="rgb(232,141,23)" rx="2" ry="2"/>
            <text x="1156.33" y="351.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (5 samples, 0.23%)</title>
            <rect x="620.8" y="101" width="2.7" height="15.0" fill="rgb(253,14,50)" rx="2" ry="2"/>
            <text x="623.80" y="111.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="254.1" y="165" width="0.5" height="15.0" fill="rgb(245,160,12)" rx="2" ry="2"/>
            <text x="257.10" y="175.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="347.1" y="197" width="1.1" height="15.0" fill="rgb(240,23,12)" rx="2" ry="2"/>
            <text x="350.14" y="207.5"></text>
        </g>
        <g>
            <title>std::_Construct&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1115.6" y="469" width="1.1" height="15.0" fill="rgb(248,181,15)" rx="2" ry="2"/>
            <text x="1118.57" y="479.5"></text>
        </g>
        <g>
            <title>malloc_consolidate (3 samples, 0.14%)</title>
            <rect x="1160.4" y="325" width="1.7" height="15.0" fill="rgb(211,22,54)" rx="2" ry="2"/>
            <text x="1163.45" y="335.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (27 samples, 1.25%)</title>
            <rect x="791.0" y="165" width="14.8" height="15.0" fill="rgb(246,2,28)" rx="2" ry="2"/>
            <text x="794.01" y="175.5"></text>
        </g>
        <g>
            <title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (837 samples, 38.82%)</title>
            <rect x="348.2" y="373" width="458.1" height="15.0" fill="rgb(245,224,54)" rx="2" ry="2"/>
            <text x="351.24" y="383.5">std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base,</text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_commonV2::_M_complete_async (393 samples, 18.23%)</title>
            <rect x="819.5" y="501" width="215.1" height="15.0" fill="rgb(242,215,20)" rx="2" ry="2"/>
            <text x="822.47" y="511.5">std::__future_base::_Async_s..</text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1088.2" y="453" width="2.2" height="15.0" fill="rgb(218,33,33)" rx="2" ry="2"/>
            <text x="1091.20" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1088.2" y="421" width="1.6" height="15.0" fill="rgb(253,86,0)" rx="2" ry="2"/>
            <text x="1091.20" y="431.5"></text>
        </g>
        <g>
            <title>Page::generateId (4 samples, 0.19%)</title>
            <rect x="16.0" y="229" width="2.2" height="15.0" fill="rgb(221,83,16)" rx="2" ry="2"/>
            <text x="19.02" y="239.5"></text>
        </g>
        <g>
            <title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title>
            <rect x="1111.2" y="357" width="0.5" height="15.0" fill="rgb(215,20,49)" rx="2" ry="2"/>
            <text x="1114.19" y="367.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;char&gt; (1 samples, 0.05%)</title>
            <rect x="1089.3" y="373" width="0.5" height="15.0" fill="rgb(219,168,25)" rx="2" ry="2"/>
            <text x="1092.29" y="383.5"></text>
        </g>
        <g>
            <title>__pthread_once_slow (393 samples, 18.23%)</title>
            <rect x="819.5" y="437" width="215.1" height="15.0" fill="rgb(211,20,28)" rx="2" ry="2"/>
            <text x="822.47" y="447.5">__pthread_once_slow</text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageId&gt;::construct&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1187.8" y="501" width="0.6" height="15.0" fill="rgb(246,47,48)" rx="2" ry="2"/>
            <text x="1190.81" y="511.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1088.2" y="533" width="2.2" height="15.0" fill="rgb(221,140,42)" rx="2" ry="2"/>
            <text x="1091.20" y="543.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_commonV2::_M_complete_async (3 samples, 0.14%)</title>
            <rect x="806.9" y="485" width="1.6" height="15.0" fill="rgb(227,211,44)" rx="2" ry="2"/>
            <text x="809.88" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (15 samples, 0.70%)</title>
            <rect x="1053.7" y="293" width="8.2" height="15.0" fill="rgb(215,60,33)" rx="2" ry="2"/>
            <text x="1056.72" y="303.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_base&lt;PageId, (73 samples, 3.39%)</title>
            <rect x="718.8" y="133" width="39.9" height="15.0" fill="rgb(220,87,22)" rx="2" ry="2"/>
            <text x="721.77" y="143.5">std..</text>
        </g>
        <g>
            <title>malloc_consolidate (5 samples, 0.23%)</title>
            <rect x="1155.0" y="421" width="2.7" height="15.0" fill="rgb(229,84,53)" rx="2" ry="2"/>
            <text x="1157.97" y="431.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (14 samples, 0.65%)</title>
            <rect x="1069.6" y="485" width="7.7" height="15.0" fill="rgb(231,227,24)" rx="2" ry="2"/>
            <text x="1072.59" y="495.5"></text>
        </g>
        <g>
            <title>__GI__IO_setb (1 samples, 0.05%)</title>
            <rect x="1103.5" y="453" width="0.6" height="15.0" fill="rgb(231,180,27)" rx="2" ry="2"/>
            <text x="1106.53" y="463.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1088.2" y="485" width="2.2" height="15.0" fill="rgb(249,25,26)" rx="2" ry="2"/>
            <text x="1091.20" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (21 samples, 0.97%)</title>
            <rect x="254.6" y="165" width="11.5" height="15.0" fill="rgb(218,60,8)" rx="2" ry="2"/>
            <text x="257.65" y="175.5"></text>
        </g>
        <g>
            <title>main (701 samples, 32.51%)</title>
            <rect x="806.3" y="597" width="383.7" height="15.0" fill="rgb(219,118,16)" rx="2" ry="2"/>
            <text x="809.34" y="607.5">main</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (104 samples, 4.82%)</title>
            <rect x="619.7" y="165" width="56.9" height="15.0" fill="rgb(222,60,13)" rx="2" ry="2"/>
            <text x="622.70" y="175.5">std::_..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (8 samples, 0.37%)</title>
            <rect x="1140.2" y="517" width="4.4" height="15.0" fill="rgb(248,88,14)" rx="2" ry="2"/>
            <text x="1143.19" y="527.5"></text>
        </g>
        <g>
            <title>operator (3 samples, 0.14%)</title>
            <rect x="1149.0" y="437" width="1.6" height="15.0" fill="rgb(243,103,1)" rx="2" ry="2"/>
            <text x="1151.95" y="447.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (9 samples, 0.42%)</title>
            <rect x="1090.4" y="501" width="4.9" height="15.0" fill="rgb(254,219,44)" rx="2" ry="2"/>
            <text x="1093.39" y="511.5"></text>
        </g>
        <g>
            <title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (35 samples, 1.62%)</title>
            <rect x="1046.6" y="469" width="19.2" height="15.0" fill="rgb(247,150,16)" rx="2" ry="2"/>
            <text x="1049.60" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="16.0" y="181" width="2.2" height="15.0" fill="rgb(224,121,50)" rx="2" ry="2"/>
            <text x="19.02" y="191.5"></text>
        </g>
        <g>
            <title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (603 samples, 27.97%)</title>
            <rect x="18.2" y="373" width="330.0" height="15.0" fill="rgb(209,191,42)" rx="2" ry="2"/>
            <text x="21.21" y="383.5">std::function&lt;std::unique_ptr&lt;std::__future_..</text>
        </g>
        <g>
            <title>malloc_consolidate (2 samples, 0.09%)</title>
            <rect x="1144.6" y="517" width="1.1" height="15.0" fill="rgb(251,98,18)" rx="2" ry="2"/>
            <text x="1147.57" y="527.5"></text>
        </g>
        <g>
            <title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1186.2" y="485" width="0.5" height="15.0" fill="rgb(223,169,41)" rx="2" ry="2"/>
            <text x="1189.17" y="495.5"></text>
        </g>
        <g>
            <title>SimpleNetworkGenerator::generateNetworkOfSize (25 samples, 1.16%)</title>
            <rect x="1101.3" y="565" width="13.7" height="15.0" fill="rgb(246,138,14)" rx="2" ry="2"/>
            <text x="1104.34" y="575.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1141.8" y="501" width="2.8" height="15.0" fill="rgb(220,5,54)" rx="2" ry="2"/>
            <text x="1144.84" y="511.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;Page (14 samples, 0.65%)</title>
            <rect x="10.5" y="261" width="7.7" height="15.0" fill="rgb(213,152,5)" rx="2" ry="2"/>
            <text x="13.55" y="271.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (1 samples, 0.05%)</title>
            <rect x="1186.2" y="437" width="0.5" height="15.0" fill="rgb(245,65,17)" rx="2" ry="2"/>
            <text x="1189.17" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="389" width="1.1" height="15.0" fill="rgb(212,23,1)" rx="2" ry="2"/>
            <text x="1191.36" y="399.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (837 samples, 38.82%)</title>
            <rect x="348.2" y="309" width="458.1" height="15.0" fill="rgb(245,213,28)" rx="2" ry="2"/>
            <text x="351.24" y="319.5">std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer..</text>
        </g>
        <g>
            <title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (837 samples, 38.82%)</title>
            <rect x="348.2" y="357" width="458.1" height="15.0" fill="rgb(212,229,46)" rx="2" ry="2"/>
            <text x="351.24" y="367.5">std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Re..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="405" width="1.1" height="15.0" fill="rgb(232,100,35)" rx="2" ry="2"/>
            <text x="1191.36" y="415.5"></text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::pool&lt;Page (10 samples, 0.46%)</title>
            <rect x="10.5" y="245" width="5.5" height="15.0" fill="rgb(245,206,19)" rx="2" ry="2"/>
            <text x="13.55" y="255.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (2 samples, 0.09%)</title>
            <rect x="347.1" y="133" width="1.1" height="15.0" fill="rgb(206,128,34)" rx="2" ry="2"/>
            <text x="350.14" y="143.5"></text>
        </g>
        <g>
            <title>__gthread_once (3 samples, 0.14%)</title>
            <rect x="806.9" y="437" width="1.6" height="15.0" fill="rgb(254,120,29)" rx="2" ry="2"/>
            <text x="809.88" y="447.5"></text>
        </g>
        <g>
            <title>PageId::~PageId (3 samples, 0.14%)</title>
            <rect x="1088.2" y="437" width="1.6" height="15.0" fill="rgb(214,198,33)" rx="2" ry="2"/>
            <text x="1091.20" y="447.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1115.0" y="485" width="0.6" height="15.0" fill="rgb(249,173,25)" rx="2" ry="2"/>
            <text x="1118.02" y="495.5"></text>
        </g>
        <g>
            <title>std::swap&lt;PageId*&gt; (1 samples, 0.05%)</title>
            <rect x="1098.1" y="357" width="0.5" height="15.0" fill="rgb(225,160,14)" rx="2" ry="2"/>
            <text x="1101.05" y="367.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (837 samples, 38.82%)</title>
            <rect x="348.2" y="325" width="458.1" height="15.0" fill="rgb(218,82,30)" rx="2" ry="2"/>
            <text x="351.24" y="335.5">std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer..</text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (96 samples, 4.45%)</title>
            <rect x="624.1" y="69" width="52.5" height="15.0" fill="rgb(247,4,8)" rx="2" ry="2"/>
            <text x="627.08" y="79.5">std::..</text>
        </g>
        <g>
            <title>__GI___libc_free (1 samples, 0.05%)</title>
            <rect x="1159.4" y="245" width="0.5" height="15.0" fill="rgb(218,47,14)" rx="2" ry="2"/>
            <text x="1162.35" y="255.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples,
                0.65%)
            </title>
            <rect x="10.5" y="517" width="7.7" height="15.0" fill="rgb(214,41,31)" rx="2" ry="2"/>
            <text x="13.55" y="527.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;Page&gt;::construct&lt;Page, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="501" width="1.7" height="15.0" fill="rgb(235,114,44)" rx="2" ry="2"/>
            <text x="1104.34" y="511.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1119.9" y="469" width="0.6" height="15.0" fill="rgb(233,37,4)" rx="2" ry="2"/>
            <text x="1122.94" y="479.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1093.1" y="469" width="1.7" height="15.0" fill="rgb(237,131,50)" rx="2" ry="2"/>
            <text x="1096.13" y="479.5"></text>
        </g>
        <g>
            <title>std::__uninitialized_move_if_noexcept_a&lt;PageId*, (2 samples, 0.09%)</title>
            <rect x="1188.4" y="501" width="1.1" height="15.0" fill="rgb(220,150,27)" rx="2" ry="2"/>
            <text x="1191.36" y="511.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;PageId&gt;::deallocate (3 samples, 0.14%)</title>
            <rect x="1160.4" y="357" width="1.7" height="15.0" fill="rgb(229,226,10)" rx="2" ry="2"/>
            <text x="1163.45" y="367.5"></text>
        </g>
        <g>
            <title>std::__detail::_Equal_helper&lt;PageId, (73 samples, 3.39%)</title>
            <rect x="718.8" y="117" width="39.9" height="15.0" fill="rgb(227,194,11)" rx="2" ry="2"/>
            <text x="721.77" y="127.5">std..</text>
        </g>
        <g>
            <title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, (5 samples, 0.23%)</title>
            <rect x="1098.6" y="517" width="2.7" height="15.0" fill="rgb(216,130,42)" rx="2" ry="2"/>
            <text x="1101.60" y="527.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="373" width="0.6" height="15.0" fill="rgb(209,100,23)" rx="2" ry="2"/>
            <text x="809.34" y="383.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1187.8" y="453" width="0.6" height="15.0" fill="rgb(216,48,53)" rx="2" ry="2"/>
            <text x="1190.81" y="463.5"></text>
        </g>
        <g>
            <title>__GI__IO_default_xsputn (1 samples, 0.05%)</title>
            <rect x="1106.3" y="437" width="0.5" height="15.0" fill="rgb(221,70,15)" rx="2" ry="2"/>
            <text x="1109.26" y="447.5"></text>
        </g>
        <g>
            <title>operator (2 samples, 0.09%)</title>
            <rect x="1107.4" y="421" width="1.1" height="15.0" fill="rgb(250,34,6)" rx="2" ry="2"/>
            <text x="1110.36" y="431.5"></text>
        </g>
        <g>
            <title>operator (1 samples, 0.05%)</title>
            <rect x="1115.0" y="453" width="0.6" height="15.0" fill="rgb(223,191,43)" rx="2" ry="2"/>
            <text x="1118.02" y="463.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (2 samples, 0.09%)</title>
            <rect x="1159.4" y="261" width="1.0" height="15.0" fill="rgb(246,55,45)" rx="2" ry="2"/>
            <text x="1162.35" y="271.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (9 samples, 0.42%)</title>
            <rect x="1090.4" y="517" width="4.9" height="15.0" fill="rgb(237,154,33)" rx="2" ry="2"/>
            <text x="1093.39" y="527.5"></text>
        </g>
        <g>
            <title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;PageId*&gt; (2 samples, 0.09%)</title>
            <rect x="1159.4" y="373" width="1.0" height="15.0" fill="rgb(222,81,52)" rx="2" ry="2"/>
            <text x="1162.35" y="383.5"></text>
        </g>
        <g>
            <title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;Page (14 samples,
                0.65%)
            </title>
            <rect x="10.5" y="533" width="7.7" height="15.0" fill="rgb(242,227,6)" rx="2" ry="2"/>
            <text x="13.55" y="543.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (1 samples, 0.05%)</title>
            <rect x="1102.4" y="261" width="0.6" height="15.0" fill="rgb(249,145,52)" rx="2" ry="2"/>
            <text x="1105.43" y="271.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1186.7" y="469" width="1.1" height="15.0" fill="rgb(233,0,21)" rx="2" ry="2"/>
            <text x="1189.72" y="479.5"></text>
        </g>
        <g>
            <title>std::_Vector_base&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1160.4" y="389" width="1.7" height="15.0" fill="rgb(217,159,39)" rx="2" ry="2"/>
            <text x="1163.45" y="399.5"></text>
        </g>
        <g>
            <title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;std::pair&lt;PageId (837 samples, 38.82%)</title>
            <rect x="348.2" y="469" width="458.1" height="15.0" fill="rgb(248,82,46)" rx="2" ry="2"/>
            <text x="351.24" y="479.5">std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;st..</text>
        </g>
        <g>
            <title>__gthread_mutex_lock (3 samples, 0.14%)</title>
            <rect x="10.5" y="197" width="1.7" height="15.0" fill="rgb(232,106,53)" rx="2" ry="2"/>
            <text x="13.55" y="207.5"></text>
        </g>
        <g>
            <title>clone (1 samples, 0.05%)</title>
            <rect x="806.3" y="293" width="0.6" height="15.0" fill="rgb(223,94,15)" rx="2" ry="2"/>
            <text x="809.34" y="303.5"></text>
        </g>
        <g>
            <title>std::__shared_ptr&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;MultiThreadedPageRankComputer::pool&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="806.3" y="453" width="0.6" height="15.0" fill="rgb(248,63,3)" rx="2" ry="2"/>
            <text x="809.34" y="463.5"></text>
        </g>
        <g>
            <title>PageId::operator== (7 samples, 0.32%)</title>
            <rect x="1173.6" y="437" width="3.8" height="15.0" fill="rgb(241,160,54)" rx="2" ry="2"/>
            <text x="1176.58" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Equal_helper&lt;PageId, (10 samples, 0.46%)</title>
            <rect x="1171.9" y="469" width="5.5" height="15.0" fill="rgb(231,133,31)" rx="2" ry="2"/>
            <text x="1174.94" y="479.5"></text>
        </g>
        <g>
            <title>std::mutex::lock (281 samples, 13.03%)</title>
            <rect x="371.8" y="213" width="153.8" height="15.0" fill="rgb(212,37,36)" rx="2" ry="2"/>
            <text x="374.77" y="223.5">std::mutex::lock</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (1 samples, 0.05%)</title>
            <rect x="1187.3" y="453" width="0.5" height="15.0" fill="rgb(247,175,11)" rx="2" ry="2"/>
            <text x="1190.26" y="463.5"></text>
        </g>
        <g>
            <title>tcache_get (1 samples, 0.05%)</title>
            <rect x="1115.0" y="421" width="0.6" height="15.0" fill="rgb(244,136,10)" rx="2" ry="2"/>
            <text x="1118.02" y="431.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="1101.3" y="373" width="1.7" height="15.0" fill="rgb(230,31,46)" rx="2" ry="2"/>
            <text x="1104.34" y="383.5"></text>
        </g>
        <g>
            <title>std::__future_base::_State_baseV2::_M_set_result(std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, (837 samples, 38.82%)</title>
            <rect x="348.2" y="453" width="458.1" height="15.0" fill="rgb(244,157,37)" rx="2" ry="2"/>
            <text x="351.24" y="463.5">std::__future_base::_State_baseV2::_M_set_result(std::function..</text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1108.5" y="389" width="0.5" height="15.0" fill="rgb(234,17,39)" rx="2" ry="2"/>
            <text x="1111.45" y="399.5"></text>
        </g>
        <g>
            <title>std::__detail::_Mod_range_hashing::operator() (5 samples, 0.23%)</title>
            <rect x="716.0" y="101" width="2.8" height="15.0" fill="rgb(227,170,7)" rx="2" ry="2"/>
            <text x="719.03" y="111.5"></text>
        </g>
        <g>
            <title>PageId::PageId (26 samples, 1.21%)</title>
            <rect x="251.9" y="245" width="14.2" height="15.0" fill="rgb(209,155,11)" rx="2" ry="2"/>
            <text x="254.91" y="255.5"></text>
        </g>
        <g>
            <title>__GI___libc_free (1 samples, 0.05%)</title>
            <rect x="1046.6" y="437" width="0.6" height="15.0" fill="rgb(236,8,42)" rx="2" ry="2"/>
            <text x="1049.60" y="447.5"></text>
        </g>
        <g>
            <title>_IO_str_init_static_internal (1 samples, 0.05%)</title>
            <rect x="1103.5" y="469" width="0.6" height="15.0" fill="rgb(248,47,33)" rx="2" ry="2"/>
            <text x="1106.53" y="479.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1097.0" y="341" width="0.5" height="15.0" fill="rgb(250,224,3)" rx="2" ry="2"/>
            <text x="1099.96" y="351.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1187.8" y="549" width="1.7" height="15.0" fill="rgb(213,203,30)" rx="2" ry="2"/>
            <text x="1190.81" y="559.5"></text>
        </g>
        <g>
            <title>std::hash&lt;std::__cxx11::basic_string&lt;char, (3 samples, 0.14%)</title>
            <rect x="689.2" y="133" width="1.7" height="15.0" fill="rgb(211,79,13)" rx="2" ry="2"/>
            <text x="692.21" y="143.5"></text>
        </g>
        <g>
            <title>std::call_once&lt;void (393 samples, 18.23%)</title>
            <rect x="819.5" y="469" width="215.1" height="15.0" fill="rgb(207,57,27)" rx="2" ry="2"/>
            <text x="822.47" y="479.5">std::call_once&lt;void</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (14 samples, 0.65%)</title>
            <rect x="275.4" y="117" width="7.7" height="15.0" fill="rgb(207,23,29)" rx="2" ry="2"/>
            <text x="278.45" y="127.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (11 samples, 0.51%)</title>
            <rect x="1047.7" y="389" width="6.0" height="15.0" fill="rgb(228,191,18)" rx="2" ry="2"/>
            <text x="1050.70" y="399.5"></text>
        </g>
        <g>
            <title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;PageId (11 samples, 0.51%)</title>
            <rect x="1149.0" y="453" width="6.0" height="15.0" fill="rgb(251,128,23)" rx="2" ry="2"/>
            <text x="1151.95" y="463.5"></text>
        </g>
        <g>
            <title>PageId::operator== (42 samples, 1.95%)</title>
            <rect x="306.6" y="85" width="23.0" height="15.0" fill="rgb(224,205,38)" rx="2" ry="2"/>
            <text x="309.64" y="95.5">P..</text>
        </g>
        <g>
            <title>std::__invoke_impl&lt;MultiThreadedPageRankComputer::{unnamed (14 samples, 0.65%)</title>
            <rect x="10.5" y="277" width="7.7" height="15.0" fill="rgb(223,224,10)" rx="2" ry="2"/>
            <text x="13.55" y="287.5"></text>
        </g>
        <g>
            <title>std::_Destroy&lt;PageId*, (15 samples, 0.70%)</title>
            <rect x="1053.7" y="405" width="8.2" height="15.0" fill="rgb(235,12,24)" rx="2" ry="2"/>
            <text x="1056.72" y="415.5"></text>
        </g>
        <g>
            <title>__GI___libc_malloc (1 samples, 0.05%)</title>
            <rect x="1115.0" y="437" width="0.6" height="15.0" fill="rgb(236,43,10)" rx="2" ry="2"/>
            <text x="1118.02" y="447.5"></text>
        </g>
        <g>
            <title>Page::getId (18 samples, 0.83%)</title>
            <rect x="808.5" y="549" width="9.9" height="15.0" fill="rgb(229,205,32)" rx="2" ry="2"/>
            <text x="811.53" y="559.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (4 samples, 0.19%)</title>
            <rect x="816.2" y="437" width="2.2" height="15.0" fill="rgb(206,38,36)" rx="2" ry="2"/>
            <text x="819.19" y="447.5"></text>
        </g>
        <g>
            <title>std::__detail::_Equal_helper&lt;PageId, (85 samples, 3.94%)</title>
            <rect x="283.1" y="117" width="46.5" height="15.0" fill="rgb(216,183,52)" rx="2" ry="2"/>
            <text x="286.11" y="127.5">std:..</text>
        </g>
        <g>
            <title>std::__detail::_Hash_code_base&lt;PageId, (4 samples, 0.19%)</title>
            <rect x="1169.7" y="469" width="2.2" height="15.0" fill="rgb(231,181,5)" rx="2" ry="2"/>
            <text x="1172.75" y="479.5"></text>
        </g>
        <g>
            <title>std::char_traits&lt;char&gt;::copy (1 samples, 0.05%)</title>
            <rect x="1116.1" y="325" width="0.6" height="15.0" fill="rgb(248,207,30)" rx="2" ry="2"/>
            <text x="1119.11" y="335.5"></text>
        </g>
        <g>
            <title>?? (1,454 samples, 67.44%)</title>
            <rect x="10.5" y="565" width="795.8" height="15.0" fill="rgb(237,141,26)" rx="2" ry="2"/>
            <text x="13.55" y="575.5">??</text>
        </g>
        <g>
            <title>MultiThreadedPageRankComputer::poolAndWait&lt;Page (3 samples, 0.14%)</title>
            <rect x="806.9" y="549" width="1.6" height="15.0" fill="rgb(214,120,31)" rx="2" ry="2"/>
            <text x="809.88" y="559.5"></text>
        </g>
        <g>
            <title>std::vector&lt;PageId, (3 samples, 0.14%)</title>
            <rect x="1111.7" y="533" width="1.7" height="15.0" fill="rgb(207,56,31)" rx="2" ry="2"/>
            <text x="1114.73" y="543.5"></text>
        </g>
        <g>
            <title>std::__detail::_Equal_helper&lt;PageId, (2 samples, 0.09%)</title>
            <rect x="1077.3" y="469" width="1.0" height="15.0" fill="rgb(242,110,32)" rx="2" ry="2"/>
            <text x="1080.25" y="479.5"></text>
        </g>
        <g>
            <title>std::_Hash_bytes(void (9 samples, 0.42%)</title>
            <rect x="1180.7" y="453" width="4.9" height="15.0" fill="rgb(222,220,51)" rx="2" ry="2"/>
            <text x="1183.70" y="463.5"></text>
        </g>
        <g>
            <title>PageId::PageId (8 samples, 0.37%)</title>
            <rect x="1140.2" y="533" width="4.4" height="15.0" fill="rgb(223,137,25)" rx="2" ry="2"/>
            <text x="1143.19" y="543.5"></text>
        </g>
        <g>
            <title>_int_free (5 samples, 0.23%)</title>
            <rect x="1085.5" y="533" width="2.7" height="15.0" fill="rgb(229,119,10)" rx="2" ry="2"/>
            <text x="1088.46" y="543.5"></text>
        </g>
        <g>
            <title>std::_Hashtable&lt;PageId, (35 samples, 1.62%)</title>
            <rect x="1046.6" y="533" width="19.2" height="15.0" fill="rgb(248,72,16)" rx="2" ry="2"/>
            <text x="1049.60" y="543.5"></text>
        </g>
        <g>
            <title>PageId::PageId (2 samples, 0.09%)</title>
            <rect x="1111.7" y="485" width="1.1" height="15.0" fill="rgb(224,121,41)" rx="2" ry="2"/>
            <text x="1114.73" y="495.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (1 samples, 0.05%)</title>
            <rect x="1108.5" y="421" width="0.5" height="15.0" fill="rgb(208,143,41)" rx="2" ry="2"/>
            <text x="1111.45" y="431.5"></text>
        </g>
        <g>
            <title>std::__distance&lt;char*&gt; (1 samples, 0.05%)</title>
            <rect x="1135.8" y="453" width="0.6" height="15.0" fill="rgb(219,212,18)" rx="2" ry="2"/>
            <text x="1138.82" y="463.5"></text>
        </g>
        <g>
            <title>operator (5 samples, 0.23%)</title>
            <rect x="1136.9" y="453" width="2.7" height="15.0" fill="rgb(238,207,16)" rx="2" ry="2"/>
            <text x="1139.91" y="463.5"></text>
        </g>
        <g>
            <title>std::__cxx11::basic_string&lt;char, (36 samples, 1.67%)</title>
            <rect x="1116.7" y="533" width="19.7" height="15.0" fill="rgb(211,42,48)" rx="2" ry="2"/>
            <text x="1119.66" y="543.5"></text>
        </g>
    </g>
</svg>
